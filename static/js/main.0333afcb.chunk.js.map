{"version":3,"sources":["services/auth.service.tsx","context/UserDetailsContext.tsx","util/decodePostgressArray.ts","components/Apollo.tsx","components/Footer/index.tsx","generated/graphql.tsx","hooks/useRouter.ts","hooks/useRedirectReferenda.ts","components/MenuBar/index.tsx","context/ModalContext.tsx","ui-components/Button.tsx","ui-components/Modal.tsx","types.ts","components/Modal.tsx","context/NotificationContext.tsx","ui-components/DismissableNotification.tsx","components/Notifications.tsx","context/ApiContext.tsx","ui-components/Field.tsx","ui-components/Group.tsx","ui-components/Input.tsx","ui-components/Form.tsx","ui-components/Markdown.tsx","ui-components/MarkdownEditor.tsx","util/messages.ts","components/ContentForm.tsx","components/TitleForm.tsx","util/cleanError.ts","ui-components/FilteredError.tsx","screens/CreatePost/TopicsRadio.tsx","screens/CreatePost/index.tsx","ui-components/Avatar.tsx","ui-components/InlineTag.tsx","ui-components/CreationLabel.tsx","ui-components/UpdateLabel.tsx","components/Reactionbar/ReactionButton.tsx","components/Reactionbar/reactions.ts","components/Reactionbar/CommentReactionBar.tsx","components/ReportButton/index.tsx","components/Comment/EditableCommentContent.tsx","components/Comment/Comment.tsx","components/Comment/Comments.tsx","global/statuses.ts","ui-components/StatusTag.tsx","components/Post/PostContent.tsx","components/EditablePostContent.tsx","components/NoPostFound.tsx","components/Reactionbar/PostReactionBar.tsx","components/SubscriptionButton/SubscriptionButton.tsx","util/getExtensionUrl.ts","components/ExtensionNotDetected.tsx","global/networkConstants.ts","util/getNetwork.ts","util/formatBnBalance.ts","components/Post/GovernanceSideBar/Proposals/ProposalVoteInfo.tsx","ui-components/Loader.tsx","util/shortenAddress.ts","ui-components/Address.tsx","ui-components/AddressDropdown.tsx","ui-components/HelperTooltip.tsx","ui-components/AccountSelectionForm.tsx","components/Post/GovernanceSideBar/Proposals/SecondProposal.tsx","ui-components/VoteProgress.tsx","components/Post/GovernanceSideBar/Referenda/ReferendumVoteInfo.tsx","util/inputToBn.ts","ui-components/BalanceInput.tsx","ui-components/AyeNayButtons.tsx","components/Balance.tsx","components/Post/GovernanceSideBar/Referenda/VoteReferendum.tsx","components/Post/GovernanceSideBar/VoteMotion.tsx","components/Post/GovernanceSideBar/index.tsx","components/Post/PostCommentForm.tsx","ui-components/OnchainInfoWrapper.tsx","components/Post/PostGovernanceInfo/PostMotionInfo.tsx","components/Post/PostGovernanceInfo/PostProposalInfo.tsx","components/Post/PostGovernanceInfo/PostReferendumInfo.tsx","components/Post/PostGovernanceInfo/PostTreasuryInfo.tsx","components/Post/Post.tsx","screens/DiscussionPost/index.tsx","ui-components/InfoBox.tsx","components/DiscussionCard.tsx","components/Listings/DiscussionsListing.tsx","screens/Discussions/Discussions.tsx","screens/Discussions/index.tsx","ui-components/TopicTag.tsx","ui-components/OnchainCreationLabel.tsx","components/GovernanceCard.tsx","components/Listings/MotionsListing.tsx","global/post_types.ts","screens/OnChain/Motions/index.tsx","screens/Home/LatestDiscussions/index.tsx","components/Listings/ProposalsListing.tsx","global/post_topics.ts","screens/Home/LatestProposals/index.tsx","components/Listings/ReferendaListing.tsx","screens/Home/LatestReferenda/index.tsx","components/Listings/TreasuryListing.tsx","screens/Home/LatestTreasury/index.tsx","screens/Home/index.tsx","assets/privacy-policy.ts","assets/terms-and-conditions.ts","screens/LegalDocuments/index.tsx","assets/terms-of-website.ts","components/Login/Web2Login.tsx","util/getEncodedAddress.ts","components/Login/Web3Login.tsx","screens/LoginForm/index.tsx","screens/MotionPost/index.tsx","screens/NotFound/index.tsx","screens/NotificationSettings/index.tsx","screens/OnChain/Proposals/index.tsx","screens/OnChain/Referenda/index.tsx","screens/OnChain/Treasury/index.tsx","screens/OnChain/index.tsx","screens/ProposalPost/index.tsx","screens/ReferendumPost/index.tsx","screens/RequestResetPassword/index.tsx","screens/RequestResetPassword/ResetPassword/index.tsx","screens/Settings/address.tsx","screens/Settings/email.tsx","screens/Settings/fullname.tsx","screens/Settings/password.tsx","screens/Settings/username.tsx","screens/Settings/index.tsx","screens/SignupForm/index.tsx","screens/TreasuryPost/index.tsx","hooks/useRedirectMotion.ts","screens/UndoEmailChange/index.tsx","screens/VerifyEmail/index.tsx","themes/theme.ts","ui-components/GlobalStyle.tsx","App.tsx","index.tsx","assets/polkassembly-logo.png"],"names":["storeLocalStorageToken","token","localStorage","setItem","getLocalStorageToken","getItem","handleLoginUser","currentUser","user","setUserDetailsContextState","prevState","email","email_verified","id","name","username","logout","removeItem","handleTokenChange","initialUserDetailsContext","addresses","notification","newProposal","ownProposal","postCreated","postParticipated","picture","Error","accessToken","tokenPayload","jwt","decode","sub","claims","Number","pgArray","addressArray","replace","length","split","decodePostgresArray","UserDetailsContext","createContext","UserDetailsProvider","children","useState","userDetailsContextState","Provider","value","fetchAccessToken","fetch","process","body","JSON","stringify","credentials","headers","method","handleResponse","response","a","ok","json","res","data","isTokenValidOrUndefined","exp","Date","now","setAuthorizationLink","setContext","authorization","Apollo","useContext","publicKey","httpLink","HttpLink","uri","tokenRefreshLink","TokenRefreshLink","accessTokenField","handleError","err","console","error","handleFetch","verify","e","log","link","ApolloLink","from","client","ApolloClient","cache","InMemoryCache","BlockIndexOrderByInput","BlockNumberOrderByInput","CacheControlScope","Comment_Reactions_Constraint","Comment_Reactions_Select_Column","Comment_Reactions_Update_Column","Comments_Constraint","Comments_Select_Column","Comments_Update_Column","CouncilMemberOrderByInput","CouncilOrderByInput","EraOrderByInput","HeartBeatOrderByInput","MotionOrderByInput","MotionProposalArgumentOrderByInput","MotionStatusOrderByInput","MutationType","NominationOrderByInput","OfflineValidatorOrderByInput","Onchain_Links_Constraint","Onchain_Links_Select_Column","Onchain_Links_Update_Column","Order_By","Post_Reactions_Constraint","Post_Reactions_Select_Column","Post_Reactions_Update_Column","Post_Topics_Constraint","Post_Topics_Select_Column","Post_Topics_Update_Column","Post_Types_Constraint","Post_Types_Select_Column","Post_Types_Update_Column","Posts_Constraint","Posts_Select_Column","Posts_Update_Column","PreimageArgumentOrderByInput","PreimageOrderByInput","PreimageStatusOrderByInput","PrismaDatabase","ProposalOrderByInput","ProposalStatusOrderByInput","ReferendumOrderByInput","ReferendumStatusOrderByInput","RewardOrderByInput","SessionOrderByInput","SlashingOrderByInput","StakeOrderByInput","TotalIssuanceOrderByInput","TreasurySpendProposalOrderByInput","TreasuryStatusOrderByInput","ValidatorOrderByInput","styled","className","Menu","Item","moment","year","as","Link","to","PostReactionFieldsFragmentDoc","gql","CommentReactionFieldsFragmentDoc","TopicFragmentDoc","CommentFieldsFragmentDoc","DiscussionPostFragmentDoc","OnchainLinkMotionPreimageFragmentDoc","OnchainLinkMotionTreasuryFragmentDoc","OnchainLinkMotionFragmentDoc","MotionPostFragmentDoc","OnchainLinkProposalFragmentDoc","ProposalPostFragmentDoc","OnchainLinkReferendumFragmentDoc","ReferendumPostFragmentDoc","OnchainLinkTreasuryProposalFragmentDoc","TreasuryProposalPostFragmentDoc","EditCommentDocument","LoginDocument","AddressLoginStartDocument","AddressLoginDocument","LogoutDocument","GetCouncilMembersDocument","EditPostDocument","AddPostCommentDocument","PostReactionsDocument","CommentReactionsDocument","AddPostReactionDocument","AddCommentReactionDocument","DeletePostReactionDocument","DeleteCommentReactionDocument","ReportContentDocument","PostSubscribeDocument","usePostSubscribeMutation","baseOptions","ApolloReactHooks","PostUnsubscribeDocument","SubscriptionDocument","CreatePostDocument","Post_TopicsDocument","DiscussionPostAndCommentsDocument","LatestDiscussionPostsDocument","useLatestDiscussionPostsQuery","MotionPostAndCommentsDocument","ChangeNotificationPreferenceDocument","LatestMotionPostsDocument","LatestDemocracyProposalPostsDocument","useLatestDemocracyProposalPostsQuery","LatestReferendaPostsDocument","useLatestReferendaPostsQuery","LatestDemocracyTreasuryProposalPostsDocument","useLatestDemocracyTreasuryProposalPostsQuery","ProposalPostAndCommentsDocument","ReferendumPostAndCommentsDocument","ResetPasswordDocument","RequestResetPasswordDocument","ChangeNameDocument","ChangeUsernameDocument","ChangeEmailDocument","ChangePasswordDocument","AddressLinkStartDocument","AddressLinkConfirmDocument","AddressUnlinkDocument","ResendVerifyEmailTokenDocument","SignupDocument","TreasuryProposalPostAndCommentsDocument","UndoEmailChangeDocument","VerifyEmailDocument","params","useParams","location","useLocation","history","useHistory","match","useRouteMatch","useMemo","query","queryString","parse","search","pathname","refId","useRouter","useEffect","push","logoutMutation","contentItems","content","icon","key","loggedOutItems","loggedInItems","onClick","userMenu","Icon","inverted","caretIcon","menuVisible","setMenuVisible","pushableHeight","setPushableHeight","handleClose","Responsive","maxWidth","onlyTablet","widths","NavLink","alt","src","logo","Sidebar","Pushable","style","height","direction","stackable","vertical","visible","map","item","SidebarPusher","minWidth","onlyComputer","borderless","position","Dropdown","trigger","initialModalContext","dismissModal","modal","setModal","ModalContext","ModalProvider","props","Role","NotificationStatus","VoteThresholdEnum","buttons","title","otherProps","centered","dimmer","open","size","Header","Content","Description","Actions","MyModal","primary","onClose","initialNotificationContext","deQueueNotification","notificationsQueue","Map","queueNotification","NotificationContext","NotificationProvider","globalIndex","setGlobalIndex","setNotificationsQueue","queue","useRef","removeKey","current","has","delete","set","setTimeout","onDismiss","ERROR","SUCCESS","WARNING","header","message","color","status","Message","Array","ApiContext","React","ApiContextProvider","api","setApi","apiReady","setApiReady","provider","WsProvider","ApiPromise","create","apiResult","isReady","then","connect","catch","Field","Group","invalid","Input","Form","standalone","StyledForm","SUIForm","isPreview","md","source","StyledTextArea","div","MarkdownEditor","listCommands","commands","boldCommand","italicCommand","headerCommand","linkCommand","quoteCommand","strikeThroughCommand","codeCommand","imageCommand","orderedListCommand","unorderedListCommand","selectedTab","setSelectedTab","generateMarkdownPreview","markdown","Promise","resolve","minEditorHeight","minPreviewHeight","onChange","onTabChange","errorContent","messages","errorTitle","width","placeholder","type","text","cleanError","onTopicSelection","selectedTopic","setSelectedTopic","handleTopicSelection","event","topicId","post_topics","Radio","checked","label","setTitle","setContent","setSetlectedTopic","useForm","control","errors","handleSubmit","createPostMutation","loading","postSubscribeMutation","isSending","setIsSending","Grid","Column","mobile","tablet","computer","largeScreen","widescreen","currentTarget","rules","required","variables","userId","insert_posts","affected_rows","returning","postId","postSubscribe","createSubscription","disabled","only","displayname","substring","Label","created_at","topic","Popup","hoverable","fromNow","updated_at","reaction","count","userNames","commentId","refetch","addPostReactionMutation","useAddCommentReactionMutation","addCommentReactionMutation","useDeletePostReactionMutation","deletePostReactionMutation","useDeleteCommentReactionMutation","deleteCommentReactionMutation","reacted","includes","_refetch","popupContent","slice","join","button","reactions","reactionMap","forEach","comment_reactions","reacting_user","Object","keys","reasonOptions","reason","ReportButton","contentId","showModal","setShowModal","setReason","comments","setComments","reportContentMutation","content_id","network","reportContent","secondary","fluid","selection","options","toString","TextArea","authorId","isEditing","setIsEditing","newContent","setNewContent","toggleEdit","setValue","editCommentMutation","update_comments","comment","author","proposalStatus","PROPOSED","TABLED","referendumStatus","CANCELLED","EXECUTED","NOTPASSED","PASSED","STARTED","VETOED","motionStatus","APPROVED","DISAPPROVED","VOTED","attrs","onchainId","post","postStatus","newTitle","setNewTitle","editPostMutation","update_posts","NoPostFound","isMotion","isProposal","isReferendum","isTreasuryProposal","postType","post_reactions","SubscriptionButton","subscribed","setSubscribed","postUnsubscribeMutation","useSubscriptionQuery","subscription","postUnsubscribe","browser","detect","ExtensionNotDetected","getExtensionUrl","href","KUSAMA","POLKADOT","tokenSymbol","chainProperties","ss58Format","tokenDecimals","possibleNetworks","values","networkConstants","getNetwork","valueString","suffix","prefix","padStart","comma","numberAfterComma","withThousandDelimitor","withUnit","unit","proposalId","seconds","setSeconds","deposit","setDeposit","currentNetwork","unsubscribe","derive","democracy","proposals","proposal","index","toNumber","balance","formatBnBalance","unsub","columns","divided","Row","parseInt","Dimmer","active","address","accountName","displayInline","display","setDisplay","accounts","info","identity","nickname","theme","shortenAddress","defaultAddress","filterAccounts","onAccountChange","selectedAddress","setSelectedAddress","filteredAccounts","filter","elem","dropdownList","addressOptions","account","meta","pointing","popupStyle","fontSize","marginLeft","StyledIcon","HelperTooltip","getAccounts","isLoading","loadingStatus","setLoadingStatus","secondProposal","tx","second","signAndSend","isInBlock","asInBlock","isBroadcast","noAccount","bnToIntBalance","bn","bnToStringBalanceDelimitor","ayeVotes","nayVotes","passingThreshold","nayVotesNumber","passingThresholdNumber","isPassing","lt","ayeVotesNumber","totalVotesNumber","add","passingThresholdPercent","ayePercent","right","Progress","percent","left","referendumId","threshold","ZERO","BN","turnout","setTurnout","electorate","setElectorate","setPassingThreshold","setAyeVotes","setNayVotes","referendumInfoOf","_info","unwrapOr","isOngoing","asOngoing","tally","ayes","nays","balances","totalIssuance","result","getPassingThreshold","isValid","TWO","TEN","tokenDecimal","tokenDecimalBN","isValidNumber","isZeroable","bnEqZero","eq","pow","subn","bitLength","helpText","isValidInput","setIsValidInput","input","isDecimalValue","modString","mod","mul","inputToBn","onClickAye","onClickNay","basic","Balance","setBalance","freeBalance","undefined","lockedBalance","setLockedBalance","CONVICTIONS","lock","convictionOpts","conviction","setConviction","onConvictionChange","voteRefrendum","aye","vote","Standard","Select","AyeNayButtons","motionId","motionProposalHash","isCouncil","setIsCouncil","forceVote","setForceVote","councilQueryresult","currentCouncil","councils","members","member","some","voteMotion","council","GetAccountsButton","onchainLink","setAddress","setAccounts","extensionNotFound","setExtensionNotFound","accountsNotFound","setAccountsNotFound","canVote","addressValue","web3Enable","web3Accounts","web3FromSource","injected","setSigner","signer","onchain_motion","onchain_referendum","voteThreshold","VoteReferendum","addPostCommentMutation","insert_comments","ProposalInfo","preimage","metaDescription","preimageMethod","preimageArguments","element","TreasuryInfo","treasurySpendProposal","beneficiary","bond","Math","PostMotionInfo","onchainMotion","proposerAddress","proposer_address","memberCount","motionProposalArguments","PostProposalInfo","onchainProposal","onchain_proposal","depositAmount","PostReferendumInfo","onchainReferendum","delay","end","PostTreasuryInfo","onchainTreasuryProposal","onchain_treasury_spend_proposal","referendumPost","proposalPost","motionPost","treasuryPost","definedOnchainLink","posts","isOnchainPost","onchain_link","onchain_referendum_id","onchain_proposal_id","onchain_motion_id","onchain_treasury_proposal_id","treasuryStatus","isProposalProposer","isReferendumProposer","isMotionProposer","isTreasuryProposer","canEdit","idNumber","dismissable","localStorageName","infoBoxVisible","infoVisible","setInfoVisible","DiscussionCard","Discussion","comments_aggregate","aggregate","DiscussionsContainer","limit","DiscussionsListing","reversed","Segment","horizontal","onlyMobile","GovernanceCard","post_type","MotionsContainer","MotionsListing","DiscussionContainer","post_topic","ProposalContainer","postTopic","ProposalsListing","ReferendaContainer","ReferendaListing","TreasuryContainer","TreasuryListing","StyledMdScreen","TermsAndConditions","TAC","PrivacyPolicy","PP","TermsOfWebsite","toggleWeb2Login","loginMutation","register","onSubmit","password","login","ref","maxLength","minLength","pattern","Divider","keyring","Keyring","encodeAddress","decodeAddress","setErr","isAccountLoading","setIsAccountLoading","addressLoginStartMutation","useAddressLoginMutation","addressLoginMutation","getEncodedAddress","handleLogin","signRaw","startResult","signMessage","addressLoginStart","stringToHex","signature","loginResult","addressLogin","Login","displayWeb2","setDisplayWeb2","Web2Login","Web3Login","useRedirectReferenda","changed","setChanged","setPostParticipated","setPostCreated","setNewProposal","setOwnProposal","changeNotificationPreferenceMutation","Checkbox","toggle","changeNotificationPreference","ProposalsContainer","TreasuryProposalsContainer","Treasury","setEmail","requestResetPasswordMutation","preventDefault","stopPropagation","requestResetPassword","router","newPassword","setNewPassword","resetPassword","extensionNotAvailable","setExtensionNotAvailable","addressLinkStartMutation","useAddressLinkConfirmMutation","addressLinkConfirmMutation","useAddressUnlinkMutation","addressUnlinkMutation","handleDetect","allAccounts","handleLink","addressLinkStartResult","addressLinkStart","sign_message","address_id","addressLinkConfirmResult","addressLinkConfirm","handleUnlink","addressUnlinkConfirmResult","addressUnlink","prevAddress","linkIcon","unlinkIcon","negative","changeEmailMutation","useResendVerifyEmailTokenMutation","resendVerifyEmailTokenMutation","resendVerifyEmailToken","changeEmail","Fullname","setName","changeNameMutation","newName","changeName","Password","currentPassword","setCurrentPassword","changePasswordMutation","oldPassword","changePassword","setUsername","changeUsernameMutation","changeUsername","signupMutation","handleSubmitForm","signup","termsandconditions","useRedirectMotion","undoEmailChangeMutation","undoEmailChange","verifyEmailMutation","verifyEmail","colors","black_full","black_primary","black_text","blue_primary","blue_primary_transparent","blue_secondary","green_primary","green_primary_transparent","green_secondary","grey_app_background","grey_border","grey_light","grey_primary","grey_secondary","pink_primary","pink_secondary","red_light","red_primary","red_primary_transparent","red_secondary","white","white_transparent","fontSizes","input_text_size","lg","sm","xl","xs","fonts","font_default","font_mono","font_secondary","radii","button_radius","shadows","box_shadow_secondary_grey","box_shadow_secondary_red","GlobalStyle","createGlobalStyle","App","Container","exact","path","OnChain","NotificationSettings","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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AAAA,E,yBAAAA,E,qCAAAA,E,wCAAAA,M,cA6JAC,K,kBAAAA,E,iBAAAA,Q,cA6FAC,K,+CAAAA,Q,cAoEAC,K,uBAAAA,E,uBAAAA,E,QAAAA,E,oBAAAA,E,uBAAAA,E,kBAAAA,Q,cA8DAC,K,uBAAAA,E,uBAAAA,E,QAAAA,E,oBAAAA,E,uBAAAA,E,kBAAAA,Q,cAiJAC,K,8BAAAA,Q,cAkFAC,K,qBAAAA,E,kBAAAA,E,uBAAAA,E,QAAAA,E,iBAAAA,E,wBAAAA,Q,cA8DAC,K,qBAAAA,E,kBAAAA,E,uBAAAA,E,QAAAA,E,iBAAAA,E,wBAAAA,Q,cAwIAC,K,yBAAAA,E,2BAAAA,E,eAAAA,E,kBAAAA,Q,cAyJAC,K,eAAAA,E,kBAAAA,Q,cA+IAC,K,eAAAA,E,iBAAAA,E,qBAAAA,E,uBAAAA,E,iCAAAA,E,oCAAAA,Q,cA+HAC,K,iCAAAA,E,mCAAAA,E,eAAAA,E,kBAAAA,Q,cAwPAC,K,uBAAAA,E,yBAAAA,E,eAAAA,E,iBAAAA,E,iCAAAA,E,mCAAAA,E,yCAAAA,E,2CAAAA,E,uBAAAA,E,yBAAAA,E,+CAAAA,E,iDAAAA,E,2CAAAA,E,6CAAAA,E,mCAAAA,E,qCAAAA,E,yBAAAA,E,4BAAAA,Q,cAyEAC,K,eAAAA,E,iBAAAA,E,mBAAAA,E,qBAAAA,E,qBAAAA,E,wBAAAA,Q,cAgOAC,K,eAAAA,E,iBAAAA,E,uBAAAA,E,0BAAAA,Q,cAu9DAC,K,kBAAAA,E,kBAAAA,E,mBAAAA,Q,cA4CAC,K,eAAAA,E,iBAAAA,E,iDAAAA,E,mDAAAA,E,uCAAAA,E,yCAAAA,E,mCAAAA,E,qCAAAA,E,iDAAAA,E,mDAAAA,E,uCAAAA,E,0CAAAA,Q,cA+MAC,K,eAAAA,E,iBAAAA,E,iBAAAA,E,mBAAAA,E,qBAAAA,E,uBAAAA,E,iCAAAA,E,oCAAAA,Q,cA0QAC,K,qEAAAA,E,6EAAAA,E,iEAAAA,E,+BAAAA,E,4CAAAA,Q,cAwGAC,K,uBAAAA,E,QAAAA,E,oCAAAA,E,wCAAAA,E,4CAAAA,E,yDAAAA,E,iBAAAA,E,oCAAAA,Q,cAkGAC,K,uBAAAA,E,QAAAA,E,oCAAAA,E,wCAAAA,E,4CAAAA,E,yDAAAA,E,iBAAAA,E,oCAAAA,Q,cAoEAC,K,UAAAA,E,gCAAAA,E,8BAAAA,E,YAAAA,E,kCAAAA,E,iCAAAA,Q,cAqGAC,K,yCAAAA,Q,cAyEAC,K,uBAAAA,E,QAAAA,E,iBAAAA,E,oBAAAA,E,uBAAAA,E,kBAAAA,Q,cAsEAC,K,uBAAAA,E,QAAAA,E,iBAAAA,E,oBAAAA,E,uBAAAA,E,kBAAAA,Q,cA0IAC,K,wCAAAA,E,kCAAAA,Q,cA4DAC,K,QAAAA,E,aAAAA,Q,cA8CAC,K,QAAAA,E,aAAAA,Q,cA0HAC,K,uCAAAA,E,iCAAAA,Q,cA4DAC,K,QAAAA,E,aAAAA,Q,cA8CAC,K,QAAAA,E,aAAAA,Q,cAwKAC,K,8BAAAA,Q,cA0GAC,K,qBAAAA,E,kBAAAA,E,uBAAAA,E,QAAAA,E,cAAAA,E,mBAAAA,E,iBAAAA,E,wBAAAA,Q,cAkFAC,K,qBAAAA,E,kBAAAA,E,uBAAAA,E,QAAAA,E,cAAAA,E,mBAAAA,E,iBAAAA,E,wBAAAA,Q,cAqIAC,K,eAAAA,E,iBAAAA,E,mBAAAA,E,qBAAAA,E,qBAAAA,E,wBAAAA,Q,cAoTAC,K,uBAAAA,E,yBAAAA,E,qCAAAA,E,uCAAAA,E,mBAAAA,E,qBAAAA,E,eAAAA,E,iBAAAA,E,yCAAAA,E,2CAAAA,E,uBAAAA,E,yBAAAA,E,yBAAAA,E,4BAAAA,Q,cAmEAC,K,eAAAA,E,iBAAAA,E,uBAAAA,E,0BAAAA,Q,cA2bAC,K,mBAAAA,Q,cA0EAC,K,uBAAAA,E,yBAAAA,E,qCAAAA,E,uCAAAA,E,eAAAA,E,iBAAAA,E,mCAAAA,E,qCAAAA,E,+BAAAA,E,kCAAAA,Q,cA6DAC,K,eAAAA,E,iBAAAA,E,uBAAAA,E,0BAAAA,Q,cA67CAC,K,qBAAAA,E,uBAAAA,E,iBAAAA,E,mBAAAA,E,eAAAA,E,iBAAAA,E,mCAAAA,E,qCAAAA,E,mCAAAA,E,qCAAAA,E,qCAAAA,E,wCAAAA,Q,cAgEAC,K,eAAAA,E,iBAAAA,E,uBAAAA,E,0BAAAA,Q,cAwZAC,K,eAAAA,E,iBAAAA,E,uCAAAA,E,yCAAAA,E,yCAAAA,E,4CAAAA,Q,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","file":"static/js/main.0333afcb.chunk.js","sourcesContent":["// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { LoginResponse } from '../generated/graphql';\nimport { UserDetailsContextType } from '../types';\n\n/**\n * Store the JWT token in localstorage\n * @param token the token received from the authentication header\n */\nexport const storeLocalStorageToken = (token: string) => {\n\tlocalStorage.setItem('Authorization', token);\n};\n\n/**\n * Get the the jwt from localstorage\n * if any. It might be expired\n */\nexport const getLocalStorageToken = (): string|null => {\n\treturn localStorage.getItem('Authorization') || null;\n};\n\n/**\n * Remove the the jwt from localstorage\n * if any.\n */\nexport const deleteLocalStorageToken = (): void => {\n\treturn localStorage.removeItem('Authorization');\n};\n\n/**\n * Store the user information in local context and call the function to store the received token\n * @param param0 user and token answered by the auth server\n * @param currentUser context data on the user\n */\nexport const handleLoginUser = ({ user, token }: LoginResponse, currentUser: UserDetailsContextType) => {\n\ttoken && storeLocalStorageToken(token);\n\tuser && currentUser.setUserDetailsContextState((prevState) => {\n\t\treturn {\n\t\t\t...prevState,\n\t\t\temail: user.email,\n\t\t\temail_verified: user.email_verified,\n\t\t\tid: user.id,\n\t\t\tname: user.name,\n\t\t\tusername: user.username\n\t\t};\n\t});\n};\n\nexport const logout = (setUserDetailsContextState: UserDetailsContextType['setUserDetailsContextState']) => {\n\tdeleteLocalStorageToken();\n\tsetUserDetailsContextState((prevState) => {\n\t\treturn {\n\t\t\t...prevState,\n\t\t\temail: null,\n\t\t\temail_verified: false,\n\t\t\tid: null,\n\t\t\tname: null,\n\t\t\tusername: null\n\t\t};\n\t});\n};\n\n/**\n * Save token in localstorage\n * @param token JWT token\n */\nexport const handleTokenChange = (token: string) => {\n\ttoken && storeLocalStorageToken(token);\n};\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport jwt from 'jsonwebtoken';\nimport React, { createContext, useState } from 'react';\n\nimport { getLocalStorageToken } from '../services/auth.service';\nimport { JWTPayploadType,UserDetailsContextType } from '../types';\nimport { decodePostgresArray } from '../util/decodePostgressArray';\n\nconst initialUserDetailsContext : UserDetailsContextType = {\n\taddresses: [],\n\temail: null,\n\temail_verified: false,\n\tid: null,\n\tname: null,\n\tnotification: {\n\t\tnewProposal: false,\n\t\townProposal: true,\n\t\tpostCreated: true,\n\t\tpostParticipated: true\n\t},\n\tpicture: null,\n\tsetUserDetailsContextState : (): void => {\n\t\tthrow new Error('setUserDetailsContextState function must be overridden');\n\t},\n\tusername: null\n};\n\nconst accessToken = getLocalStorageToken();\ntry {\n\tconst tokenPayload = accessToken && jwt.decode(accessToken) as JWTPayploadType;\n\n\tif (tokenPayload && tokenPayload.sub) {\n\t\tconst {\n\t\t\tsub: id,\n\t\t\tname,\n\t\t\tusername,\n\t\t\temail,\n\t\t\temail_verified,\n\t\t\tnotification,\n\t\t\t'https://hasura.io/jwt/claims': claims\n\t\t} = tokenPayload;\n\n\t\tif (id) {\n\t\t\tinitialUserDetailsContext.id = Number(id);\n\t\t}\n\t\tif (username) {\n\t\t\tinitialUserDetailsContext.username = username;\n\t\t}\n\t\tif (name) {\n\t\t\tinitialUserDetailsContext.name = name;\n\t\t}\n\t\tif (email) {\n\t\t\tinitialUserDetailsContext.email = email;\n\t\t}\n\t\tif (notification) {\n\t\t\tinitialUserDetailsContext.notification = notification;\n\t\t}\n\t\tinitialUserDetailsContext.email_verified = email_verified || false;\n\t\tinitialUserDetailsContext.addresses = decodePostgresArray(claims['x-hasura-kusama']);\n\t}\n} catch {\n\t//do nothing, the user will be authenticated as soon as there's a new call to the server.\n}\n\nexport const UserDetailsContext = createContext(initialUserDetailsContext);\n\nexport const UserDetailsProvider = ({ children }: React.PropsWithChildren<{}>) => {\n\n\tconst [userDetailsContextState, setUserDetailsContextState] = useState(initialUserDetailsContext);\n\n\treturn (\n\t\t<UserDetailsContext.Provider value={{ ...userDetailsContextState, setUserDetailsContextState }}>\n\t\t\t{children}\n\t\t</UserDetailsContext.Provider>\n\t);\n};\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\n/**\n * Returns an array of addresses or null\n *\n * @param pgArray A postgres encode array\n *\n * Examples:\n *\n * decodePostgresArray(\"{\\\"5Ev8deqBc5bXB2pq2C9RWCBXM1kuS6wjqbZJiSRTA8kLZfTu\\\",\\\"5ChscJFxEt9KWevt5aLV6SMGARFVyH8fz2LZKjGBHV7MgfDq\\\"}\")\n * => [ \"5Ev8deqBc5bXB2pq2C9RWCBXM1kuS6wjqbZJiSRTA8kLZfTu\", \"5ChscJFxEt9KWevt5aLV6SMGARFVyH8fz2LZKjGBHV7MgfDq\" ]\n *\n * decodePostgresArray(\"{\\\"5Ev8deqBc5bXB2pq2C9RWCBXM1kuS6wjqbZJiSRTA8kLZfTu\\\"}\")\n * => [ \"5Ev8deqBc5bXB2pq2C9RWCBXM1kuS6wjqbZJiSRTA8kLZfTu\" ]\n *\n * decodePostgresArray(\"{}\")\n * => null\n */\n\nexport function decodePostgresArray(pgArray: string): string[]{\n\tconst addressArray = pgArray.replace(/\"|{|}/g, '');\n\tconst addresses = addressArray.length > 1 ||  !!addressArray[0] ? addressArray.split(',') : [];\n\treturn addresses;\n}","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloClient } from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { setContext } from 'apollo-link-context';\nimport { HttpLink } from 'apollo-link-http';\nimport { TokenRefreshLink } from 'apollo-link-token-refresh';\nimport jwt from 'jsonwebtoken';\nimport React, { useContext } from 'react';\n\nimport { UserDetailsContext } from '../context/UserDetailsContext';\nimport { Get_Refresh_TokenQueryResult } from '../generated/graphql';\nimport {\n\tgetLocalStorageToken,\n\tlogout,\n\tstoreLocalStorageToken\n} from '../services/auth.service';\nimport { JWTPayploadType } from '../types';\n\n/**\n * Performs a call to the auth server\n * to get a new jwt token.\n */\nconst fetchAccessToken = () =>\n\tfetch(`${process.env.REACT_APP_HASURA_GRAPHQL_URL}`, {\n\t\tbody: JSON.stringify({ 'operationName':null,'query':'query get_new_token { token { token }}' }),\n\t\tcredentials: 'same-origin',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tmethod: 'POST'\n\t})\n;\n\n/**\n * Read the data from the answer\n * and pass along the new jwt token.\n */\nconst handleResponse = () => async (response:Response) => {\n\tif(response.ok) {\n\t\tconst res: Get_Refresh_TokenQueryResult = await response.json();\n\t\tif(res && res.data){\n\t\t\treturn res.data.token;\n\t\t} else {\n\t\t\tthrow new Error('The auth server did not answer with an expected refreshed token.');\n\t\t}\n\t}\n\n\tthrow new Error('The auth server did not answer successfully to the refresh token call.');\n};\n\n/**\n * Tells whether the jwt token stored locally\n * is expired. It returns true if the token isn't set.\n */\nconst isTokenValidOrUndefined = (): boolean => {\n\tlet token = localStorage.getItem('Authorization') || null;\n\n\tif (token) {\n\t\tconst tokenPayload = jwt.decode(token) as JWTPayploadType | null;\n\n\t\t// if the token couldn't be decoded (tokenPayload is null) ask for a new one.\n\t\treturn tokenPayload ? tokenPayload.exp > Date.now() / 1000 : false;\n\t} else {\n\t\t// if there's no token we shouldn't ask for a refresh token\n\t\treturn true;\n\t}\n};\n\n/**\n * Apollo link that will get the token from\n * local storage and set the Authorization accordingly.\n */\nconst setAuthorizationLink = setContext(() => {\n\tconst token = getLocalStorageToken();\n\tif (token) {\n\t\treturn { headers: { authorization: `Bearer ${token}` } };\n\t} else {\n\t\treturn null;\n\t}\n});\n\ninterface Props {\n\tchildren: JSX.Element[] | JSX.Element\n  }\n\nconst Apollo = ( { children }:Props ) => {\n\tconst currentUser = useContext(UserDetailsContext);\n\tconst publicKey = process.env.REACT_APP_JWT_PUBLIC_KEY;\n\n\tconst handleError = (err:Error) => {\n\t\tlogout(currentUser.setUserDetailsContextState);\n\t\tconsole.error('There has been a problem getting a new access token: ', err);\n\t};\n\n\tconst handleFetch = (accessToken : string) => {\n\t\ttry {\n\t\t\tconst tokenPayload = accessToken && publicKey && jwt.verify(accessToken, publicKey) as JWTPayploadType;\n\n\t\t\tstoreLocalStorageToken(accessToken);\n\n\t\t\tif (tokenPayload && tokenPayload.sub) {\n\t\t\t\tconst id = Number(tokenPayload.sub);\n\t\t\t\tconst name = tokenPayload.name;\n\t\t\t\tconst username =  tokenPayload.username;\n\t\t\t\tconst email = tokenPayload.email;\n\t\t\t\tconst email_verified = tokenPayload.email_verified;\n\n\t\t\t\tif (id) {\n\t\t\t\t\tcurrentUser.setUserDetailsContextState((prevState) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\temail_verified,\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tusername\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// the jwt isn't valid\n\t\t\tconsole.log('Invalid jwt received.',e);\n\t\t}\n\t};\n\n\tconst httpLink = new HttpLink({\n\t\turi: process.env.REACT_APP_HASURA_GRAPHQL_URL\n\t});\n\n\tconst tokenRefreshLink = new TokenRefreshLink({\n\t\taccessTokenField: 'token',\n\t\tfetchAccessToken,\n\t\thandleError,\n\t\thandleFetch,\n\t\thandleResponse,\n\t\tisTokenValidOrUndefined\n\t});\n\n\tconst link = ApolloLink.from([\n\t\ttokenRefreshLink,\n\t\tsetAuthorizationLink,\n\t\thttpLink\n\t]);\n\n\tconst client = new ApolloClient({\n\t\tcache: new InMemoryCache(),\n\t\tlink\n\t});\n\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t{children}\n\t\t</ApolloProvider>\n\t);\n};\n\nexport default Apollo;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport * as moment from 'moment';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu } from 'semantic-ui-react';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst Footer = ({ className }:Props ): JSX.Element => {\n\treturn (\n\t\t<footer className={className}>\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item>\n\t\t\t\t\t&copy; {moment.utc().year()} Parity Technologies\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item as={Link} to=\"/terms-and-conditions\">\n\t\t\t\t\tTerms &amp; Conditions\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item as={Link} to=\"/terms-of-website\">\n\t\t\t\t\tTerms of Website\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item as={Link} to=\"/privacy\">\n\t\t\t\t\tPrivacy Policy\n\t\t\t\t</Menu.Item>\n\t\t\t</Menu>\n\t\t</footer>\n\t);\n};\n\nexport default styled(Footer)`\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    height: 4rem;\n\n    .ui.menu {\n        background-color: black_full;\n        font-family: font_default;\n        padding: 1rem 3rem;\n        border-radius: 0rem;\n        height: 100%;\n\n        .item {\n            color: grey_secondary;\n\t\t\tfont-size: sm;\n\t\t\tpadding: 1rem;\n            &:hover {\n                color: white;\n            }\n        }\n\n        @media only screen and (max-width: 768px)  {\n            flex-direction: column;\n            height: auto;\n        }\n    }\n`;\n","import gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\nexport type Maybe<T> = T | null;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string,\n  String: string,\n  Boolean: boolean,\n  Int: number,\n  Float: number,\n  DateTime: any,\n  timestamptz: any,\n  uuid: any,\n  timestamp: any,\n  bpchar: any,\n  Json: any,\n  Long: any,\n  Upload: any,\n};\n\nexport type Address = {\n   __typename?: 'Address',\n  address?: Maybe<Scalars['String']>,\n  name?: Maybe<Scalars['String']>,\n  public_key?: Maybe<Scalars['String']>,\n  source?: Maybe<Scalars['String']>,\n};\n\nexport type AddressLinkType = {\n   __typename?: 'AddressLinkType',\n  address_id?: Maybe<Scalars['Int']>,\n  message?: Maybe<Scalars['String']>,\n  sign_message?: Maybe<Scalars['String']>,\n};\n\nexport type AddressLoginType = {\n   __typename?: 'AddressLoginType',\n  message?: Maybe<Scalars['String']>,\n  signMessage?: Maybe<Scalars['String']>,\n};\n\nexport type AggregateBlockIndex = {\n   __typename?: 'AggregateBlockIndex',\n  count: Scalars['Int'],\n};\n\nexport type AggregateBlockNumber = {\n   __typename?: 'AggregateBlockNumber',\n  count: Scalars['Int'],\n};\n\nexport type AggregateCouncil = {\n   __typename?: 'AggregateCouncil',\n  count: Scalars['Int'],\n};\n\nexport type AggregateCouncilMember = {\n   __typename?: 'AggregateCouncilMember',\n  count: Scalars['Int'],\n};\n\nexport type AggregateEra = {\n   __typename?: 'AggregateEra',\n  count: Scalars['Int'],\n};\n\nexport type AggregateHeartBeat = {\n   __typename?: 'AggregateHeartBeat',\n  count: Scalars['Int'],\n};\n\nexport type AggregateMotion = {\n   __typename?: 'AggregateMotion',\n  count: Scalars['Int'],\n};\n\nexport type AggregateMotionProposalArgument = {\n   __typename?: 'AggregateMotionProposalArgument',\n  count: Scalars['Int'],\n};\n\nexport type AggregateMotionStatus = {\n   __typename?: 'AggregateMotionStatus',\n  count: Scalars['Int'],\n};\n\nexport type AggregateNomination = {\n   __typename?: 'AggregateNomination',\n  count: Scalars['Int'],\n};\n\nexport type AggregateOfflineValidator = {\n   __typename?: 'AggregateOfflineValidator',\n  count: Scalars['Int'],\n};\n\nexport type AggregatePreimage = {\n   __typename?: 'AggregatePreimage',\n  count: Scalars['Int'],\n};\n\nexport type AggregatePreimageArgument = {\n   __typename?: 'AggregatePreimageArgument',\n  count: Scalars['Int'],\n};\n\nexport type AggregatePreimageStatus = {\n   __typename?: 'AggregatePreimageStatus',\n  count: Scalars['Int'],\n};\n\nexport type AggregateProposal = {\n   __typename?: 'AggregateProposal',\n  count: Scalars['Int'],\n};\n\nexport type AggregateProposalStatus = {\n   __typename?: 'AggregateProposalStatus',\n  count: Scalars['Int'],\n};\n\nexport type AggregateReferendum = {\n   __typename?: 'AggregateReferendum',\n  count: Scalars['Int'],\n};\n\nexport type AggregateReferendumStatus = {\n   __typename?: 'AggregateReferendumStatus',\n  count: Scalars['Int'],\n};\n\nexport type AggregateReward = {\n   __typename?: 'AggregateReward',\n  count: Scalars['Int'],\n};\n\nexport type AggregateSession = {\n   __typename?: 'AggregateSession',\n  count: Scalars['Int'],\n};\n\nexport type AggregateSlashing = {\n   __typename?: 'AggregateSlashing',\n  count: Scalars['Int'],\n};\n\nexport type AggregateStake = {\n   __typename?: 'AggregateStake',\n  count: Scalars['Int'],\n};\n\nexport type AggregateTotalIssuance = {\n   __typename?: 'AggregateTotalIssuance',\n  count: Scalars['Int'],\n};\n\nexport type AggregateTreasurySpendProposal = {\n   __typename?: 'AggregateTreasurySpendProposal',\n  count: Scalars['Int'],\n};\n\nexport type AggregateTreasuryStatus = {\n   __typename?: 'AggregateTreasuryStatus',\n  count: Scalars['Int'],\n};\n\nexport type AggregateValidator = {\n   __typename?: 'AggregateValidator',\n  count: Scalars['Int'],\n};\n\nexport type BatchPayload = {\n   __typename?: 'BatchPayload',\n  count: Scalars['Long'],\n};\n\nexport type BlockIndex = Node & {\n   __typename?: 'BlockIndex',\n  id: Scalars['ID'],\n  identifier: Scalars['String'],\n  index: Scalars['Int'],\n  startFrom: Scalars['Int'],\n};\n\nexport type BlockIndexConnection = {\n   __typename?: 'BlockIndexConnection',\n  aggregate: AggregateBlockIndex,\n  edges: Array<Maybe<BlockIndexEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type BlockIndexCreateInput = {\n  id?: Maybe<Scalars['ID']>,\n  identifier: Scalars['String'],\n  index: Scalars['Int'],\n  startFrom: Scalars['Int'],\n};\n\nexport type BlockIndexEdge = {\n   __typename?: 'BlockIndexEdge',\n  cursor: Scalars['String'],\n  node: BlockIndex,\n};\n\nexport enum BlockIndexOrderByInput {\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  IdentifierAsc = 'identifier_ASC',\n  IdentifierDesc = 'identifier_DESC',\n  IndexAsc = 'index_ASC',\n  IndexDesc = 'index_DESC',\n  StartFromAsc = 'startFrom_ASC',\n  StartFromDesc = 'startFrom_DESC'\n}\n\nexport type BlockIndexPreviousValues = {\n   __typename?: 'BlockIndexPreviousValues',\n  id: Scalars['ID'],\n  identifier: Scalars['String'],\n  index: Scalars['Int'],\n  startFrom: Scalars['Int'],\n};\n\nexport type BlockIndexSubscriptionPayload = {\n   __typename?: 'BlockIndexSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<BlockIndex>,\n  previousValues?: Maybe<BlockIndexPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type BlockIndexSubscriptionWhereInput = {\n  AND?: Maybe<Array<BlockIndexSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<BlockIndexSubscriptionWhereInput>>,\n  OR?: Maybe<Array<BlockIndexSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<BlockIndexWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type BlockIndexUpdateInput = {\n  identifier?: Maybe<Scalars['String']>,\n  index?: Maybe<Scalars['Int']>,\n  startFrom?: Maybe<Scalars['Int']>,\n};\n\nexport type BlockIndexUpdateManyMutationInput = {\n  identifier?: Maybe<Scalars['String']>,\n  index?: Maybe<Scalars['Int']>,\n  startFrom?: Maybe<Scalars['Int']>,\n};\n\nexport type BlockIndexWhereInput = {\n  AND?: Maybe<Array<BlockIndexWhereInput>>,\n  NOT?: Maybe<Array<BlockIndexWhereInput>>,\n  OR?: Maybe<Array<BlockIndexWhereInput>>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  identifier?: Maybe<Scalars['String']>,\n  identifier_contains?: Maybe<Scalars['String']>,\n  identifier_ends_with?: Maybe<Scalars['String']>,\n  identifier_gt?: Maybe<Scalars['String']>,\n  identifier_gte?: Maybe<Scalars['String']>,\n  identifier_in?: Maybe<Array<Scalars['String']>>,\n  identifier_lt?: Maybe<Scalars['String']>,\n  identifier_lte?: Maybe<Scalars['String']>,\n  identifier_not?: Maybe<Scalars['String']>,\n  identifier_not_contains?: Maybe<Scalars['String']>,\n  identifier_not_ends_with?: Maybe<Scalars['String']>,\n  identifier_not_in?: Maybe<Array<Scalars['String']>>,\n  identifier_not_starts_with?: Maybe<Scalars['String']>,\n  identifier_starts_with?: Maybe<Scalars['String']>,\n  index?: Maybe<Scalars['Int']>,\n  index_gt?: Maybe<Scalars['Int']>,\n  index_gte?: Maybe<Scalars['Int']>,\n  index_in?: Maybe<Array<Scalars['Int']>>,\n  index_lt?: Maybe<Scalars['Int']>,\n  index_lte?: Maybe<Scalars['Int']>,\n  index_not?: Maybe<Scalars['Int']>,\n  index_not_in?: Maybe<Array<Scalars['Int']>>,\n  startFrom?: Maybe<Scalars['Int']>,\n  startFrom_gt?: Maybe<Scalars['Int']>,\n  startFrom_gte?: Maybe<Scalars['Int']>,\n  startFrom_in?: Maybe<Array<Scalars['Int']>>,\n  startFrom_lt?: Maybe<Scalars['Int']>,\n  startFrom_lte?: Maybe<Scalars['Int']>,\n  startFrom_not?: Maybe<Scalars['Int']>,\n  startFrom_not_in?: Maybe<Array<Scalars['Int']>>,\n};\n\nexport type BlockIndexWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n  identifier?: Maybe<Scalars['String']>,\n};\n\nexport type BlockNumber = Node & {\n   __typename?: 'BlockNumber',\n  authoredBy: Scalars['String'],\n  hash: Scalars['String'],\n  id: Scalars['ID'],\n  number: Scalars['Int'],\n  startDateTime: Scalars['DateTime'],\n};\n\nexport type BlockNumberConnection = {\n   __typename?: 'BlockNumberConnection',\n  aggregate: AggregateBlockNumber,\n  edges: Array<Maybe<BlockNumberEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type BlockNumberCreateInput = {\n  authoredBy: Scalars['String'],\n  hash: Scalars['String'],\n  id?: Maybe<Scalars['ID']>,\n  number: Scalars['Int'],\n  startDateTime: Scalars['DateTime'],\n};\n\nexport type BlockNumberCreateOneInput = {\n  connect?: Maybe<BlockNumberWhereUniqueInput>,\n  create?: Maybe<BlockNumberCreateInput>,\n};\n\nexport type BlockNumberEdge = {\n   __typename?: 'BlockNumberEdge',\n  cursor: Scalars['String'],\n  node: BlockNumber,\n};\n\nexport enum BlockNumberOrderByInput {\n  AuthoredByAsc = 'authoredBy_ASC',\n  AuthoredByDesc = 'authoredBy_DESC',\n  HashAsc = 'hash_ASC',\n  HashDesc = 'hash_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  NumberAsc = 'number_ASC',\n  NumberDesc = 'number_DESC',\n  StartDateTimeAsc = 'startDateTime_ASC',\n  StartDateTimeDesc = 'startDateTime_DESC'\n}\n\nexport type BlockNumberPreviousValues = {\n   __typename?: 'BlockNumberPreviousValues',\n  authoredBy: Scalars['String'],\n  hash: Scalars['String'],\n  id: Scalars['ID'],\n  number: Scalars['Int'],\n  startDateTime: Scalars['DateTime'],\n};\n\nexport type BlockNumberSubscriptionPayload = {\n   __typename?: 'BlockNumberSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<BlockNumber>,\n  previousValues?: Maybe<BlockNumberPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type BlockNumberSubscriptionWhereInput = {\n  AND?: Maybe<Array<BlockNumberSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<BlockNumberSubscriptionWhereInput>>,\n  OR?: Maybe<Array<BlockNumberSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<BlockNumberWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type BlockNumberUpdateDataInput = {\n  authoredBy?: Maybe<Scalars['String']>,\n  hash?: Maybe<Scalars['String']>,\n  number?: Maybe<Scalars['Int']>,\n  startDateTime?: Maybe<Scalars['DateTime']>,\n};\n\nexport type BlockNumberUpdateInput = {\n  authoredBy?: Maybe<Scalars['String']>,\n  hash?: Maybe<Scalars['String']>,\n  number?: Maybe<Scalars['Int']>,\n  startDateTime?: Maybe<Scalars['DateTime']>,\n};\n\nexport type BlockNumberUpdateManyMutationInput = {\n  authoredBy?: Maybe<Scalars['String']>,\n  hash?: Maybe<Scalars['String']>,\n  number?: Maybe<Scalars['Int']>,\n  startDateTime?: Maybe<Scalars['DateTime']>,\n};\n\nexport type BlockNumberUpdateOneRequiredInput = {\n  connect?: Maybe<BlockNumberWhereUniqueInput>,\n  create?: Maybe<BlockNumberCreateInput>,\n  update?: Maybe<BlockNumberUpdateDataInput>,\n  upsert?: Maybe<BlockNumberUpsertNestedInput>,\n};\n\nexport type BlockNumberUpsertNestedInput = {\n  create: BlockNumberCreateInput,\n  update: BlockNumberUpdateDataInput,\n};\n\nexport type BlockNumberWhereInput = {\n  AND?: Maybe<Array<BlockNumberWhereInput>>,\n  NOT?: Maybe<Array<BlockNumberWhereInput>>,\n  OR?: Maybe<Array<BlockNumberWhereInput>>,\n  authoredBy?: Maybe<Scalars['String']>,\n  authoredBy_contains?: Maybe<Scalars['String']>,\n  authoredBy_ends_with?: Maybe<Scalars['String']>,\n  authoredBy_gt?: Maybe<Scalars['String']>,\n  authoredBy_gte?: Maybe<Scalars['String']>,\n  authoredBy_in?: Maybe<Array<Scalars['String']>>,\n  authoredBy_lt?: Maybe<Scalars['String']>,\n  authoredBy_lte?: Maybe<Scalars['String']>,\n  authoredBy_not?: Maybe<Scalars['String']>,\n  authoredBy_not_contains?: Maybe<Scalars['String']>,\n  authoredBy_not_ends_with?: Maybe<Scalars['String']>,\n  authoredBy_not_in?: Maybe<Array<Scalars['String']>>,\n  authoredBy_not_starts_with?: Maybe<Scalars['String']>,\n  authoredBy_starts_with?: Maybe<Scalars['String']>,\n  hash?: Maybe<Scalars['String']>,\n  hash_contains?: Maybe<Scalars['String']>,\n  hash_ends_with?: Maybe<Scalars['String']>,\n  hash_gt?: Maybe<Scalars['String']>,\n  hash_gte?: Maybe<Scalars['String']>,\n  hash_in?: Maybe<Array<Scalars['String']>>,\n  hash_lt?: Maybe<Scalars['String']>,\n  hash_lte?: Maybe<Scalars['String']>,\n  hash_not?: Maybe<Scalars['String']>,\n  hash_not_contains?: Maybe<Scalars['String']>,\n  hash_not_ends_with?: Maybe<Scalars['String']>,\n  hash_not_in?: Maybe<Array<Scalars['String']>>,\n  hash_not_starts_with?: Maybe<Scalars['String']>,\n  hash_starts_with?: Maybe<Scalars['String']>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  number?: Maybe<Scalars['Int']>,\n  number_gt?: Maybe<Scalars['Int']>,\n  number_gte?: Maybe<Scalars['Int']>,\n  number_in?: Maybe<Array<Scalars['Int']>>,\n  number_lt?: Maybe<Scalars['Int']>,\n  number_lte?: Maybe<Scalars['Int']>,\n  number_not?: Maybe<Scalars['Int']>,\n  number_not_in?: Maybe<Array<Scalars['Int']>>,\n  startDateTime?: Maybe<Scalars['DateTime']>,\n  startDateTime_gt?: Maybe<Scalars['DateTime']>,\n  startDateTime_gte?: Maybe<Scalars['DateTime']>,\n  startDateTime_in?: Maybe<Array<Scalars['DateTime']>>,\n  startDateTime_lt?: Maybe<Scalars['DateTime']>,\n  startDateTime_lte?: Maybe<Scalars['DateTime']>,\n  startDateTime_not?: Maybe<Scalars['DateTime']>,\n  startDateTime_not_in?: Maybe<Array<Scalars['DateTime']>>,\n};\n\nexport type BlockNumberWhereUniqueInput = {\n  hash?: Maybe<Scalars['String']>,\n  id?: Maybe<Scalars['ID']>,\n  number?: Maybe<Scalars['Int']>,\n};\n\n\nexport type Bpchar_Comparison_Exp = {\n  _eq?: Maybe<Scalars['bpchar']>,\n  _gt?: Maybe<Scalars['bpchar']>,\n  _gte?: Maybe<Scalars['bpchar']>,\n  _in?: Maybe<Array<Scalars['bpchar']>>,\n  _is_null?: Maybe<Scalars['Boolean']>,\n  _lt?: Maybe<Scalars['bpchar']>,\n  _lte?: Maybe<Scalars['bpchar']>,\n  _neq?: Maybe<Scalars['bpchar']>,\n  _nin?: Maybe<Array<Scalars['bpchar']>>,\n};\n\nexport enum CacheControlScope {\n  Private = 'PRIVATE',\n  Public = 'PUBLIC'\n}\n\nexport type ChangeResponse = {\n   __typename?: 'ChangeResponse',\n  message?: Maybe<Scalars['String']>,\n  token?: Maybe<Scalars['String']>,\n};\n\nexport type Comment_Reactions = {\n   __typename?: 'comment_reactions',\n  comment: Comments,\n  comment_id: Scalars['uuid'],\n  created_at: Scalars['timestamp'],\n  id: Scalars['Int'],\n  reacting_user?: Maybe<User>,\n  reaction: Scalars['bpchar'],\n  updated_at: Scalars['timestamp'],\n  user_id: Scalars['Int'],\n};\n\nexport type Comment_Reactions_Aggregate = {\n   __typename?: 'comment_reactions_aggregate',\n  aggregate?: Maybe<Comment_Reactions_Aggregate_Fields>,\n  nodes: Array<Comment_Reactions>,\n};\n\nexport type Comment_Reactions_Aggregate_Fields = {\n   __typename?: 'comment_reactions_aggregate_fields',\n  avg?: Maybe<Comment_Reactions_Avg_Fields>,\n  count?: Maybe<Scalars['Int']>,\n  max?: Maybe<Comment_Reactions_Max_Fields>,\n  min?: Maybe<Comment_Reactions_Min_Fields>,\n  stddev?: Maybe<Comment_Reactions_Stddev_Fields>,\n  stddev_pop?: Maybe<Comment_Reactions_Stddev_Pop_Fields>,\n  stddev_samp?: Maybe<Comment_Reactions_Stddev_Samp_Fields>,\n  sum?: Maybe<Comment_Reactions_Sum_Fields>,\n  var_pop?: Maybe<Comment_Reactions_Var_Pop_Fields>,\n  var_samp?: Maybe<Comment_Reactions_Var_Samp_Fields>,\n  variance?: Maybe<Comment_Reactions_Variance_Fields>,\n};\n\n\nexport type Comment_Reactions_Aggregate_FieldsCountArgs = {\n  columns?: Maybe<Array<Comment_Reactions_Select_Column>>,\n  distinct?: Maybe<Scalars['Boolean']>\n};\n\nexport type Comment_Reactions_Aggregate_Order_By = {\n  avg?: Maybe<Comment_Reactions_Avg_Order_By>,\n  count?: Maybe<Order_By>,\n  max?: Maybe<Comment_Reactions_Max_Order_By>,\n  min?: Maybe<Comment_Reactions_Min_Order_By>,\n  stddev?: Maybe<Comment_Reactions_Stddev_Order_By>,\n  stddev_pop?: Maybe<Comment_Reactions_Stddev_Pop_Order_By>,\n  stddev_samp?: Maybe<Comment_Reactions_Stddev_Samp_Order_By>,\n  sum?: Maybe<Comment_Reactions_Sum_Order_By>,\n  var_pop?: Maybe<Comment_Reactions_Var_Pop_Order_By>,\n  var_samp?: Maybe<Comment_Reactions_Var_Samp_Order_By>,\n  variance?: Maybe<Comment_Reactions_Variance_Order_By>,\n};\n\nexport type Comment_Reactions_Arr_Rel_Insert_Input = {\n  data: Array<Comment_Reactions_Insert_Input>,\n  on_conflict?: Maybe<Comment_Reactions_On_Conflict>,\n};\n\nexport type Comment_Reactions_Avg_Fields = {\n   __typename?: 'comment_reactions_avg_fields',\n  id?: Maybe<Scalars['Float']>,\n  user_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Comment_Reactions_Avg_Order_By = {\n  id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Comment_Reactions_Bool_Exp = {\n  _and?: Maybe<Array<Maybe<Comment_Reactions_Bool_Exp>>>,\n  _not?: Maybe<Comment_Reactions_Bool_Exp>,\n  _or?: Maybe<Array<Maybe<Comment_Reactions_Bool_Exp>>>,\n  comment?: Maybe<Comments_Bool_Exp>,\n  comment_id?: Maybe<Uuid_Comparison_Exp>,\n  created_at?: Maybe<Timestamp_Comparison_Exp>,\n  id?: Maybe<Int_Comparison_Exp>,\n  reaction?: Maybe<Bpchar_Comparison_Exp>,\n  updated_at?: Maybe<Timestamp_Comparison_Exp>,\n  user_id?: Maybe<Int_Comparison_Exp>,\n};\n\nexport enum Comment_Reactions_Constraint {\n  CommentReactionsPkey = 'comment_reactions_pkey'\n}\n\nexport type Comment_Reactions_Inc_Input = {\n  id?: Maybe<Scalars['Int']>,\n  user_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Comment_Reactions_Insert_Input = {\n  comment?: Maybe<Comments_Obj_Rel_Insert_Input>,\n  comment_id?: Maybe<Scalars['uuid']>,\n  created_at?: Maybe<Scalars['timestamp']>,\n  id?: Maybe<Scalars['Int']>,\n  reaction?: Maybe<Scalars['bpchar']>,\n  updated_at?: Maybe<Scalars['timestamp']>,\n  user_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Comment_Reactions_Max_Fields = {\n   __typename?: 'comment_reactions_max_fields',\n  id?: Maybe<Scalars['Int']>,\n  user_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Comment_Reactions_Max_Order_By = {\n  id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Comment_Reactions_Min_Fields = {\n   __typename?: 'comment_reactions_min_fields',\n  id?: Maybe<Scalars['Int']>,\n  user_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Comment_Reactions_Min_Order_By = {\n  id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Comment_Reactions_Mutation_Response = {\n   __typename?: 'comment_reactions_mutation_response',\n  affected_rows: Scalars['Int'],\n  returning: Array<Comment_Reactions>,\n};\n\nexport type Comment_Reactions_Obj_Rel_Insert_Input = {\n  data: Comment_Reactions_Insert_Input,\n  on_conflict?: Maybe<Comment_Reactions_On_Conflict>,\n};\n\nexport type Comment_Reactions_On_Conflict = {\n  constraint: Comment_Reactions_Constraint,\n  update_columns: Array<Comment_Reactions_Update_Column>,\n  where?: Maybe<Comment_Reactions_Bool_Exp>,\n};\n\nexport type Comment_Reactions_Order_By = {\n  comment?: Maybe<Comments_Order_By>,\n  comment_id?: Maybe<Order_By>,\n  created_at?: Maybe<Order_By>,\n  id?: Maybe<Order_By>,\n  reaction?: Maybe<Order_By>,\n  updated_at?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport enum Comment_Reactions_Select_Column {\n  CommentId = 'comment_id',\n  CreatedAt = 'created_at',\n  Id = 'id',\n  Reaction = 'reaction',\n  UpdatedAt = 'updated_at',\n  UserId = 'user_id'\n}\n\nexport type Comment_Reactions_Set_Input = {\n  comment_id?: Maybe<Scalars['uuid']>,\n  created_at?: Maybe<Scalars['timestamp']>,\n  id?: Maybe<Scalars['Int']>,\n  reaction?: Maybe<Scalars['bpchar']>,\n  updated_at?: Maybe<Scalars['timestamp']>,\n  user_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Comment_Reactions_Stddev_Fields = {\n   __typename?: 'comment_reactions_stddev_fields',\n  id?: Maybe<Scalars['Float']>,\n  user_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Comment_Reactions_Stddev_Order_By = {\n  id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Comment_Reactions_Stddev_Pop_Fields = {\n   __typename?: 'comment_reactions_stddev_pop_fields',\n  id?: Maybe<Scalars['Float']>,\n  user_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Comment_Reactions_Stddev_Pop_Order_By = {\n  id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Comment_Reactions_Stddev_Samp_Fields = {\n   __typename?: 'comment_reactions_stddev_samp_fields',\n  id?: Maybe<Scalars['Float']>,\n  user_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Comment_Reactions_Stddev_Samp_Order_By = {\n  id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Comment_Reactions_Sum_Fields = {\n   __typename?: 'comment_reactions_sum_fields',\n  id?: Maybe<Scalars['Int']>,\n  user_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Comment_Reactions_Sum_Order_By = {\n  id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport enum Comment_Reactions_Update_Column {\n  CommentId = 'comment_id',\n  CreatedAt = 'created_at',\n  Id = 'id',\n  Reaction = 'reaction',\n  UpdatedAt = 'updated_at',\n  UserId = 'user_id'\n}\n\nexport type Comment_Reactions_Var_Pop_Fields = {\n   __typename?: 'comment_reactions_var_pop_fields',\n  id?: Maybe<Scalars['Float']>,\n  user_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Comment_Reactions_Var_Pop_Order_By = {\n  id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Comment_Reactions_Var_Samp_Fields = {\n   __typename?: 'comment_reactions_var_samp_fields',\n  id?: Maybe<Scalars['Float']>,\n  user_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Comment_Reactions_Var_Samp_Order_By = {\n  id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Comment_Reactions_Variance_Fields = {\n   __typename?: 'comment_reactions_variance_fields',\n  id?: Maybe<Scalars['Float']>,\n  user_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Comment_Reactions_Variance_Order_By = {\n  id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Comments = {\n   __typename?: 'comments',\n  author?: Maybe<User>,\n  author_id: Scalars['Int'],\n  comment_reactions: Array<Comment_Reactions>,\n  comment_reactions_aggregate: Comment_Reactions_Aggregate,\n  content: Scalars['String'],\n  created_at: Scalars['timestamptz'],\n  id: Scalars['uuid'],\n  post: Posts,\n  post_id: Scalars['Int'],\n  updated_at: Scalars['timestamptz'],\n};\n\n\nexport type CommentsComment_ReactionsArgs = {\n  distinct_on?: Maybe<Array<Comment_Reactions_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Comment_Reactions_Order_By>>,\n  where?: Maybe<Comment_Reactions_Bool_Exp>\n};\n\n\nexport type CommentsComment_Reactions_AggregateArgs = {\n  distinct_on?: Maybe<Array<Comment_Reactions_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Comment_Reactions_Order_By>>,\n  where?: Maybe<Comment_Reactions_Bool_Exp>\n};\n\nexport type Comments_Aggregate = {\n   __typename?: 'comments_aggregate',\n  aggregate?: Maybe<Comments_Aggregate_Fields>,\n  nodes: Array<Comments>,\n};\n\nexport type Comments_Aggregate_Fields = {\n   __typename?: 'comments_aggregate_fields',\n  avg?: Maybe<Comments_Avg_Fields>,\n  count?: Maybe<Scalars['Int']>,\n  max?: Maybe<Comments_Max_Fields>,\n  min?: Maybe<Comments_Min_Fields>,\n  stddev?: Maybe<Comments_Stddev_Fields>,\n  stddev_pop?: Maybe<Comments_Stddev_Pop_Fields>,\n  stddev_samp?: Maybe<Comments_Stddev_Samp_Fields>,\n  sum?: Maybe<Comments_Sum_Fields>,\n  var_pop?: Maybe<Comments_Var_Pop_Fields>,\n  var_samp?: Maybe<Comments_Var_Samp_Fields>,\n  variance?: Maybe<Comments_Variance_Fields>,\n};\n\n\nexport type Comments_Aggregate_FieldsCountArgs = {\n  columns?: Maybe<Array<Comments_Select_Column>>,\n  distinct?: Maybe<Scalars['Boolean']>\n};\n\nexport type Comments_Aggregate_Order_By = {\n  avg?: Maybe<Comments_Avg_Order_By>,\n  count?: Maybe<Order_By>,\n  max?: Maybe<Comments_Max_Order_By>,\n  min?: Maybe<Comments_Min_Order_By>,\n  stddev?: Maybe<Comments_Stddev_Order_By>,\n  stddev_pop?: Maybe<Comments_Stddev_Pop_Order_By>,\n  stddev_samp?: Maybe<Comments_Stddev_Samp_Order_By>,\n  sum?: Maybe<Comments_Sum_Order_By>,\n  var_pop?: Maybe<Comments_Var_Pop_Order_By>,\n  var_samp?: Maybe<Comments_Var_Samp_Order_By>,\n  variance?: Maybe<Comments_Variance_Order_By>,\n};\n\nexport type Comments_Arr_Rel_Insert_Input = {\n  data: Array<Comments_Insert_Input>,\n  on_conflict?: Maybe<Comments_On_Conflict>,\n};\n\nexport type Comments_Avg_Fields = {\n   __typename?: 'comments_avg_fields',\n  author_id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Comments_Avg_Order_By = {\n  author_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n};\n\nexport type Comments_Bool_Exp = {\n  _and?: Maybe<Array<Maybe<Comments_Bool_Exp>>>,\n  _not?: Maybe<Comments_Bool_Exp>,\n  _or?: Maybe<Array<Maybe<Comments_Bool_Exp>>>,\n  author_id?: Maybe<Int_Comparison_Exp>,\n  comment_reactions?: Maybe<Comment_Reactions_Bool_Exp>,\n  content?: Maybe<String_Comparison_Exp>,\n  created_at?: Maybe<Timestamptz_Comparison_Exp>,\n  id?: Maybe<Uuid_Comparison_Exp>,\n  post?: Maybe<Posts_Bool_Exp>,\n  post_id?: Maybe<Int_Comparison_Exp>,\n  updated_at?: Maybe<Timestamptz_Comparison_Exp>,\n};\n\nexport enum Comments_Constraint {\n  CommentsPkey = 'comments_pkey'\n}\n\nexport type Comments_Inc_Input = {\n  author_id?: Maybe<Scalars['Int']>,\n  post_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Comments_Insert_Input = {\n  author_id?: Maybe<Scalars['Int']>,\n  comment_reactions?: Maybe<Comment_Reactions_Arr_Rel_Insert_Input>,\n  content?: Maybe<Scalars['String']>,\n  created_at?: Maybe<Scalars['timestamptz']>,\n  id?: Maybe<Scalars['uuid']>,\n  post?: Maybe<Posts_Obj_Rel_Insert_Input>,\n  post_id?: Maybe<Scalars['Int']>,\n  updated_at?: Maybe<Scalars['timestamptz']>,\n};\n\nexport type Comments_Max_Fields = {\n   __typename?: 'comments_max_fields',\n  author_id?: Maybe<Scalars['Int']>,\n  content?: Maybe<Scalars['String']>,\n  created_at?: Maybe<Scalars['timestamptz']>,\n  post_id?: Maybe<Scalars['Int']>,\n  updated_at?: Maybe<Scalars['timestamptz']>,\n};\n\nexport type Comments_Max_Order_By = {\n  author_id?: Maybe<Order_By>,\n  content?: Maybe<Order_By>,\n  created_at?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n  updated_at?: Maybe<Order_By>,\n};\n\nexport type Comments_Min_Fields = {\n   __typename?: 'comments_min_fields',\n  author_id?: Maybe<Scalars['Int']>,\n  content?: Maybe<Scalars['String']>,\n  created_at?: Maybe<Scalars['timestamptz']>,\n  post_id?: Maybe<Scalars['Int']>,\n  updated_at?: Maybe<Scalars['timestamptz']>,\n};\n\nexport type Comments_Min_Order_By = {\n  author_id?: Maybe<Order_By>,\n  content?: Maybe<Order_By>,\n  created_at?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n  updated_at?: Maybe<Order_By>,\n};\n\nexport type Comments_Mutation_Response = {\n   __typename?: 'comments_mutation_response',\n  affected_rows: Scalars['Int'],\n  returning: Array<Comments>,\n};\n\nexport type Comments_Obj_Rel_Insert_Input = {\n  data: Comments_Insert_Input,\n  on_conflict?: Maybe<Comments_On_Conflict>,\n};\n\nexport type Comments_On_Conflict = {\n  constraint: Comments_Constraint,\n  update_columns: Array<Comments_Update_Column>,\n  where?: Maybe<Comments_Bool_Exp>,\n};\n\nexport type Comments_Order_By = {\n  author_id?: Maybe<Order_By>,\n  comment_reactions_aggregate?: Maybe<Comment_Reactions_Aggregate_Order_By>,\n  content?: Maybe<Order_By>,\n  created_at?: Maybe<Order_By>,\n  id?: Maybe<Order_By>,\n  post?: Maybe<Posts_Order_By>,\n  post_id?: Maybe<Order_By>,\n  updated_at?: Maybe<Order_By>,\n};\n\nexport enum Comments_Select_Column {\n  AuthorId = 'author_id',\n  Content = 'content',\n  CreatedAt = 'created_at',\n  Id = 'id',\n  PostId = 'post_id',\n  UpdatedAt = 'updated_at'\n}\n\nexport type Comments_Set_Input = {\n  author_id?: Maybe<Scalars['Int']>,\n  content?: Maybe<Scalars['String']>,\n  created_at?: Maybe<Scalars['timestamptz']>,\n  id?: Maybe<Scalars['uuid']>,\n  post_id?: Maybe<Scalars['Int']>,\n  updated_at?: Maybe<Scalars['timestamptz']>,\n};\n\nexport type Comments_Stddev_Fields = {\n   __typename?: 'comments_stddev_fields',\n  author_id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Comments_Stddev_Order_By = {\n  author_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n};\n\nexport type Comments_Stddev_Pop_Fields = {\n   __typename?: 'comments_stddev_pop_fields',\n  author_id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Comments_Stddev_Pop_Order_By = {\n  author_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n};\n\nexport type Comments_Stddev_Samp_Fields = {\n   __typename?: 'comments_stddev_samp_fields',\n  author_id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Comments_Stddev_Samp_Order_By = {\n  author_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n};\n\nexport type Comments_Sum_Fields = {\n   __typename?: 'comments_sum_fields',\n  author_id?: Maybe<Scalars['Int']>,\n  post_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Comments_Sum_Order_By = {\n  author_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n};\n\nexport enum Comments_Update_Column {\n  AuthorId = 'author_id',\n  Content = 'content',\n  CreatedAt = 'created_at',\n  Id = 'id',\n  PostId = 'post_id',\n  UpdatedAt = 'updated_at'\n}\n\nexport type Comments_Var_Pop_Fields = {\n   __typename?: 'comments_var_pop_fields',\n  author_id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Comments_Var_Pop_Order_By = {\n  author_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n};\n\nexport type Comments_Var_Samp_Fields = {\n   __typename?: 'comments_var_samp_fields',\n  author_id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Comments_Var_Samp_Order_By = {\n  author_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n};\n\nexport type Comments_Variance_Fields = {\n   __typename?: 'comments_variance_fields',\n  author_id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Comments_Variance_Order_By = {\n  author_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n};\n\nexport type Council = Node & {\n   __typename?: 'Council',\n  blockNumber: BlockNumber,\n  id: Scalars['ID'],\n  members?: Maybe<Array<CouncilMember>>,\n};\n\n\nexport type CouncilMembersArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<CouncilMemberOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<CouncilMemberWhereInput>\n};\n\nexport type CouncilConnection = {\n   __typename?: 'CouncilConnection',\n  aggregate: AggregateCouncil,\n  edges: Array<Maybe<CouncilEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type CouncilCreateInput = {\n  blockNumber: BlockNumberCreateOneInput,\n  id?: Maybe<Scalars['ID']>,\n  members?: Maybe<CouncilMemberCreateManyWithoutCouncilsInput>,\n};\n\nexport type CouncilCreateManyWithoutMembersInput = {\n  connect?: Maybe<Array<CouncilWhereUniqueInput>>,\n  create?: Maybe<Array<CouncilCreateWithoutMembersInput>>,\n};\n\nexport type CouncilCreateWithoutMembersInput = {\n  blockNumber: BlockNumberCreateOneInput,\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type CouncilEdge = {\n   __typename?: 'CouncilEdge',\n  cursor: Scalars['String'],\n  node: Council,\n};\n\nexport type CouncilMember = Node & {\n   __typename?: 'CouncilMember',\n  address: Scalars['String'],\n  councils?: Maybe<Array<Council>>,\n  id: Scalars['ID'],\n};\n\n\nexport type CouncilMemberCouncilsArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<CouncilOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<CouncilWhereInput>\n};\n\nexport type CouncilMemberConnection = {\n   __typename?: 'CouncilMemberConnection',\n  aggregate: AggregateCouncilMember,\n  edges: Array<Maybe<CouncilMemberEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type CouncilMemberCreateInput = {\n  address: Scalars['String'],\n  councils?: Maybe<CouncilCreateManyWithoutMembersInput>,\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type CouncilMemberCreateManyWithoutCouncilsInput = {\n  connect?: Maybe<Array<CouncilMemberWhereUniqueInput>>,\n  create?: Maybe<Array<CouncilMemberCreateWithoutCouncilsInput>>,\n};\n\nexport type CouncilMemberCreateWithoutCouncilsInput = {\n  address: Scalars['String'],\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type CouncilMemberEdge = {\n   __typename?: 'CouncilMemberEdge',\n  cursor: Scalars['String'],\n  node: CouncilMember,\n};\n\nexport enum CouncilMemberOrderByInput {\n  AddressAsc = 'address_ASC',\n  AddressDesc = 'address_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC'\n}\n\nexport type CouncilMemberPreviousValues = {\n   __typename?: 'CouncilMemberPreviousValues',\n  address: Scalars['String'],\n  id: Scalars['ID'],\n};\n\nexport type CouncilMemberScalarWhereInput = {\n  AND?: Maybe<Array<CouncilMemberScalarWhereInput>>,\n  NOT?: Maybe<Array<CouncilMemberScalarWhereInput>>,\n  OR?: Maybe<Array<CouncilMemberScalarWhereInput>>,\n  address?: Maybe<Scalars['String']>,\n  address_contains?: Maybe<Scalars['String']>,\n  address_ends_with?: Maybe<Scalars['String']>,\n  address_gt?: Maybe<Scalars['String']>,\n  address_gte?: Maybe<Scalars['String']>,\n  address_in?: Maybe<Array<Scalars['String']>>,\n  address_lt?: Maybe<Scalars['String']>,\n  address_lte?: Maybe<Scalars['String']>,\n  address_not?: Maybe<Scalars['String']>,\n  address_not_contains?: Maybe<Scalars['String']>,\n  address_not_ends_with?: Maybe<Scalars['String']>,\n  address_not_in?: Maybe<Array<Scalars['String']>>,\n  address_not_starts_with?: Maybe<Scalars['String']>,\n  address_starts_with?: Maybe<Scalars['String']>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n};\n\nexport type CouncilMemberSubscriptionPayload = {\n   __typename?: 'CouncilMemberSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<CouncilMember>,\n  previousValues?: Maybe<CouncilMemberPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type CouncilMemberSubscriptionWhereInput = {\n  AND?: Maybe<Array<CouncilMemberSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<CouncilMemberSubscriptionWhereInput>>,\n  OR?: Maybe<Array<CouncilMemberSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<CouncilMemberWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type CouncilMemberUpdateInput = {\n  address?: Maybe<Scalars['String']>,\n  councils?: Maybe<CouncilUpdateManyWithoutMembersInput>,\n};\n\nexport type CouncilMemberUpdateManyDataInput = {\n  address?: Maybe<Scalars['String']>,\n};\n\nexport type CouncilMemberUpdateManyMutationInput = {\n  address?: Maybe<Scalars['String']>,\n};\n\nexport type CouncilMemberUpdateManyWithoutCouncilsInput = {\n  connect?: Maybe<Array<CouncilMemberWhereUniqueInput>>,\n  create?: Maybe<Array<CouncilMemberCreateWithoutCouncilsInput>>,\n  delete?: Maybe<Array<CouncilMemberWhereUniqueInput>>,\n  deleteMany?: Maybe<Array<CouncilMemberScalarWhereInput>>,\n  disconnect?: Maybe<Array<CouncilMemberWhereUniqueInput>>,\n  set?: Maybe<Array<CouncilMemberWhereUniqueInput>>,\n  update?: Maybe<Array<CouncilMemberUpdateWithWhereUniqueWithoutCouncilsInput>>,\n  updateMany?: Maybe<Array<CouncilMemberUpdateManyWithWhereNestedInput>>,\n  upsert?: Maybe<Array<CouncilMemberUpsertWithWhereUniqueWithoutCouncilsInput>>,\n};\n\nexport type CouncilMemberUpdateManyWithWhereNestedInput = {\n  data: CouncilMemberUpdateManyDataInput,\n  where: CouncilMemberScalarWhereInput,\n};\n\nexport type CouncilMemberUpdateWithoutCouncilsDataInput = {\n  address?: Maybe<Scalars['String']>,\n};\n\nexport type CouncilMemberUpdateWithWhereUniqueWithoutCouncilsInput = {\n  data: CouncilMemberUpdateWithoutCouncilsDataInput,\n  where: CouncilMemberWhereUniqueInput,\n};\n\nexport type CouncilMemberUpsertWithWhereUniqueWithoutCouncilsInput = {\n  create: CouncilMemberCreateWithoutCouncilsInput,\n  update: CouncilMemberUpdateWithoutCouncilsDataInput,\n  where: CouncilMemberWhereUniqueInput,\n};\n\nexport type CouncilMemberWhereInput = {\n  AND?: Maybe<Array<CouncilMemberWhereInput>>,\n  NOT?: Maybe<Array<CouncilMemberWhereInput>>,\n  OR?: Maybe<Array<CouncilMemberWhereInput>>,\n  address?: Maybe<Scalars['String']>,\n  address_contains?: Maybe<Scalars['String']>,\n  address_ends_with?: Maybe<Scalars['String']>,\n  address_gt?: Maybe<Scalars['String']>,\n  address_gte?: Maybe<Scalars['String']>,\n  address_in?: Maybe<Array<Scalars['String']>>,\n  address_lt?: Maybe<Scalars['String']>,\n  address_lte?: Maybe<Scalars['String']>,\n  address_not?: Maybe<Scalars['String']>,\n  address_not_contains?: Maybe<Scalars['String']>,\n  address_not_ends_with?: Maybe<Scalars['String']>,\n  address_not_in?: Maybe<Array<Scalars['String']>>,\n  address_not_starts_with?: Maybe<Scalars['String']>,\n  address_starts_with?: Maybe<Scalars['String']>,\n  councils_every?: Maybe<CouncilWhereInput>,\n  councils_none?: Maybe<CouncilWhereInput>,\n  councils_some?: Maybe<CouncilWhereInput>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n};\n\nexport type CouncilMemberWhereUniqueInput = {\n  address?: Maybe<Scalars['String']>,\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport enum CouncilOrderByInput {\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC'\n}\n\nexport type CouncilPreviousValues = {\n   __typename?: 'CouncilPreviousValues',\n  id: Scalars['ID'],\n};\n\nexport type CouncilScalarWhereInput = {\n  AND?: Maybe<Array<CouncilScalarWhereInput>>,\n  NOT?: Maybe<Array<CouncilScalarWhereInput>>,\n  OR?: Maybe<Array<CouncilScalarWhereInput>>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n};\n\nexport type CouncilSubscriptionPayload = {\n   __typename?: 'CouncilSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<Council>,\n  previousValues?: Maybe<CouncilPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type CouncilSubscriptionWhereInput = {\n  AND?: Maybe<Array<CouncilSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<CouncilSubscriptionWhereInput>>,\n  OR?: Maybe<Array<CouncilSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<CouncilWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type CouncilUpdateInput = {\n  blockNumber?: Maybe<BlockNumberUpdateOneRequiredInput>,\n  members?: Maybe<CouncilMemberUpdateManyWithoutCouncilsInput>,\n};\n\nexport type CouncilUpdateManyWithoutMembersInput = {\n  connect?: Maybe<Array<CouncilWhereUniqueInput>>,\n  create?: Maybe<Array<CouncilCreateWithoutMembersInput>>,\n  delete?: Maybe<Array<CouncilWhereUniqueInput>>,\n  deleteMany?: Maybe<Array<CouncilScalarWhereInput>>,\n  disconnect?: Maybe<Array<CouncilWhereUniqueInput>>,\n  set?: Maybe<Array<CouncilWhereUniqueInput>>,\n  update?: Maybe<Array<CouncilUpdateWithWhereUniqueWithoutMembersInput>>,\n  upsert?: Maybe<Array<CouncilUpsertWithWhereUniqueWithoutMembersInput>>,\n};\n\nexport type CouncilUpdateWithoutMembersDataInput = {\n  blockNumber?: Maybe<BlockNumberUpdateOneRequiredInput>,\n};\n\nexport type CouncilUpdateWithWhereUniqueWithoutMembersInput = {\n  data: CouncilUpdateWithoutMembersDataInput,\n  where: CouncilWhereUniqueInput,\n};\n\nexport type CouncilUpsertWithWhereUniqueWithoutMembersInput = {\n  create: CouncilCreateWithoutMembersInput,\n  update: CouncilUpdateWithoutMembersDataInput,\n  where: CouncilWhereUniqueInput,\n};\n\nexport type CouncilWhereInput = {\n  AND?: Maybe<Array<CouncilWhereInput>>,\n  NOT?: Maybe<Array<CouncilWhereInput>>,\n  OR?: Maybe<Array<CouncilWhereInput>>,\n  blockNumber?: Maybe<BlockNumberWhereInput>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  members_every?: Maybe<CouncilMemberWhereInput>,\n  members_none?: Maybe<CouncilMemberWhereInput>,\n  members_some?: Maybe<CouncilMemberWhereInput>,\n};\n\nexport type CouncilWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n};\n\n\nexport type Era = Node & {\n   __typename?: 'Era',\n  eraStartSessionIndex: Session,\n  id: Scalars['ID'],\n  index: Scalars['Int'],\n  individualPoints: Array<Scalars['String']>,\n  totalPoints: Scalars['String'],\n};\n\nexport type EraConnection = {\n   __typename?: 'EraConnection',\n  aggregate: AggregateEra,\n  edges: Array<Maybe<EraEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type EraCreateindividualPointsInput = {\n  set?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type EraCreateInput = {\n  eraStartSessionIndex: SessionCreateOneInput,\n  id?: Maybe<Scalars['ID']>,\n  index: Scalars['Int'],\n  individualPoints?: Maybe<EraCreateindividualPointsInput>,\n  totalPoints: Scalars['String'],\n};\n\nexport type EraEdge = {\n   __typename?: 'EraEdge',\n  cursor: Scalars['String'],\n  node: Era,\n};\n\nexport enum EraOrderByInput {\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  IndexAsc = 'index_ASC',\n  IndexDesc = 'index_DESC',\n  TotalPointsAsc = 'totalPoints_ASC',\n  TotalPointsDesc = 'totalPoints_DESC'\n}\n\nexport type EraPreviousValues = {\n   __typename?: 'EraPreviousValues',\n  id: Scalars['ID'],\n  index: Scalars['Int'],\n  individualPoints: Array<Scalars['String']>,\n  totalPoints: Scalars['String'],\n};\n\nexport type EraSubscriptionPayload = {\n   __typename?: 'EraSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<Era>,\n  previousValues?: Maybe<EraPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type EraSubscriptionWhereInput = {\n  AND?: Maybe<Array<EraSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<EraSubscriptionWhereInput>>,\n  OR?: Maybe<Array<EraSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<EraWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type EraUpdateindividualPointsInput = {\n  set?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type EraUpdateInput = {\n  eraStartSessionIndex?: Maybe<SessionUpdateOneRequiredInput>,\n  index?: Maybe<Scalars['Int']>,\n  individualPoints?: Maybe<EraUpdateindividualPointsInput>,\n  totalPoints?: Maybe<Scalars['String']>,\n};\n\nexport type EraUpdateManyMutationInput = {\n  index?: Maybe<Scalars['Int']>,\n  individualPoints?: Maybe<EraUpdateindividualPointsInput>,\n  totalPoints?: Maybe<Scalars['String']>,\n};\n\nexport type EraWhereInput = {\n  AND?: Maybe<Array<EraWhereInput>>,\n  NOT?: Maybe<Array<EraWhereInput>>,\n  OR?: Maybe<Array<EraWhereInput>>,\n  eraStartSessionIndex?: Maybe<SessionWhereInput>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  index?: Maybe<Scalars['Int']>,\n  index_gt?: Maybe<Scalars['Int']>,\n  index_gte?: Maybe<Scalars['Int']>,\n  index_in?: Maybe<Array<Scalars['Int']>>,\n  index_lt?: Maybe<Scalars['Int']>,\n  index_lte?: Maybe<Scalars['Int']>,\n  index_not?: Maybe<Scalars['Int']>,\n  index_not_in?: Maybe<Array<Scalars['Int']>>,\n  totalPoints?: Maybe<Scalars['String']>,\n  totalPoints_contains?: Maybe<Scalars['String']>,\n  totalPoints_ends_with?: Maybe<Scalars['String']>,\n  totalPoints_gt?: Maybe<Scalars['String']>,\n  totalPoints_gte?: Maybe<Scalars['String']>,\n  totalPoints_in?: Maybe<Array<Scalars['String']>>,\n  totalPoints_lt?: Maybe<Scalars['String']>,\n  totalPoints_lte?: Maybe<Scalars['String']>,\n  totalPoints_not?: Maybe<Scalars['String']>,\n  totalPoints_not_contains?: Maybe<Scalars['String']>,\n  totalPoints_not_ends_with?: Maybe<Scalars['String']>,\n  totalPoints_not_in?: Maybe<Array<Scalars['String']>>,\n  totalPoints_not_starts_with?: Maybe<Scalars['String']>,\n  totalPoints_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type EraWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n  index?: Maybe<Scalars['Int']>,\n};\n\nexport type HeartBeat = Node & {\n   __typename?: 'HeartBeat',\n  authorityId: Scalars['String'],\n  id: Scalars['ID'],\n  sessionIndex: Session,\n};\n\nexport type HeartBeatConnection = {\n   __typename?: 'HeartBeatConnection',\n  aggregate: AggregateHeartBeat,\n  edges: Array<Maybe<HeartBeatEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type HeartBeatCreateInput = {\n  authorityId: Scalars['String'],\n  id?: Maybe<Scalars['ID']>,\n  sessionIndex: SessionCreateOneInput,\n};\n\nexport type HeartBeatEdge = {\n   __typename?: 'HeartBeatEdge',\n  cursor: Scalars['String'],\n  node: HeartBeat,\n};\n\nexport enum HeartBeatOrderByInput {\n  AuthorityIdAsc = 'authorityId_ASC',\n  AuthorityIdDesc = 'authorityId_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC'\n}\n\nexport type HeartBeatPreviousValues = {\n   __typename?: 'HeartBeatPreviousValues',\n  authorityId: Scalars['String'],\n  id: Scalars['ID'],\n};\n\nexport type HeartBeatSubscriptionPayload = {\n   __typename?: 'HeartBeatSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<HeartBeat>,\n  previousValues?: Maybe<HeartBeatPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type HeartBeatSubscriptionWhereInput = {\n  AND?: Maybe<Array<HeartBeatSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<HeartBeatSubscriptionWhereInput>>,\n  OR?: Maybe<Array<HeartBeatSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<HeartBeatWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type HeartBeatUpdateInput = {\n  authorityId?: Maybe<Scalars['String']>,\n  sessionIndex?: Maybe<SessionUpdateOneRequiredInput>,\n};\n\nexport type HeartBeatUpdateManyMutationInput = {\n  authorityId?: Maybe<Scalars['String']>,\n};\n\nexport type HeartBeatWhereInput = {\n  AND?: Maybe<Array<HeartBeatWhereInput>>,\n  NOT?: Maybe<Array<HeartBeatWhereInput>>,\n  OR?: Maybe<Array<HeartBeatWhereInput>>,\n  authorityId?: Maybe<Scalars['String']>,\n  authorityId_contains?: Maybe<Scalars['String']>,\n  authorityId_ends_with?: Maybe<Scalars['String']>,\n  authorityId_gt?: Maybe<Scalars['String']>,\n  authorityId_gte?: Maybe<Scalars['String']>,\n  authorityId_in?: Maybe<Array<Scalars['String']>>,\n  authorityId_lt?: Maybe<Scalars['String']>,\n  authorityId_lte?: Maybe<Scalars['String']>,\n  authorityId_not?: Maybe<Scalars['String']>,\n  authorityId_not_contains?: Maybe<Scalars['String']>,\n  authorityId_not_ends_with?: Maybe<Scalars['String']>,\n  authorityId_not_in?: Maybe<Array<Scalars['String']>>,\n  authorityId_not_starts_with?: Maybe<Scalars['String']>,\n  authorityId_starts_with?: Maybe<Scalars['String']>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  sessionIndex?: Maybe<SessionWhereInput>,\n};\n\nexport type HeartBeatWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type Int_Comparison_Exp = {\n  _eq?: Maybe<Scalars['Int']>,\n  _gt?: Maybe<Scalars['Int']>,\n  _gte?: Maybe<Scalars['Int']>,\n  _in?: Maybe<Array<Scalars['Int']>>,\n  _is_null?: Maybe<Scalars['Boolean']>,\n  _lt?: Maybe<Scalars['Int']>,\n  _lte?: Maybe<Scalars['Int']>,\n  _neq?: Maybe<Scalars['Int']>,\n  _nin?: Maybe<Array<Scalars['Int']>>,\n};\n\n\nexport type LoginResponse = {\n   __typename?: 'LoginResponse',\n  token?: Maybe<Scalars['String']>,\n  user?: Maybe<User>,\n};\n\n\nexport type Message = {\n   __typename?: 'Message',\n  message?: Maybe<Scalars['String']>,\n};\n\nexport type Motion = {\n   __typename?: 'Motion',\n  author: Scalars['String'],\n  id: Scalars['Int'],\n  memberCount: Scalars['Int'],\n  metaDescription: Scalars['String'],\n  method: Scalars['String'],\n  motionProposalArguments?: Maybe<Array<MotionProposalArgument>>,\n  motionProposalHash: Scalars['String'],\n  motionProposalId: Scalars['Int'],\n  motionStatus?: Maybe<Array<MotionStatus>>,\n  preimage?: Maybe<Preimage>,\n  preimageHash?: Maybe<Scalars['String']>,\n  section: Scalars['String'],\n  treasurySpendProposal?: Maybe<TreasurySpendProposal>,\n};\n\n\nexport type MotionMotionProposalArgumentsArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<MotionProposalArgumentOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<MotionProposalArgumentWhereInput>\n};\n\n\nexport type MotionMotionStatusArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<MotionStatusOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<MotionStatusWhereInput>\n};\n\nexport type MotionConnection = {\n   __typename?: 'MotionConnection',\n  aggregate: AggregateMotion,\n  edges: Array<Maybe<MotionEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type MotionCreateInput = {\n  author: Scalars['String'],\n  memberCount: Scalars['Int'],\n  metaDescription: Scalars['String'],\n  method: Scalars['String'],\n  motionProposalArguments?: Maybe<MotionProposalArgumentCreateManyWithoutMotionInput>,\n  motionProposalHash: Scalars['String'],\n  motionProposalId: Scalars['Int'],\n  motionStatus?: Maybe<MotionStatusCreateManyWithoutMotionInput>,\n  preimage?: Maybe<PreimageCreateOneWithoutMotionInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  section: Scalars['String'],\n  treasurySpendProposal?: Maybe<TreasurySpendProposalCreateOneWithoutMotionInput>,\n};\n\nexport type MotionCreateOneWithoutMotionProposalArgumentsInput = {\n  connect?: Maybe<MotionWhereUniqueInput>,\n  create?: Maybe<MotionCreateWithoutMotionProposalArgumentsInput>,\n};\n\nexport type MotionCreateOneWithoutMotionStatusInput = {\n  connect?: Maybe<MotionWhereUniqueInput>,\n  create?: Maybe<MotionCreateWithoutMotionStatusInput>,\n};\n\nexport type MotionCreateOneWithoutPreimageInput = {\n  connect?: Maybe<MotionWhereUniqueInput>,\n  create?: Maybe<MotionCreateWithoutPreimageInput>,\n};\n\nexport type MotionCreateOneWithoutTreasurySpendProposalInput = {\n  connect?: Maybe<MotionWhereUniqueInput>,\n  create?: Maybe<MotionCreateWithoutTreasurySpendProposalInput>,\n};\n\nexport type MotionCreateWithoutMotionProposalArgumentsInput = {\n  author: Scalars['String'],\n  memberCount: Scalars['Int'],\n  metaDescription: Scalars['String'],\n  method: Scalars['String'],\n  motionProposalHash: Scalars['String'],\n  motionProposalId: Scalars['Int'],\n  motionStatus?: Maybe<MotionStatusCreateManyWithoutMotionInput>,\n  preimage?: Maybe<PreimageCreateOneWithoutMotionInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  section: Scalars['String'],\n  treasurySpendProposal?: Maybe<TreasurySpendProposalCreateOneWithoutMotionInput>,\n};\n\nexport type MotionCreateWithoutMotionStatusInput = {\n  author: Scalars['String'],\n  memberCount: Scalars['Int'],\n  metaDescription: Scalars['String'],\n  method: Scalars['String'],\n  motionProposalArguments?: Maybe<MotionProposalArgumentCreateManyWithoutMotionInput>,\n  motionProposalHash: Scalars['String'],\n  motionProposalId: Scalars['Int'],\n  preimage?: Maybe<PreimageCreateOneWithoutMotionInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  section: Scalars['String'],\n  treasurySpendProposal?: Maybe<TreasurySpendProposalCreateOneWithoutMotionInput>,\n};\n\nexport type MotionCreateWithoutPreimageInput = {\n  author: Scalars['String'],\n  memberCount: Scalars['Int'],\n  metaDescription: Scalars['String'],\n  method: Scalars['String'],\n  motionProposalArguments?: Maybe<MotionProposalArgumentCreateManyWithoutMotionInput>,\n  motionProposalHash: Scalars['String'],\n  motionProposalId: Scalars['Int'],\n  motionStatus?: Maybe<MotionStatusCreateManyWithoutMotionInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  section: Scalars['String'],\n  treasurySpendProposal?: Maybe<TreasurySpendProposalCreateOneWithoutMotionInput>,\n};\n\nexport type MotionCreateWithoutTreasurySpendProposalInput = {\n  author: Scalars['String'],\n  memberCount: Scalars['Int'],\n  metaDescription: Scalars['String'],\n  method: Scalars['String'],\n  motionProposalArguments?: Maybe<MotionProposalArgumentCreateManyWithoutMotionInput>,\n  motionProposalHash: Scalars['String'],\n  motionProposalId: Scalars['Int'],\n  motionStatus?: Maybe<MotionStatusCreateManyWithoutMotionInput>,\n  preimage?: Maybe<PreimageCreateOneWithoutMotionInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  section: Scalars['String'],\n};\n\nexport type MotionEdge = {\n   __typename?: 'MotionEdge',\n  cursor: Scalars['String'],\n  node: Motion,\n};\n\nexport enum MotionOrderByInput {\n  AuthorAsc = 'author_ASC',\n  AuthorDesc = 'author_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  MemberCountAsc = 'memberCount_ASC',\n  MemberCountDesc = 'memberCount_DESC',\n  MetaDescriptionAsc = 'metaDescription_ASC',\n  MetaDescriptionDesc = 'metaDescription_DESC',\n  MethodAsc = 'method_ASC',\n  MethodDesc = 'method_DESC',\n  MotionProposalHashAsc = 'motionProposalHash_ASC',\n  MotionProposalHashDesc = 'motionProposalHash_DESC',\n  MotionProposalIdAsc = 'motionProposalId_ASC',\n  MotionProposalIdDesc = 'motionProposalId_DESC',\n  PreimageHashAsc = 'preimageHash_ASC',\n  PreimageHashDesc = 'preimageHash_DESC',\n  SectionAsc = 'section_ASC',\n  SectionDesc = 'section_DESC'\n}\n\nexport type MotionPreviousValues = {\n   __typename?: 'MotionPreviousValues',\n  author: Scalars['String'],\n  id: Scalars['Int'],\n  memberCount: Scalars['Int'],\n  metaDescription: Scalars['String'],\n  method: Scalars['String'],\n  motionProposalHash: Scalars['String'],\n  motionProposalId: Scalars['Int'],\n  preimageHash?: Maybe<Scalars['String']>,\n  section: Scalars['String'],\n};\n\nexport type MotionProposalArgument = Node & {\n   __typename?: 'MotionProposalArgument',\n  id: Scalars['ID'],\n  motion: Motion,\n  name: Scalars['String'],\n  value: Scalars['String'],\n};\n\nexport type MotionProposalArgumentConnection = {\n   __typename?: 'MotionProposalArgumentConnection',\n  aggregate: AggregateMotionProposalArgument,\n  edges: Array<Maybe<MotionProposalArgumentEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type MotionProposalArgumentCreateInput = {\n  id?: Maybe<Scalars['ID']>,\n  motion: MotionCreateOneWithoutMotionProposalArgumentsInput,\n  name: Scalars['String'],\n  value: Scalars['String'],\n};\n\nexport type MotionProposalArgumentCreateManyWithoutMotionInput = {\n  connect?: Maybe<Array<MotionProposalArgumentWhereUniqueInput>>,\n  create?: Maybe<Array<MotionProposalArgumentCreateWithoutMotionInput>>,\n};\n\nexport type MotionProposalArgumentCreateWithoutMotionInput = {\n  id?: Maybe<Scalars['ID']>,\n  name: Scalars['String'],\n  value: Scalars['String'],\n};\n\nexport type MotionProposalArgumentEdge = {\n   __typename?: 'MotionProposalArgumentEdge',\n  cursor: Scalars['String'],\n  node: MotionProposalArgument,\n};\n\nexport enum MotionProposalArgumentOrderByInput {\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  NameAsc = 'name_ASC',\n  NameDesc = 'name_DESC',\n  ValueAsc = 'value_ASC',\n  ValueDesc = 'value_DESC'\n}\n\nexport type MotionProposalArgumentPreviousValues = {\n   __typename?: 'MotionProposalArgumentPreviousValues',\n  id: Scalars['ID'],\n  name: Scalars['String'],\n  value: Scalars['String'],\n};\n\nexport type MotionProposalArgumentScalarWhereInput = {\n  AND?: Maybe<Array<MotionProposalArgumentScalarWhereInput>>,\n  NOT?: Maybe<Array<MotionProposalArgumentScalarWhereInput>>,\n  OR?: Maybe<Array<MotionProposalArgumentScalarWhereInput>>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  name?: Maybe<Scalars['String']>,\n  name_contains?: Maybe<Scalars['String']>,\n  name_ends_with?: Maybe<Scalars['String']>,\n  name_gt?: Maybe<Scalars['String']>,\n  name_gte?: Maybe<Scalars['String']>,\n  name_in?: Maybe<Array<Scalars['String']>>,\n  name_lt?: Maybe<Scalars['String']>,\n  name_lte?: Maybe<Scalars['String']>,\n  name_not?: Maybe<Scalars['String']>,\n  name_not_contains?: Maybe<Scalars['String']>,\n  name_not_ends_with?: Maybe<Scalars['String']>,\n  name_not_in?: Maybe<Array<Scalars['String']>>,\n  name_not_starts_with?: Maybe<Scalars['String']>,\n  name_starts_with?: Maybe<Scalars['String']>,\n  value?: Maybe<Scalars['String']>,\n  value_contains?: Maybe<Scalars['String']>,\n  value_ends_with?: Maybe<Scalars['String']>,\n  value_gt?: Maybe<Scalars['String']>,\n  value_gte?: Maybe<Scalars['String']>,\n  value_in?: Maybe<Array<Scalars['String']>>,\n  value_lt?: Maybe<Scalars['String']>,\n  value_lte?: Maybe<Scalars['String']>,\n  value_not?: Maybe<Scalars['String']>,\n  value_not_contains?: Maybe<Scalars['String']>,\n  value_not_ends_with?: Maybe<Scalars['String']>,\n  value_not_in?: Maybe<Array<Scalars['String']>>,\n  value_not_starts_with?: Maybe<Scalars['String']>,\n  value_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type MotionProposalArgumentSubscriptionPayload = {\n   __typename?: 'MotionProposalArgumentSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<MotionProposalArgument>,\n  previousValues?: Maybe<MotionProposalArgumentPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type MotionProposalArgumentSubscriptionWhereInput = {\n  AND?: Maybe<Array<MotionProposalArgumentSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<MotionProposalArgumentSubscriptionWhereInput>>,\n  OR?: Maybe<Array<MotionProposalArgumentSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<MotionProposalArgumentWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type MotionProposalArgumentUpdateInput = {\n  motion?: Maybe<MotionUpdateOneRequiredWithoutMotionProposalArgumentsInput>,\n  name?: Maybe<Scalars['String']>,\n  value?: Maybe<Scalars['String']>,\n};\n\nexport type MotionProposalArgumentUpdateManyDataInput = {\n  name?: Maybe<Scalars['String']>,\n  value?: Maybe<Scalars['String']>,\n};\n\nexport type MotionProposalArgumentUpdateManyMutationInput = {\n  name?: Maybe<Scalars['String']>,\n  value?: Maybe<Scalars['String']>,\n};\n\nexport type MotionProposalArgumentUpdateManyWithoutMotionInput = {\n  connect?: Maybe<Array<MotionProposalArgumentWhereUniqueInput>>,\n  create?: Maybe<Array<MotionProposalArgumentCreateWithoutMotionInput>>,\n  delete?: Maybe<Array<MotionProposalArgumentWhereUniqueInput>>,\n  deleteMany?: Maybe<Array<MotionProposalArgumentScalarWhereInput>>,\n  disconnect?: Maybe<Array<MotionProposalArgumentWhereUniqueInput>>,\n  set?: Maybe<Array<MotionProposalArgumentWhereUniqueInput>>,\n  update?: Maybe<Array<MotionProposalArgumentUpdateWithWhereUniqueWithoutMotionInput>>,\n  updateMany?: Maybe<Array<MotionProposalArgumentUpdateManyWithWhereNestedInput>>,\n  upsert?: Maybe<Array<MotionProposalArgumentUpsertWithWhereUniqueWithoutMotionInput>>,\n};\n\nexport type MotionProposalArgumentUpdateManyWithWhereNestedInput = {\n  data: MotionProposalArgumentUpdateManyDataInput,\n  where: MotionProposalArgumentScalarWhereInput,\n};\n\nexport type MotionProposalArgumentUpdateWithoutMotionDataInput = {\n  name?: Maybe<Scalars['String']>,\n  value?: Maybe<Scalars['String']>,\n};\n\nexport type MotionProposalArgumentUpdateWithWhereUniqueWithoutMotionInput = {\n  data: MotionProposalArgumentUpdateWithoutMotionDataInput,\n  where: MotionProposalArgumentWhereUniqueInput,\n};\n\nexport type MotionProposalArgumentUpsertWithWhereUniqueWithoutMotionInput = {\n  create: MotionProposalArgumentCreateWithoutMotionInput,\n  update: MotionProposalArgumentUpdateWithoutMotionDataInput,\n  where: MotionProposalArgumentWhereUniqueInput,\n};\n\nexport type MotionProposalArgumentWhereInput = {\n  AND?: Maybe<Array<MotionProposalArgumentWhereInput>>,\n  NOT?: Maybe<Array<MotionProposalArgumentWhereInput>>,\n  OR?: Maybe<Array<MotionProposalArgumentWhereInput>>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  motion?: Maybe<MotionWhereInput>,\n  name?: Maybe<Scalars['String']>,\n  name_contains?: Maybe<Scalars['String']>,\n  name_ends_with?: Maybe<Scalars['String']>,\n  name_gt?: Maybe<Scalars['String']>,\n  name_gte?: Maybe<Scalars['String']>,\n  name_in?: Maybe<Array<Scalars['String']>>,\n  name_lt?: Maybe<Scalars['String']>,\n  name_lte?: Maybe<Scalars['String']>,\n  name_not?: Maybe<Scalars['String']>,\n  name_not_contains?: Maybe<Scalars['String']>,\n  name_not_ends_with?: Maybe<Scalars['String']>,\n  name_not_in?: Maybe<Array<Scalars['String']>>,\n  name_not_starts_with?: Maybe<Scalars['String']>,\n  name_starts_with?: Maybe<Scalars['String']>,\n  value?: Maybe<Scalars['String']>,\n  value_contains?: Maybe<Scalars['String']>,\n  value_ends_with?: Maybe<Scalars['String']>,\n  value_gt?: Maybe<Scalars['String']>,\n  value_gte?: Maybe<Scalars['String']>,\n  value_in?: Maybe<Array<Scalars['String']>>,\n  value_lt?: Maybe<Scalars['String']>,\n  value_lte?: Maybe<Scalars['String']>,\n  value_not?: Maybe<Scalars['String']>,\n  value_not_contains?: Maybe<Scalars['String']>,\n  value_not_ends_with?: Maybe<Scalars['String']>,\n  value_not_in?: Maybe<Array<Scalars['String']>>,\n  value_not_starts_with?: Maybe<Scalars['String']>,\n  value_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type MotionProposalArgumentWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type MotionStatus = Node & {\n   __typename?: 'MotionStatus',\n  blockNumber: BlockNumber,\n  id: Scalars['ID'],\n  motion: Motion,\n  status: Scalars['String'],\n};\n\nexport type MotionStatusConnection = {\n   __typename?: 'MotionStatusConnection',\n  aggregate: AggregateMotionStatus,\n  edges: Array<Maybe<MotionStatusEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type MotionStatusCreateInput = {\n  blockNumber: BlockNumberCreateOneInput,\n  id?: Maybe<Scalars['ID']>,\n  motion: MotionCreateOneWithoutMotionStatusInput,\n  status: Scalars['String'],\n};\n\nexport type MotionStatusCreateManyWithoutMotionInput = {\n  connect?: Maybe<Array<MotionStatusWhereUniqueInput>>,\n  create?: Maybe<Array<MotionStatusCreateWithoutMotionInput>>,\n};\n\nexport type MotionStatusCreateWithoutMotionInput = {\n  blockNumber: BlockNumberCreateOneInput,\n  id?: Maybe<Scalars['ID']>,\n  status: Scalars['String'],\n};\n\nexport type MotionStatusEdge = {\n   __typename?: 'MotionStatusEdge',\n  cursor: Scalars['String'],\n  node: MotionStatus,\n};\n\nexport enum MotionStatusOrderByInput {\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  StatusAsc = 'status_ASC',\n  StatusDesc = 'status_DESC'\n}\n\nexport type MotionStatusPreviousValues = {\n   __typename?: 'MotionStatusPreviousValues',\n  id: Scalars['ID'],\n  status: Scalars['String'],\n};\n\nexport type MotionStatusScalarWhereInput = {\n  AND?: Maybe<Array<MotionStatusScalarWhereInput>>,\n  NOT?: Maybe<Array<MotionStatusScalarWhereInput>>,\n  OR?: Maybe<Array<MotionStatusScalarWhereInput>>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  status?: Maybe<Scalars['String']>,\n  status_contains?: Maybe<Scalars['String']>,\n  status_ends_with?: Maybe<Scalars['String']>,\n  status_gt?: Maybe<Scalars['String']>,\n  status_gte?: Maybe<Scalars['String']>,\n  status_in?: Maybe<Array<Scalars['String']>>,\n  status_lt?: Maybe<Scalars['String']>,\n  status_lte?: Maybe<Scalars['String']>,\n  status_not?: Maybe<Scalars['String']>,\n  status_not_contains?: Maybe<Scalars['String']>,\n  status_not_ends_with?: Maybe<Scalars['String']>,\n  status_not_in?: Maybe<Array<Scalars['String']>>,\n  status_not_starts_with?: Maybe<Scalars['String']>,\n  status_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type MotionStatusSubscriptionPayload = {\n   __typename?: 'MotionStatusSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<MotionStatus>,\n  previousValues?: Maybe<MotionStatusPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type MotionStatusSubscriptionWhereInput = {\n  AND?: Maybe<Array<MotionStatusSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<MotionStatusSubscriptionWhereInput>>,\n  OR?: Maybe<Array<MotionStatusSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<MotionStatusWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type MotionStatusUpdateInput = {\n  blockNumber?: Maybe<BlockNumberUpdateOneRequiredInput>,\n  motion?: Maybe<MotionUpdateOneRequiredWithoutMotionStatusInput>,\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type MotionStatusUpdateManyDataInput = {\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type MotionStatusUpdateManyMutationInput = {\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type MotionStatusUpdateManyWithoutMotionInput = {\n  connect?: Maybe<Array<MotionStatusWhereUniqueInput>>,\n  create?: Maybe<Array<MotionStatusCreateWithoutMotionInput>>,\n  delete?: Maybe<Array<MotionStatusWhereUniqueInput>>,\n  deleteMany?: Maybe<Array<MotionStatusScalarWhereInput>>,\n  disconnect?: Maybe<Array<MotionStatusWhereUniqueInput>>,\n  set?: Maybe<Array<MotionStatusWhereUniqueInput>>,\n  update?: Maybe<Array<MotionStatusUpdateWithWhereUniqueWithoutMotionInput>>,\n  updateMany?: Maybe<Array<MotionStatusUpdateManyWithWhereNestedInput>>,\n  upsert?: Maybe<Array<MotionStatusUpsertWithWhereUniqueWithoutMotionInput>>,\n};\n\nexport type MotionStatusUpdateManyWithWhereNestedInput = {\n  data: MotionStatusUpdateManyDataInput,\n  where: MotionStatusScalarWhereInput,\n};\n\nexport type MotionStatusUpdateWithoutMotionDataInput = {\n  blockNumber?: Maybe<BlockNumberUpdateOneRequiredInput>,\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type MotionStatusUpdateWithWhereUniqueWithoutMotionInput = {\n  data: MotionStatusUpdateWithoutMotionDataInput,\n  where: MotionStatusWhereUniqueInput,\n};\n\nexport type MotionStatusUpsertWithWhereUniqueWithoutMotionInput = {\n  create: MotionStatusCreateWithoutMotionInput,\n  update: MotionStatusUpdateWithoutMotionDataInput,\n  where: MotionStatusWhereUniqueInput,\n};\n\nexport type MotionStatusWhereInput = {\n  AND?: Maybe<Array<MotionStatusWhereInput>>,\n  NOT?: Maybe<Array<MotionStatusWhereInput>>,\n  OR?: Maybe<Array<MotionStatusWhereInput>>,\n  blockNumber?: Maybe<BlockNumberWhereInput>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  motion?: Maybe<MotionWhereInput>,\n  status?: Maybe<Scalars['String']>,\n  status_contains?: Maybe<Scalars['String']>,\n  status_ends_with?: Maybe<Scalars['String']>,\n  status_gt?: Maybe<Scalars['String']>,\n  status_gte?: Maybe<Scalars['String']>,\n  status_in?: Maybe<Array<Scalars['String']>>,\n  status_lt?: Maybe<Scalars['String']>,\n  status_lte?: Maybe<Scalars['String']>,\n  status_not?: Maybe<Scalars['String']>,\n  status_not_contains?: Maybe<Scalars['String']>,\n  status_not_ends_with?: Maybe<Scalars['String']>,\n  status_not_in?: Maybe<Array<Scalars['String']>>,\n  status_not_starts_with?: Maybe<Scalars['String']>,\n  status_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type MotionStatusWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type MotionSubscriptionPayload = {\n   __typename?: 'MotionSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<Motion>,\n  previousValues?: Maybe<MotionPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type MotionSubscriptionWhereInput = {\n  AND?: Maybe<Array<MotionSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<MotionSubscriptionWhereInput>>,\n  OR?: Maybe<Array<MotionSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<MotionWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type MotionUpdateInput = {\n  author?: Maybe<Scalars['String']>,\n  memberCount?: Maybe<Scalars['Int']>,\n  metaDescription?: Maybe<Scalars['String']>,\n  method?: Maybe<Scalars['String']>,\n  motionProposalArguments?: Maybe<MotionProposalArgumentUpdateManyWithoutMotionInput>,\n  motionProposalHash?: Maybe<Scalars['String']>,\n  motionProposalId?: Maybe<Scalars['Int']>,\n  motionStatus?: Maybe<MotionStatusUpdateManyWithoutMotionInput>,\n  preimage?: Maybe<PreimageUpdateOneWithoutMotionInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  section?: Maybe<Scalars['String']>,\n  treasurySpendProposal?: Maybe<TreasurySpendProposalUpdateOneWithoutMotionInput>,\n};\n\nexport type MotionUpdateManyMutationInput = {\n  author?: Maybe<Scalars['String']>,\n  memberCount?: Maybe<Scalars['Int']>,\n  metaDescription?: Maybe<Scalars['String']>,\n  method?: Maybe<Scalars['String']>,\n  motionProposalHash?: Maybe<Scalars['String']>,\n  motionProposalId?: Maybe<Scalars['Int']>,\n  preimageHash?: Maybe<Scalars['String']>,\n  section?: Maybe<Scalars['String']>,\n};\n\nexport type MotionUpdateOneRequiredWithoutMotionProposalArgumentsInput = {\n  connect?: Maybe<MotionWhereUniqueInput>,\n  create?: Maybe<MotionCreateWithoutMotionProposalArgumentsInput>,\n  update?: Maybe<MotionUpdateWithoutMotionProposalArgumentsDataInput>,\n  upsert?: Maybe<MotionUpsertWithoutMotionProposalArgumentsInput>,\n};\n\nexport type MotionUpdateOneRequiredWithoutMotionStatusInput = {\n  connect?: Maybe<MotionWhereUniqueInput>,\n  create?: Maybe<MotionCreateWithoutMotionStatusInput>,\n  update?: Maybe<MotionUpdateWithoutMotionStatusDataInput>,\n  upsert?: Maybe<MotionUpsertWithoutMotionStatusInput>,\n};\n\nexport type MotionUpdateOneWithoutPreimageInput = {\n  connect?: Maybe<MotionWhereUniqueInput>,\n  create?: Maybe<MotionCreateWithoutPreimageInput>,\n  delete?: Maybe<Scalars['Boolean']>,\n  disconnect?: Maybe<Scalars['Boolean']>,\n  update?: Maybe<MotionUpdateWithoutPreimageDataInput>,\n  upsert?: Maybe<MotionUpsertWithoutPreimageInput>,\n};\n\nexport type MotionUpdateOneWithoutTreasurySpendProposalInput = {\n  connect?: Maybe<MotionWhereUniqueInput>,\n  create?: Maybe<MotionCreateWithoutTreasurySpendProposalInput>,\n  delete?: Maybe<Scalars['Boolean']>,\n  disconnect?: Maybe<Scalars['Boolean']>,\n  update?: Maybe<MotionUpdateWithoutTreasurySpendProposalDataInput>,\n  upsert?: Maybe<MotionUpsertWithoutTreasurySpendProposalInput>,\n};\n\nexport type MotionUpdateWithoutMotionProposalArgumentsDataInput = {\n  author?: Maybe<Scalars['String']>,\n  memberCount?: Maybe<Scalars['Int']>,\n  metaDescription?: Maybe<Scalars['String']>,\n  method?: Maybe<Scalars['String']>,\n  motionProposalHash?: Maybe<Scalars['String']>,\n  motionProposalId?: Maybe<Scalars['Int']>,\n  motionStatus?: Maybe<MotionStatusUpdateManyWithoutMotionInput>,\n  preimage?: Maybe<PreimageUpdateOneWithoutMotionInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  section?: Maybe<Scalars['String']>,\n  treasurySpendProposal?: Maybe<TreasurySpendProposalUpdateOneWithoutMotionInput>,\n};\n\nexport type MotionUpdateWithoutMotionStatusDataInput = {\n  author?: Maybe<Scalars['String']>,\n  memberCount?: Maybe<Scalars['Int']>,\n  metaDescription?: Maybe<Scalars['String']>,\n  method?: Maybe<Scalars['String']>,\n  motionProposalArguments?: Maybe<MotionProposalArgumentUpdateManyWithoutMotionInput>,\n  motionProposalHash?: Maybe<Scalars['String']>,\n  motionProposalId?: Maybe<Scalars['Int']>,\n  preimage?: Maybe<PreimageUpdateOneWithoutMotionInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  section?: Maybe<Scalars['String']>,\n  treasurySpendProposal?: Maybe<TreasurySpendProposalUpdateOneWithoutMotionInput>,\n};\n\nexport type MotionUpdateWithoutPreimageDataInput = {\n  author?: Maybe<Scalars['String']>,\n  memberCount?: Maybe<Scalars['Int']>,\n  metaDescription?: Maybe<Scalars['String']>,\n  method?: Maybe<Scalars['String']>,\n  motionProposalArguments?: Maybe<MotionProposalArgumentUpdateManyWithoutMotionInput>,\n  motionProposalHash?: Maybe<Scalars['String']>,\n  motionProposalId?: Maybe<Scalars['Int']>,\n  motionStatus?: Maybe<MotionStatusUpdateManyWithoutMotionInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  section?: Maybe<Scalars['String']>,\n  treasurySpendProposal?: Maybe<TreasurySpendProposalUpdateOneWithoutMotionInput>,\n};\n\nexport type MotionUpdateWithoutTreasurySpendProposalDataInput = {\n  author?: Maybe<Scalars['String']>,\n  memberCount?: Maybe<Scalars['Int']>,\n  metaDescription?: Maybe<Scalars['String']>,\n  method?: Maybe<Scalars['String']>,\n  motionProposalArguments?: Maybe<MotionProposalArgumentUpdateManyWithoutMotionInput>,\n  motionProposalHash?: Maybe<Scalars['String']>,\n  motionProposalId?: Maybe<Scalars['Int']>,\n  motionStatus?: Maybe<MotionStatusUpdateManyWithoutMotionInput>,\n  preimage?: Maybe<PreimageUpdateOneWithoutMotionInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  section?: Maybe<Scalars['String']>,\n};\n\nexport type MotionUpsertWithoutMotionProposalArgumentsInput = {\n  create: MotionCreateWithoutMotionProposalArgumentsInput,\n  update: MotionUpdateWithoutMotionProposalArgumentsDataInput,\n};\n\nexport type MotionUpsertWithoutMotionStatusInput = {\n  create: MotionCreateWithoutMotionStatusInput,\n  update: MotionUpdateWithoutMotionStatusDataInput,\n};\n\nexport type MotionUpsertWithoutPreimageInput = {\n  create: MotionCreateWithoutPreimageInput,\n  update: MotionUpdateWithoutPreimageDataInput,\n};\n\nexport type MotionUpsertWithoutTreasurySpendProposalInput = {\n  create: MotionCreateWithoutTreasurySpendProposalInput,\n  update: MotionUpdateWithoutTreasurySpendProposalDataInput,\n};\n\nexport type MotionWhereInput = {\n  AND?: Maybe<Array<MotionWhereInput>>,\n  NOT?: Maybe<Array<MotionWhereInput>>,\n  OR?: Maybe<Array<MotionWhereInput>>,\n  author?: Maybe<Scalars['String']>,\n  author_contains?: Maybe<Scalars['String']>,\n  author_ends_with?: Maybe<Scalars['String']>,\n  author_gt?: Maybe<Scalars['String']>,\n  author_gte?: Maybe<Scalars['String']>,\n  author_in?: Maybe<Array<Scalars['String']>>,\n  author_lt?: Maybe<Scalars['String']>,\n  author_lte?: Maybe<Scalars['String']>,\n  author_not?: Maybe<Scalars['String']>,\n  author_not_contains?: Maybe<Scalars['String']>,\n  author_not_ends_with?: Maybe<Scalars['String']>,\n  author_not_in?: Maybe<Array<Scalars['String']>>,\n  author_not_starts_with?: Maybe<Scalars['String']>,\n  author_starts_with?: Maybe<Scalars['String']>,\n  id?: Maybe<Scalars['Int']>,\n  id_gt?: Maybe<Scalars['Int']>,\n  id_gte?: Maybe<Scalars['Int']>,\n  id_in?: Maybe<Array<Scalars['Int']>>,\n  id_lt?: Maybe<Scalars['Int']>,\n  id_lte?: Maybe<Scalars['Int']>,\n  id_not?: Maybe<Scalars['Int']>,\n  id_not_in?: Maybe<Array<Scalars['Int']>>,\n  memberCount?: Maybe<Scalars['Int']>,\n  memberCount_gt?: Maybe<Scalars['Int']>,\n  memberCount_gte?: Maybe<Scalars['Int']>,\n  memberCount_in?: Maybe<Array<Scalars['Int']>>,\n  memberCount_lt?: Maybe<Scalars['Int']>,\n  memberCount_lte?: Maybe<Scalars['Int']>,\n  memberCount_not?: Maybe<Scalars['Int']>,\n  memberCount_not_in?: Maybe<Array<Scalars['Int']>>,\n  metaDescription?: Maybe<Scalars['String']>,\n  metaDescription_contains?: Maybe<Scalars['String']>,\n  metaDescription_ends_with?: Maybe<Scalars['String']>,\n  metaDescription_gt?: Maybe<Scalars['String']>,\n  metaDescription_gte?: Maybe<Scalars['String']>,\n  metaDescription_in?: Maybe<Array<Scalars['String']>>,\n  metaDescription_lt?: Maybe<Scalars['String']>,\n  metaDescription_lte?: Maybe<Scalars['String']>,\n  metaDescription_not?: Maybe<Scalars['String']>,\n  metaDescription_not_contains?: Maybe<Scalars['String']>,\n  metaDescription_not_ends_with?: Maybe<Scalars['String']>,\n  metaDescription_not_in?: Maybe<Array<Scalars['String']>>,\n  metaDescription_not_starts_with?: Maybe<Scalars['String']>,\n  metaDescription_starts_with?: Maybe<Scalars['String']>,\n  method?: Maybe<Scalars['String']>,\n  method_contains?: Maybe<Scalars['String']>,\n  method_ends_with?: Maybe<Scalars['String']>,\n  method_gt?: Maybe<Scalars['String']>,\n  method_gte?: Maybe<Scalars['String']>,\n  method_in?: Maybe<Array<Scalars['String']>>,\n  method_lt?: Maybe<Scalars['String']>,\n  method_lte?: Maybe<Scalars['String']>,\n  method_not?: Maybe<Scalars['String']>,\n  method_not_contains?: Maybe<Scalars['String']>,\n  method_not_ends_with?: Maybe<Scalars['String']>,\n  method_not_in?: Maybe<Array<Scalars['String']>>,\n  method_not_starts_with?: Maybe<Scalars['String']>,\n  method_starts_with?: Maybe<Scalars['String']>,\n  motionProposalArguments_every?: Maybe<MotionProposalArgumentWhereInput>,\n  motionProposalArguments_none?: Maybe<MotionProposalArgumentWhereInput>,\n  motionProposalArguments_some?: Maybe<MotionProposalArgumentWhereInput>,\n  motionProposalHash?: Maybe<Scalars['String']>,\n  motionProposalHash_contains?: Maybe<Scalars['String']>,\n  motionProposalHash_ends_with?: Maybe<Scalars['String']>,\n  motionProposalHash_gt?: Maybe<Scalars['String']>,\n  motionProposalHash_gte?: Maybe<Scalars['String']>,\n  motionProposalHash_in?: Maybe<Array<Scalars['String']>>,\n  motionProposalHash_lt?: Maybe<Scalars['String']>,\n  motionProposalHash_lte?: Maybe<Scalars['String']>,\n  motionProposalHash_not?: Maybe<Scalars['String']>,\n  motionProposalHash_not_contains?: Maybe<Scalars['String']>,\n  motionProposalHash_not_ends_with?: Maybe<Scalars['String']>,\n  motionProposalHash_not_in?: Maybe<Array<Scalars['String']>>,\n  motionProposalHash_not_starts_with?: Maybe<Scalars['String']>,\n  motionProposalHash_starts_with?: Maybe<Scalars['String']>,\n  motionProposalId?: Maybe<Scalars['Int']>,\n  motionProposalId_gt?: Maybe<Scalars['Int']>,\n  motionProposalId_gte?: Maybe<Scalars['Int']>,\n  motionProposalId_in?: Maybe<Array<Scalars['Int']>>,\n  motionProposalId_lt?: Maybe<Scalars['Int']>,\n  motionProposalId_lte?: Maybe<Scalars['Int']>,\n  motionProposalId_not?: Maybe<Scalars['Int']>,\n  motionProposalId_not_in?: Maybe<Array<Scalars['Int']>>,\n  motionStatus_every?: Maybe<MotionStatusWhereInput>,\n  motionStatus_none?: Maybe<MotionStatusWhereInput>,\n  motionStatus_some?: Maybe<MotionStatusWhereInput>,\n  preimage?: Maybe<PreimageWhereInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  preimageHash_contains?: Maybe<Scalars['String']>,\n  preimageHash_ends_with?: Maybe<Scalars['String']>,\n  preimageHash_gt?: Maybe<Scalars['String']>,\n  preimageHash_gte?: Maybe<Scalars['String']>,\n  preimageHash_in?: Maybe<Array<Scalars['String']>>,\n  preimageHash_lt?: Maybe<Scalars['String']>,\n  preimageHash_lte?: Maybe<Scalars['String']>,\n  preimageHash_not?: Maybe<Scalars['String']>,\n  preimageHash_not_contains?: Maybe<Scalars['String']>,\n  preimageHash_not_ends_with?: Maybe<Scalars['String']>,\n  preimageHash_not_in?: Maybe<Array<Scalars['String']>>,\n  preimageHash_not_starts_with?: Maybe<Scalars['String']>,\n  preimageHash_starts_with?: Maybe<Scalars['String']>,\n  section?: Maybe<Scalars['String']>,\n  section_contains?: Maybe<Scalars['String']>,\n  section_ends_with?: Maybe<Scalars['String']>,\n  section_gt?: Maybe<Scalars['String']>,\n  section_gte?: Maybe<Scalars['String']>,\n  section_in?: Maybe<Array<Scalars['String']>>,\n  section_lt?: Maybe<Scalars['String']>,\n  section_lte?: Maybe<Scalars['String']>,\n  section_not?: Maybe<Scalars['String']>,\n  section_not_contains?: Maybe<Scalars['String']>,\n  section_not_ends_with?: Maybe<Scalars['String']>,\n  section_not_in?: Maybe<Array<Scalars['String']>>,\n  section_not_starts_with?: Maybe<Scalars['String']>,\n  section_starts_with?: Maybe<Scalars['String']>,\n  treasurySpendProposal?: Maybe<TreasurySpendProposalWhereInput>,\n};\n\nexport type MotionWhereInput_Remote_Rel_Public_Onchain_Linksonchain_Motion = {\n  AND?: Maybe<Array<MotionWhereInput>>,\n  NOT?: Maybe<Array<MotionWhereInput>>,\n  OR?: Maybe<Array<MotionWhereInput>>,\n  author?: Maybe<Scalars['String']>,\n  author_contains?: Maybe<Scalars['String']>,\n  author_ends_with?: Maybe<Scalars['String']>,\n  author_gt?: Maybe<Scalars['String']>,\n  author_gte?: Maybe<Scalars['String']>,\n  author_in?: Maybe<Array<Scalars['String']>>,\n  author_lt?: Maybe<Scalars['String']>,\n  author_lte?: Maybe<Scalars['String']>,\n  author_not?: Maybe<Scalars['String']>,\n  author_not_contains?: Maybe<Scalars['String']>,\n  author_not_ends_with?: Maybe<Scalars['String']>,\n  author_not_in?: Maybe<Array<Scalars['String']>>,\n  author_not_starts_with?: Maybe<Scalars['String']>,\n  author_starts_with?: Maybe<Scalars['String']>,\n  id?: Maybe<Scalars['Int']>,\n  id_gt?: Maybe<Scalars['Int']>,\n  id_gte?: Maybe<Scalars['Int']>,\n  id_in?: Maybe<Array<Scalars['Int']>>,\n  id_lt?: Maybe<Scalars['Int']>,\n  id_lte?: Maybe<Scalars['Int']>,\n  id_not?: Maybe<Scalars['Int']>,\n  id_not_in?: Maybe<Array<Scalars['Int']>>,\n  memberCount?: Maybe<Scalars['Int']>,\n  memberCount_gt?: Maybe<Scalars['Int']>,\n  memberCount_gte?: Maybe<Scalars['Int']>,\n  memberCount_in?: Maybe<Array<Scalars['Int']>>,\n  memberCount_lt?: Maybe<Scalars['Int']>,\n  memberCount_lte?: Maybe<Scalars['Int']>,\n  memberCount_not?: Maybe<Scalars['Int']>,\n  memberCount_not_in?: Maybe<Array<Scalars['Int']>>,\n  metaDescription?: Maybe<Scalars['String']>,\n  metaDescription_contains?: Maybe<Scalars['String']>,\n  metaDescription_ends_with?: Maybe<Scalars['String']>,\n  metaDescription_gt?: Maybe<Scalars['String']>,\n  metaDescription_gte?: Maybe<Scalars['String']>,\n  metaDescription_in?: Maybe<Array<Scalars['String']>>,\n  metaDescription_lt?: Maybe<Scalars['String']>,\n  metaDescription_lte?: Maybe<Scalars['String']>,\n  metaDescription_not?: Maybe<Scalars['String']>,\n  metaDescription_not_contains?: Maybe<Scalars['String']>,\n  metaDescription_not_ends_with?: Maybe<Scalars['String']>,\n  metaDescription_not_in?: Maybe<Array<Scalars['String']>>,\n  metaDescription_not_starts_with?: Maybe<Scalars['String']>,\n  metaDescription_starts_with?: Maybe<Scalars['String']>,\n  method?: Maybe<Scalars['String']>,\n  method_contains?: Maybe<Scalars['String']>,\n  method_ends_with?: Maybe<Scalars['String']>,\n  method_gt?: Maybe<Scalars['String']>,\n  method_gte?: Maybe<Scalars['String']>,\n  method_in?: Maybe<Array<Scalars['String']>>,\n  method_lt?: Maybe<Scalars['String']>,\n  method_lte?: Maybe<Scalars['String']>,\n  method_not?: Maybe<Scalars['String']>,\n  method_not_contains?: Maybe<Scalars['String']>,\n  method_not_ends_with?: Maybe<Scalars['String']>,\n  method_not_in?: Maybe<Array<Scalars['String']>>,\n  method_not_starts_with?: Maybe<Scalars['String']>,\n  method_starts_with?: Maybe<Scalars['String']>,\n  motionProposalArguments_every?: Maybe<MotionProposalArgumentWhereInput>,\n  motionProposalArguments_none?: Maybe<MotionProposalArgumentWhereInput>,\n  motionProposalArguments_some?: Maybe<MotionProposalArgumentWhereInput>,\n  motionProposalHash?: Maybe<Scalars['String']>,\n  motionProposalHash_contains?: Maybe<Scalars['String']>,\n  motionProposalHash_ends_with?: Maybe<Scalars['String']>,\n  motionProposalHash_gt?: Maybe<Scalars['String']>,\n  motionProposalHash_gte?: Maybe<Scalars['String']>,\n  motionProposalHash_in?: Maybe<Array<Scalars['String']>>,\n  motionProposalHash_lt?: Maybe<Scalars['String']>,\n  motionProposalHash_lte?: Maybe<Scalars['String']>,\n  motionProposalHash_not?: Maybe<Scalars['String']>,\n  motionProposalHash_not_contains?: Maybe<Scalars['String']>,\n  motionProposalHash_not_ends_with?: Maybe<Scalars['String']>,\n  motionProposalHash_not_in?: Maybe<Array<Scalars['String']>>,\n  motionProposalHash_not_starts_with?: Maybe<Scalars['String']>,\n  motionProposalHash_starts_with?: Maybe<Scalars['String']>,\n  motionProposalId_gt?: Maybe<Scalars['Int']>,\n  motionProposalId_gte?: Maybe<Scalars['Int']>,\n  motionProposalId_in?: Maybe<Array<Scalars['Int']>>,\n  motionProposalId_lt?: Maybe<Scalars['Int']>,\n  motionProposalId_lte?: Maybe<Scalars['Int']>,\n  motionProposalId_not?: Maybe<Scalars['Int']>,\n  motionProposalId_not_in?: Maybe<Array<Scalars['Int']>>,\n  motionStatus_every?: Maybe<MotionStatusWhereInput>,\n  motionStatus_none?: Maybe<MotionStatusWhereInput>,\n  motionStatus_some?: Maybe<MotionStatusWhereInput>,\n  preimage?: Maybe<PreimageWhereInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  preimageHash_contains?: Maybe<Scalars['String']>,\n  preimageHash_ends_with?: Maybe<Scalars['String']>,\n  preimageHash_gt?: Maybe<Scalars['String']>,\n  preimageHash_gte?: Maybe<Scalars['String']>,\n  preimageHash_in?: Maybe<Array<Scalars['String']>>,\n  preimageHash_lt?: Maybe<Scalars['String']>,\n  preimageHash_lte?: Maybe<Scalars['String']>,\n  preimageHash_not?: Maybe<Scalars['String']>,\n  preimageHash_not_contains?: Maybe<Scalars['String']>,\n  preimageHash_not_ends_with?: Maybe<Scalars['String']>,\n  preimageHash_not_in?: Maybe<Array<Scalars['String']>>,\n  preimageHash_not_starts_with?: Maybe<Scalars['String']>,\n  preimageHash_starts_with?: Maybe<Scalars['String']>,\n  section?: Maybe<Scalars['String']>,\n  section_contains?: Maybe<Scalars['String']>,\n  section_ends_with?: Maybe<Scalars['String']>,\n  section_gt?: Maybe<Scalars['String']>,\n  section_gte?: Maybe<Scalars['String']>,\n  section_in?: Maybe<Array<Scalars['String']>>,\n  section_lt?: Maybe<Scalars['String']>,\n  section_lte?: Maybe<Scalars['String']>,\n  section_not?: Maybe<Scalars['String']>,\n  section_not_contains?: Maybe<Scalars['String']>,\n  section_not_ends_with?: Maybe<Scalars['String']>,\n  section_not_in?: Maybe<Array<Scalars['String']>>,\n  section_not_starts_with?: Maybe<Scalars['String']>,\n  section_starts_with?: Maybe<Scalars['String']>,\n  treasurySpendProposal?: Maybe<TreasurySpendProposalWhereInput>,\n};\n\nexport type MotionWhereUniqueInput = {\n  id?: Maybe<Scalars['Int']>,\n  motionProposalId?: Maybe<Scalars['Int']>,\n};\n\nexport type Mutation = {\n   __typename?: 'Mutation',\n  addressLinkConfirm?: Maybe<ChangeResponse>,\n  addressLinkStart?: Maybe<AddressLinkType>,\n  addressLogin?: Maybe<LoginResponse>,\n  addressLoginStart?: Maybe<AddressLoginType>,\n  addressUnlink?: Maybe<ChangeResponse>,\n  changeEmail?: Maybe<ChangeResponse>,\n  changeName?: Maybe<ChangeResponse>,\n  changeNotificationPreference?: Maybe<ChangeResponse>,\n  changePassword?: Maybe<Message>,\n  changeUsername?: Maybe<ChangeResponse>,\n  login?: Maybe<LoginResponse>,\n  logout?: Maybe<Message>,\n  postSubscribe?: Maybe<Message>,\n  postUnsubscribe?: Maybe<Message>,\n  reportContent?: Maybe<Message>,\n  requestResetPassword?: Maybe<Message>,\n  resendVerifyEmailToken?: Maybe<Message>,\n  resetPassword?: Maybe<Message>,\n  signup?: Maybe<LoginResponse>,\n  undoEmailChange?: Maybe<UndoEmailChangeResponse>,\n  verifyEmail?: Maybe<ChangeResponse>,\n};\n\n\nexport type MutationAddressLinkConfirmArgs = {\n  address_id: Scalars['Int'],\n  signature: Scalars['String']\n};\n\n\nexport type MutationAddressLinkStartArgs = {\n  address: Scalars['String'],\n  network: Scalars['String']\n};\n\n\nexport type MutationAddressLoginArgs = {\n  address: Scalars['String'],\n  signature: Scalars['String']\n};\n\n\nexport type MutationAddressLoginStartArgs = {\n  address: Scalars['String']\n};\n\n\nexport type MutationAddressUnlinkArgs = {\n  address: Scalars['String']\n};\n\n\nexport type MutationChangeEmailArgs = {\n  email: Scalars['String']\n};\n\n\nexport type MutationChangeNameArgs = {\n  newName: Scalars['String']\n};\n\n\nexport type MutationChangeNotificationPreferenceArgs = {\n  notificationPreferences?: Maybe<NotificationPreferencesInput>\n};\n\n\nexport type MutationChangePasswordArgs = {\n  newPassword: Scalars['String'],\n  oldPassword: Scalars['String']\n};\n\n\nexport type MutationChangeUsernameArgs = {\n  username: Scalars['String']\n};\n\n\nexport type MutationLoginArgs = {\n  password: Scalars['String'],\n  username: Scalars['String']\n};\n\n\nexport type MutationPostSubscribeArgs = {\n  post_id: Scalars['Int']\n};\n\n\nexport type MutationPostUnsubscribeArgs = {\n  post_id: Scalars['Int']\n};\n\n\nexport type MutationReportContentArgs = {\n  comments?: Maybe<Scalars['String']>,\n  content_id: Scalars['String'],\n  network: Scalars['String'],\n  reason: Scalars['String'],\n  type: Scalars['String']\n};\n\n\nexport type MutationRequestResetPasswordArgs = {\n  email: Scalars['String']\n};\n\n\nexport type MutationResetPasswordArgs = {\n  newPassword: Scalars['String'],\n  token: Scalars['String']\n};\n\n\nexport type MutationSignupArgs = {\n  email?: Maybe<Scalars['String']>,\n  name?: Maybe<Scalars['String']>,\n  password: Scalars['String'],\n  username: Scalars['String']\n};\n\n\nexport type MutationUndoEmailChangeArgs = {\n  token: Scalars['String']\n};\n\n\nexport type MutationVerifyEmailArgs = {\n  token: Scalars['String']\n};\n\nexport type Mutation_Root = {\n   __typename?: 'mutation_root',\n  addressLinkConfirm?: Maybe<ChangeResponse>,\n  addressLinkStart?: Maybe<AddressLinkType>,\n  addressLogin?: Maybe<LoginResponse>,\n  addressLoginStart?: Maybe<AddressLoginType>,\n  addressUnlink?: Maybe<ChangeResponse>,\n  changeEmail?: Maybe<ChangeResponse>,\n  changeName?: Maybe<ChangeResponse>,\n  changeNotificationPreference?: Maybe<ChangeResponse>,\n  changePassword?: Maybe<Message>,\n  changeUsername?: Maybe<ChangeResponse>,\n  createBlockIndex: BlockIndex,\n  createBlockNumber: BlockNumber,\n  createCouncil: Council,\n  createCouncilMember: CouncilMember,\n  createEra: Era,\n  createHeartBeat: HeartBeat,\n  createMotion: Motion,\n  createMotionProposalArgument: MotionProposalArgument,\n  createMotionStatus: MotionStatus,\n  createNomination: Nomination,\n  createOfflineValidator: OfflineValidator,\n  createPreimage: Preimage,\n  createPreimageArgument: PreimageArgument,\n  createPreimageStatus: PreimageStatus,\n  createProposal: Proposal,\n  createProposalStatus: ProposalStatus,\n  createReferendum: Referendum,\n  createReferendumStatus: ReferendumStatus,\n  createReward: Reward,\n  createSession: Session,\n  createSlashing: Slashing,\n  createStake: Stake,\n  createTotalIssuance: TotalIssuance,\n  createTreasurySpendProposal: TreasurySpendProposal,\n  createTreasuryStatus: TreasuryStatus,\n  createValidator: Validator,\n  deleteBlockIndex?: Maybe<BlockIndex>,\n  deleteBlockNumber?: Maybe<BlockNumber>,\n  deleteCouncil?: Maybe<Council>,\n  deleteCouncilMember?: Maybe<CouncilMember>,\n  deleteEra?: Maybe<Era>,\n  deleteHeartBeat?: Maybe<HeartBeat>,\n  deleteManyBlockIndexes: BatchPayload,\n  deleteManyBlockNumbers: BatchPayload,\n  deleteManyCouncilMembers: BatchPayload,\n  deleteManyCouncils: BatchPayload,\n  deleteManyEras: BatchPayload,\n  deleteManyHeartBeats: BatchPayload,\n  deleteManyMotionProposalArguments: BatchPayload,\n  deleteManyMotionStatuses: BatchPayload,\n  deleteManyMotions: BatchPayload,\n  deleteManyNominations: BatchPayload,\n  deleteManyOfflineValidators: BatchPayload,\n  deleteManyPreimageArguments: BatchPayload,\n  deleteManyPreimageStatuses: BatchPayload,\n  deleteManyPreimages: BatchPayload,\n  deleteManyProposalStatuses: BatchPayload,\n  deleteManyProposals: BatchPayload,\n  deleteManyReferendumStatuses: BatchPayload,\n  deleteManyReferendums: BatchPayload,\n  deleteManyRewards: BatchPayload,\n  deleteManySessions: BatchPayload,\n  deleteManySlashings: BatchPayload,\n  deleteManyStakes: BatchPayload,\n  deleteManyTotalIssuances: BatchPayload,\n  deleteManyTreasurySpendProposals: BatchPayload,\n  deleteManyTreasuryStatuses: BatchPayload,\n  deleteManyValidators: BatchPayload,\n  deleteMotion?: Maybe<Motion>,\n  deleteMotionProposalArgument?: Maybe<MotionProposalArgument>,\n  deleteMotionStatus?: Maybe<MotionStatus>,\n  deleteNomination?: Maybe<Nomination>,\n  deleteOfflineValidator?: Maybe<OfflineValidator>,\n  deletePreimage?: Maybe<Preimage>,\n  deletePreimageArgument?: Maybe<PreimageArgument>,\n  deletePreimageStatus?: Maybe<PreimageStatus>,\n  deleteProposal?: Maybe<Proposal>,\n  deleteProposalStatus?: Maybe<ProposalStatus>,\n  deleteReferendum?: Maybe<Referendum>,\n  deleteReferendumStatus?: Maybe<ReferendumStatus>,\n  deleteReward?: Maybe<Reward>,\n  deleteSession?: Maybe<Session>,\n  deleteSlashing?: Maybe<Slashing>,\n  deleteStake?: Maybe<Stake>,\n  deleteTotalIssuance?: Maybe<TotalIssuance>,\n  deleteTreasurySpendProposal?: Maybe<TreasurySpendProposal>,\n  deleteTreasuryStatus?: Maybe<TreasuryStatus>,\n  deleteValidator?: Maybe<Validator>,\n  delete_comment_reactions?: Maybe<Comment_Reactions_Mutation_Response>,\n  delete_comments?: Maybe<Comments_Mutation_Response>,\n  delete_onchain_links?: Maybe<Onchain_Links_Mutation_Response>,\n  delete_post_reactions?: Maybe<Post_Reactions_Mutation_Response>,\n  delete_post_topics?: Maybe<Post_Topics_Mutation_Response>,\n  delete_post_types?: Maybe<Post_Types_Mutation_Response>,\n  delete_posts?: Maybe<Posts_Mutation_Response>,\n  executeRaw: Scalars['Json'],\n  insert_comment_reactions?: Maybe<Comment_Reactions_Mutation_Response>,\n  insert_comments?: Maybe<Comments_Mutation_Response>,\n  insert_onchain_links?: Maybe<Onchain_Links_Mutation_Response>,\n  insert_post_reactions?: Maybe<Post_Reactions_Mutation_Response>,\n  insert_post_topics?: Maybe<Post_Topics_Mutation_Response>,\n  insert_post_types?: Maybe<Post_Types_Mutation_Response>,\n  insert_posts?: Maybe<Posts_Mutation_Response>,\n  login?: Maybe<LoginResponse>,\n  logout?: Maybe<Message>,\n  postSubscribe?: Maybe<Message>,\n  postUnsubscribe?: Maybe<Message>,\n  reportContent?: Maybe<Message>,\n  requestResetPassword?: Maybe<Message>,\n  resendVerifyEmailToken?: Maybe<Message>,\n  resetPassword?: Maybe<Message>,\n  signup?: Maybe<LoginResponse>,\n  undoEmailChange?: Maybe<UndoEmailChangeResponse>,\n  updateBlockIndex?: Maybe<BlockIndex>,\n  updateBlockNumber?: Maybe<BlockNumber>,\n  updateCouncil?: Maybe<Council>,\n  updateCouncilMember?: Maybe<CouncilMember>,\n  updateEra?: Maybe<Era>,\n  updateHeartBeat?: Maybe<HeartBeat>,\n  updateManyBlockIndexes: BatchPayload,\n  updateManyBlockNumbers: BatchPayload,\n  updateManyCouncilMembers: BatchPayload,\n  updateManyEras: BatchPayload,\n  updateManyHeartBeats: BatchPayload,\n  updateManyMotionProposalArguments: BatchPayload,\n  updateManyMotionStatuses: BatchPayload,\n  updateManyMotions: BatchPayload,\n  updateManyNominations: BatchPayload,\n  updateManyOfflineValidators: BatchPayload,\n  updateManyPreimageArguments: BatchPayload,\n  updateManyPreimageStatuses: BatchPayload,\n  updateManyPreimages: BatchPayload,\n  updateManyProposalStatuses: BatchPayload,\n  updateManyProposals: BatchPayload,\n  updateManyReferendumStatuses: BatchPayload,\n  updateManyReferendums: BatchPayload,\n  updateManyRewards: BatchPayload,\n  updateManySessions: BatchPayload,\n  updateManySlashings: BatchPayload,\n  updateManyStakes: BatchPayload,\n  updateManyTotalIssuances: BatchPayload,\n  updateManyTreasurySpendProposals: BatchPayload,\n  updateManyTreasuryStatuses: BatchPayload,\n  updateManyValidators: BatchPayload,\n  updateMotion?: Maybe<Motion>,\n  updateMotionProposalArgument?: Maybe<MotionProposalArgument>,\n  updateMotionStatus?: Maybe<MotionStatus>,\n  updateNomination?: Maybe<Nomination>,\n  updateOfflineValidator?: Maybe<OfflineValidator>,\n  updatePreimage?: Maybe<Preimage>,\n  updatePreimageArgument?: Maybe<PreimageArgument>,\n  updatePreimageStatus?: Maybe<PreimageStatus>,\n  updateProposal?: Maybe<Proposal>,\n  updateProposalStatus?: Maybe<ProposalStatus>,\n  updateReferendum?: Maybe<Referendum>,\n  updateReferendumStatus?: Maybe<ReferendumStatus>,\n  updateReward?: Maybe<Reward>,\n  updateSession?: Maybe<Session>,\n  updateSlashing?: Maybe<Slashing>,\n  updateStake?: Maybe<Stake>,\n  updateTotalIssuance?: Maybe<TotalIssuance>,\n  updateTreasurySpendProposal?: Maybe<TreasurySpendProposal>,\n  updateTreasuryStatus?: Maybe<TreasuryStatus>,\n  updateValidator?: Maybe<Validator>,\n  update_comment_reactions?: Maybe<Comment_Reactions_Mutation_Response>,\n  update_comments?: Maybe<Comments_Mutation_Response>,\n  update_onchain_links?: Maybe<Onchain_Links_Mutation_Response>,\n  update_post_reactions?: Maybe<Post_Reactions_Mutation_Response>,\n  update_post_topics?: Maybe<Post_Topics_Mutation_Response>,\n  update_post_types?: Maybe<Post_Types_Mutation_Response>,\n  update_posts?: Maybe<Posts_Mutation_Response>,\n  upsertBlockIndex: BlockIndex,\n  upsertBlockNumber: BlockNumber,\n  upsertCouncil: Council,\n  upsertCouncilMember: CouncilMember,\n  upsertEra: Era,\n  upsertHeartBeat: HeartBeat,\n  upsertMotion: Motion,\n  upsertMotionProposalArgument: MotionProposalArgument,\n  upsertMotionStatus: MotionStatus,\n  upsertNomination: Nomination,\n  upsertOfflineValidator: OfflineValidator,\n  upsertPreimage: Preimage,\n  upsertPreimageArgument: PreimageArgument,\n  upsertPreimageStatus: PreimageStatus,\n  upsertProposal: Proposal,\n  upsertProposalStatus: ProposalStatus,\n  upsertReferendum: Referendum,\n  upsertReferendumStatus: ReferendumStatus,\n  upsertReward: Reward,\n  upsertSession: Session,\n  upsertSlashing: Slashing,\n  upsertStake: Stake,\n  upsertTotalIssuance: TotalIssuance,\n  upsertTreasurySpendProposal: TreasurySpendProposal,\n  upsertTreasuryStatus: TreasuryStatus,\n  upsertValidator: Validator,\n  verifyEmail?: Maybe<ChangeResponse>,\n};\n\n\nexport type Mutation_RootAddressLinkConfirmArgs = {\n  address_id: Scalars['Int'],\n  signature: Scalars['String']\n};\n\n\nexport type Mutation_RootAddressLinkStartArgs = {\n  address: Scalars['String'],\n  network: Scalars['String']\n};\n\n\nexport type Mutation_RootAddressLoginArgs = {\n  address: Scalars['String'],\n  signature: Scalars['String']\n};\n\n\nexport type Mutation_RootAddressLoginStartArgs = {\n  address: Scalars['String']\n};\n\n\nexport type Mutation_RootAddressUnlinkArgs = {\n  address: Scalars['String']\n};\n\n\nexport type Mutation_RootChangeEmailArgs = {\n  email: Scalars['String']\n};\n\n\nexport type Mutation_RootChangeNameArgs = {\n  newName: Scalars['String']\n};\n\n\nexport type Mutation_RootChangeNotificationPreferenceArgs = {\n  notificationPreferences?: Maybe<NotificationPreferencesInput>\n};\n\n\nexport type Mutation_RootChangePasswordArgs = {\n  newPassword: Scalars['String'],\n  oldPassword: Scalars['String']\n};\n\n\nexport type Mutation_RootChangeUsernameArgs = {\n  username: Scalars['String']\n};\n\n\nexport type Mutation_RootCreateBlockIndexArgs = {\n  data: BlockIndexCreateInput\n};\n\n\nexport type Mutation_RootCreateBlockNumberArgs = {\n  data: BlockNumberCreateInput\n};\n\n\nexport type Mutation_RootCreateCouncilArgs = {\n  data: CouncilCreateInput\n};\n\n\nexport type Mutation_RootCreateCouncilMemberArgs = {\n  data: CouncilMemberCreateInput\n};\n\n\nexport type Mutation_RootCreateEraArgs = {\n  data: EraCreateInput\n};\n\n\nexport type Mutation_RootCreateHeartBeatArgs = {\n  data: HeartBeatCreateInput\n};\n\n\nexport type Mutation_RootCreateMotionArgs = {\n  data: MotionCreateInput\n};\n\n\nexport type Mutation_RootCreateMotionProposalArgumentArgs = {\n  data: MotionProposalArgumentCreateInput\n};\n\n\nexport type Mutation_RootCreateMotionStatusArgs = {\n  data: MotionStatusCreateInput\n};\n\n\nexport type Mutation_RootCreateNominationArgs = {\n  data: NominationCreateInput\n};\n\n\nexport type Mutation_RootCreateOfflineValidatorArgs = {\n  data: OfflineValidatorCreateInput\n};\n\n\nexport type Mutation_RootCreatePreimageArgs = {\n  data: PreimageCreateInput\n};\n\n\nexport type Mutation_RootCreatePreimageArgumentArgs = {\n  data: PreimageArgumentCreateInput\n};\n\n\nexport type Mutation_RootCreatePreimageStatusArgs = {\n  data: PreimageStatusCreateInput\n};\n\n\nexport type Mutation_RootCreateProposalArgs = {\n  data: ProposalCreateInput\n};\n\n\nexport type Mutation_RootCreateProposalStatusArgs = {\n  data: ProposalStatusCreateInput\n};\n\n\nexport type Mutation_RootCreateReferendumArgs = {\n  data: ReferendumCreateInput\n};\n\n\nexport type Mutation_RootCreateReferendumStatusArgs = {\n  data: ReferendumStatusCreateInput\n};\n\n\nexport type Mutation_RootCreateRewardArgs = {\n  data: RewardCreateInput\n};\n\n\nexport type Mutation_RootCreateSessionArgs = {\n  data: SessionCreateInput\n};\n\n\nexport type Mutation_RootCreateSlashingArgs = {\n  data: SlashingCreateInput\n};\n\n\nexport type Mutation_RootCreateStakeArgs = {\n  data: StakeCreateInput\n};\n\n\nexport type Mutation_RootCreateTotalIssuanceArgs = {\n  data: TotalIssuanceCreateInput\n};\n\n\nexport type Mutation_RootCreateTreasurySpendProposalArgs = {\n  data: TreasurySpendProposalCreateInput\n};\n\n\nexport type Mutation_RootCreateTreasuryStatusArgs = {\n  data: TreasuryStatusCreateInput\n};\n\n\nexport type Mutation_RootCreateValidatorArgs = {\n  data: ValidatorCreateInput\n};\n\n\nexport type Mutation_RootDeleteBlockIndexArgs = {\n  where: BlockIndexWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteBlockNumberArgs = {\n  where: BlockNumberWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteCouncilArgs = {\n  where: CouncilWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteCouncilMemberArgs = {\n  where: CouncilMemberWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteEraArgs = {\n  where: EraWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteHeartBeatArgs = {\n  where: HeartBeatWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteManyBlockIndexesArgs = {\n  where?: Maybe<BlockIndexWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyBlockNumbersArgs = {\n  where?: Maybe<BlockNumberWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyCouncilMembersArgs = {\n  where?: Maybe<CouncilMemberWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyCouncilsArgs = {\n  where?: Maybe<CouncilWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyErasArgs = {\n  where?: Maybe<EraWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyHeartBeatsArgs = {\n  where?: Maybe<HeartBeatWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyMotionProposalArgumentsArgs = {\n  where?: Maybe<MotionProposalArgumentWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyMotionStatusesArgs = {\n  where?: Maybe<MotionStatusWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyMotionsArgs = {\n  where?: Maybe<MotionWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyNominationsArgs = {\n  where?: Maybe<NominationWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyOfflineValidatorsArgs = {\n  where?: Maybe<OfflineValidatorWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyPreimageArgumentsArgs = {\n  where?: Maybe<PreimageArgumentWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyPreimageStatusesArgs = {\n  where?: Maybe<PreimageStatusWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyPreimagesArgs = {\n  where?: Maybe<PreimageWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyProposalStatusesArgs = {\n  where?: Maybe<ProposalStatusWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyProposalsArgs = {\n  where?: Maybe<ProposalWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyReferendumStatusesArgs = {\n  where?: Maybe<ReferendumStatusWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyReferendumsArgs = {\n  where?: Maybe<ReferendumWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyRewardsArgs = {\n  where?: Maybe<RewardWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManySessionsArgs = {\n  where?: Maybe<SessionWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManySlashingsArgs = {\n  where?: Maybe<SlashingWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyStakesArgs = {\n  where?: Maybe<StakeWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyTotalIssuancesArgs = {\n  where?: Maybe<TotalIssuanceWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyTreasurySpendProposalsArgs = {\n  where?: Maybe<TreasurySpendProposalWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyTreasuryStatusesArgs = {\n  where?: Maybe<TreasuryStatusWhereInput>\n};\n\n\nexport type Mutation_RootDeleteManyValidatorsArgs = {\n  where?: Maybe<ValidatorWhereInput>\n};\n\n\nexport type Mutation_RootDeleteMotionArgs = {\n  where: MotionWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteMotionProposalArgumentArgs = {\n  where: MotionProposalArgumentWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteMotionStatusArgs = {\n  where: MotionStatusWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteNominationArgs = {\n  where: NominationWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteOfflineValidatorArgs = {\n  where: OfflineValidatorWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeletePreimageArgs = {\n  where: PreimageWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeletePreimageArgumentArgs = {\n  where: PreimageArgumentWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeletePreimageStatusArgs = {\n  where: PreimageStatusWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteProposalArgs = {\n  where: ProposalWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteProposalStatusArgs = {\n  where: ProposalStatusWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteReferendumArgs = {\n  where: ReferendumWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteReferendumStatusArgs = {\n  where: ReferendumStatusWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteRewardArgs = {\n  where: RewardWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteSessionArgs = {\n  where: SessionWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteSlashingArgs = {\n  where: SlashingWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteStakeArgs = {\n  where: StakeWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteTotalIssuanceArgs = {\n  where: TotalIssuanceWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteTreasurySpendProposalArgs = {\n  where: TreasurySpendProposalWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteTreasuryStatusArgs = {\n  where: TreasuryStatusWhereUniqueInput\n};\n\n\nexport type Mutation_RootDeleteValidatorArgs = {\n  where: ValidatorWhereUniqueInput\n};\n\n\nexport type Mutation_RootDelete_Comment_ReactionsArgs = {\n  where: Comment_Reactions_Bool_Exp\n};\n\n\nexport type Mutation_RootDelete_CommentsArgs = {\n  where: Comments_Bool_Exp\n};\n\n\nexport type Mutation_RootDelete_Onchain_LinksArgs = {\n  where: Onchain_Links_Bool_Exp\n};\n\n\nexport type Mutation_RootDelete_Post_ReactionsArgs = {\n  where: Post_Reactions_Bool_Exp\n};\n\n\nexport type Mutation_RootDelete_Post_TopicsArgs = {\n  where: Post_Topics_Bool_Exp\n};\n\n\nexport type Mutation_RootDelete_Post_TypesArgs = {\n  where: Post_Types_Bool_Exp\n};\n\n\nexport type Mutation_RootDelete_PostsArgs = {\n  where: Posts_Bool_Exp\n};\n\n\nexport type Mutation_RootExecuteRawArgs = {\n  database?: Maybe<PrismaDatabase>,\n  query: Scalars['String']\n};\n\n\nexport type Mutation_RootInsert_Comment_ReactionsArgs = {\n  objects: Array<Comment_Reactions_Insert_Input>,\n  on_conflict?: Maybe<Comment_Reactions_On_Conflict>\n};\n\n\nexport type Mutation_RootInsert_CommentsArgs = {\n  objects: Array<Comments_Insert_Input>,\n  on_conflict?: Maybe<Comments_On_Conflict>\n};\n\n\nexport type Mutation_RootInsert_Onchain_LinksArgs = {\n  objects: Array<Onchain_Links_Insert_Input>,\n  on_conflict?: Maybe<Onchain_Links_On_Conflict>\n};\n\n\nexport type Mutation_RootInsert_Post_ReactionsArgs = {\n  objects: Array<Post_Reactions_Insert_Input>,\n  on_conflict?: Maybe<Post_Reactions_On_Conflict>\n};\n\n\nexport type Mutation_RootInsert_Post_TopicsArgs = {\n  objects: Array<Post_Topics_Insert_Input>,\n  on_conflict?: Maybe<Post_Topics_On_Conflict>\n};\n\n\nexport type Mutation_RootInsert_Post_TypesArgs = {\n  objects: Array<Post_Types_Insert_Input>,\n  on_conflict?: Maybe<Post_Types_On_Conflict>\n};\n\n\nexport type Mutation_RootInsert_PostsArgs = {\n  objects: Array<Posts_Insert_Input>,\n  on_conflict?: Maybe<Posts_On_Conflict>\n};\n\n\nexport type Mutation_RootLoginArgs = {\n  password: Scalars['String'],\n  username: Scalars['String']\n};\n\n\nexport type Mutation_RootPostSubscribeArgs = {\n  post_id: Scalars['Int']\n};\n\n\nexport type Mutation_RootPostUnsubscribeArgs = {\n  post_id: Scalars['Int']\n};\n\n\nexport type Mutation_RootReportContentArgs = {\n  comments?: Maybe<Scalars['String']>,\n  content_id: Scalars['String'],\n  network: Scalars['String'],\n  reason: Scalars['String'],\n  type: Scalars['String']\n};\n\n\nexport type Mutation_RootRequestResetPasswordArgs = {\n  email: Scalars['String']\n};\n\n\nexport type Mutation_RootResetPasswordArgs = {\n  newPassword: Scalars['String'],\n  token: Scalars['String']\n};\n\n\nexport type Mutation_RootSignupArgs = {\n  email?: Maybe<Scalars['String']>,\n  name?: Maybe<Scalars['String']>,\n  password: Scalars['String'],\n  username: Scalars['String']\n};\n\n\nexport type Mutation_RootUndoEmailChangeArgs = {\n  token: Scalars['String']\n};\n\n\nexport type Mutation_RootUpdateBlockIndexArgs = {\n  data: BlockIndexUpdateInput,\n  where: BlockIndexWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateBlockNumberArgs = {\n  data: BlockNumberUpdateInput,\n  where: BlockNumberWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateCouncilArgs = {\n  data: CouncilUpdateInput,\n  where: CouncilWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateCouncilMemberArgs = {\n  data: CouncilMemberUpdateInput,\n  where: CouncilMemberWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateEraArgs = {\n  data: EraUpdateInput,\n  where: EraWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateHeartBeatArgs = {\n  data: HeartBeatUpdateInput,\n  where: HeartBeatWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateManyBlockIndexesArgs = {\n  data: BlockIndexUpdateManyMutationInput,\n  where?: Maybe<BlockIndexWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyBlockNumbersArgs = {\n  data: BlockNumberUpdateManyMutationInput,\n  where?: Maybe<BlockNumberWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyCouncilMembersArgs = {\n  data: CouncilMemberUpdateManyMutationInput,\n  where?: Maybe<CouncilMemberWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyErasArgs = {\n  data: EraUpdateManyMutationInput,\n  where?: Maybe<EraWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyHeartBeatsArgs = {\n  data: HeartBeatUpdateManyMutationInput,\n  where?: Maybe<HeartBeatWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyMotionProposalArgumentsArgs = {\n  data: MotionProposalArgumentUpdateManyMutationInput,\n  where?: Maybe<MotionProposalArgumentWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyMotionStatusesArgs = {\n  data: MotionStatusUpdateManyMutationInput,\n  where?: Maybe<MotionStatusWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyMotionsArgs = {\n  data: MotionUpdateManyMutationInput,\n  where?: Maybe<MotionWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyNominationsArgs = {\n  data: NominationUpdateManyMutationInput,\n  where?: Maybe<NominationWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyOfflineValidatorsArgs = {\n  data: OfflineValidatorUpdateManyMutationInput,\n  where?: Maybe<OfflineValidatorWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyPreimageArgumentsArgs = {\n  data: PreimageArgumentUpdateManyMutationInput,\n  where?: Maybe<PreimageArgumentWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyPreimageStatusesArgs = {\n  data: PreimageStatusUpdateManyMutationInput,\n  where?: Maybe<PreimageStatusWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyPreimagesArgs = {\n  data: PreimageUpdateManyMutationInput,\n  where?: Maybe<PreimageWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyProposalStatusesArgs = {\n  data: ProposalStatusUpdateManyMutationInput,\n  where?: Maybe<ProposalStatusWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyProposalsArgs = {\n  data: ProposalUpdateManyMutationInput,\n  where?: Maybe<ProposalWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyReferendumStatusesArgs = {\n  data: ReferendumStatusUpdateManyMutationInput,\n  where?: Maybe<ReferendumStatusWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyReferendumsArgs = {\n  data: ReferendumUpdateManyMutationInput,\n  where?: Maybe<ReferendumWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyRewardsArgs = {\n  data: RewardUpdateManyMutationInput,\n  where?: Maybe<RewardWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManySessionsArgs = {\n  data: SessionUpdateManyMutationInput,\n  where?: Maybe<SessionWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManySlashingsArgs = {\n  data: SlashingUpdateManyMutationInput,\n  where?: Maybe<SlashingWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyStakesArgs = {\n  data: StakeUpdateManyMutationInput,\n  where?: Maybe<StakeWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyTotalIssuancesArgs = {\n  data: TotalIssuanceUpdateManyMutationInput,\n  where?: Maybe<TotalIssuanceWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyTreasurySpendProposalsArgs = {\n  data: TreasurySpendProposalUpdateManyMutationInput,\n  where?: Maybe<TreasurySpendProposalWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyTreasuryStatusesArgs = {\n  data: TreasuryStatusUpdateManyMutationInput,\n  where?: Maybe<TreasuryStatusWhereInput>\n};\n\n\nexport type Mutation_RootUpdateManyValidatorsArgs = {\n  data: ValidatorUpdateManyMutationInput,\n  where?: Maybe<ValidatorWhereInput>\n};\n\n\nexport type Mutation_RootUpdateMotionArgs = {\n  data: MotionUpdateInput,\n  where: MotionWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateMotionProposalArgumentArgs = {\n  data: MotionProposalArgumentUpdateInput,\n  where: MotionProposalArgumentWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateMotionStatusArgs = {\n  data: MotionStatusUpdateInput,\n  where: MotionStatusWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateNominationArgs = {\n  data: NominationUpdateInput,\n  where: NominationWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateOfflineValidatorArgs = {\n  data: OfflineValidatorUpdateInput,\n  where: OfflineValidatorWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdatePreimageArgs = {\n  data: PreimageUpdateInput,\n  where: PreimageWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdatePreimageArgumentArgs = {\n  data: PreimageArgumentUpdateInput,\n  where: PreimageArgumentWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdatePreimageStatusArgs = {\n  data: PreimageStatusUpdateInput,\n  where: PreimageStatusWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateProposalArgs = {\n  data: ProposalUpdateInput,\n  where: ProposalWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateProposalStatusArgs = {\n  data: ProposalStatusUpdateInput,\n  where: ProposalStatusWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateReferendumArgs = {\n  data: ReferendumUpdateInput,\n  where: ReferendumWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateReferendumStatusArgs = {\n  data: ReferendumStatusUpdateInput,\n  where: ReferendumStatusWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateRewardArgs = {\n  data: RewardUpdateInput,\n  where: RewardWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateSessionArgs = {\n  data: SessionUpdateInput,\n  where: SessionWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateSlashingArgs = {\n  data: SlashingUpdateInput,\n  where: SlashingWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateStakeArgs = {\n  data: StakeUpdateInput,\n  where: StakeWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateTotalIssuanceArgs = {\n  data: TotalIssuanceUpdateInput,\n  where: TotalIssuanceWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateTreasurySpendProposalArgs = {\n  data: TreasurySpendProposalUpdateInput,\n  where: TreasurySpendProposalWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateTreasuryStatusArgs = {\n  data: TreasuryStatusUpdateInput,\n  where: TreasuryStatusWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdateValidatorArgs = {\n  data: ValidatorUpdateInput,\n  where: ValidatorWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpdate_Comment_ReactionsArgs = {\n  _inc?: Maybe<Comment_Reactions_Inc_Input>,\n  _set?: Maybe<Comment_Reactions_Set_Input>,\n  where: Comment_Reactions_Bool_Exp\n};\n\n\nexport type Mutation_RootUpdate_CommentsArgs = {\n  _inc?: Maybe<Comments_Inc_Input>,\n  _set?: Maybe<Comments_Set_Input>,\n  where: Comments_Bool_Exp\n};\n\n\nexport type Mutation_RootUpdate_Onchain_LinksArgs = {\n  _inc?: Maybe<Onchain_Links_Inc_Input>,\n  _set?: Maybe<Onchain_Links_Set_Input>,\n  where: Onchain_Links_Bool_Exp\n};\n\n\nexport type Mutation_RootUpdate_Post_ReactionsArgs = {\n  _inc?: Maybe<Post_Reactions_Inc_Input>,\n  _set?: Maybe<Post_Reactions_Set_Input>,\n  where: Post_Reactions_Bool_Exp\n};\n\n\nexport type Mutation_RootUpdate_Post_TopicsArgs = {\n  _inc?: Maybe<Post_Topics_Inc_Input>,\n  _set?: Maybe<Post_Topics_Set_Input>,\n  where: Post_Topics_Bool_Exp\n};\n\n\nexport type Mutation_RootUpdate_Post_TypesArgs = {\n  _inc?: Maybe<Post_Types_Inc_Input>,\n  _set?: Maybe<Post_Types_Set_Input>,\n  where: Post_Types_Bool_Exp\n};\n\n\nexport type Mutation_RootUpdate_PostsArgs = {\n  _inc?: Maybe<Posts_Inc_Input>,\n  _set?: Maybe<Posts_Set_Input>,\n  where: Posts_Bool_Exp\n};\n\n\nexport type Mutation_RootUpsertBlockIndexArgs = {\n  create: BlockIndexCreateInput,\n  update: BlockIndexUpdateInput,\n  where: BlockIndexWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertBlockNumberArgs = {\n  create: BlockNumberCreateInput,\n  update: BlockNumberUpdateInput,\n  where: BlockNumberWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertCouncilArgs = {\n  create: CouncilCreateInput,\n  update: CouncilUpdateInput,\n  where: CouncilWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertCouncilMemberArgs = {\n  create: CouncilMemberCreateInput,\n  update: CouncilMemberUpdateInput,\n  where: CouncilMemberWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertEraArgs = {\n  create: EraCreateInput,\n  update: EraUpdateInput,\n  where: EraWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertHeartBeatArgs = {\n  create: HeartBeatCreateInput,\n  update: HeartBeatUpdateInput,\n  where: HeartBeatWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertMotionArgs = {\n  create: MotionCreateInput,\n  update: MotionUpdateInput,\n  where: MotionWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertMotionProposalArgumentArgs = {\n  create: MotionProposalArgumentCreateInput,\n  update: MotionProposalArgumentUpdateInput,\n  where: MotionProposalArgumentWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertMotionStatusArgs = {\n  create: MotionStatusCreateInput,\n  update: MotionStatusUpdateInput,\n  where: MotionStatusWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertNominationArgs = {\n  create: NominationCreateInput,\n  update: NominationUpdateInput,\n  where: NominationWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertOfflineValidatorArgs = {\n  create: OfflineValidatorCreateInput,\n  update: OfflineValidatorUpdateInput,\n  where: OfflineValidatorWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertPreimageArgs = {\n  create: PreimageCreateInput,\n  update: PreimageUpdateInput,\n  where: PreimageWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertPreimageArgumentArgs = {\n  create: PreimageArgumentCreateInput,\n  update: PreimageArgumentUpdateInput,\n  where: PreimageArgumentWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertPreimageStatusArgs = {\n  create: PreimageStatusCreateInput,\n  update: PreimageStatusUpdateInput,\n  where: PreimageStatusWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertProposalArgs = {\n  create: ProposalCreateInput,\n  update: ProposalUpdateInput,\n  where: ProposalWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertProposalStatusArgs = {\n  create: ProposalStatusCreateInput,\n  update: ProposalStatusUpdateInput,\n  where: ProposalStatusWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertReferendumArgs = {\n  create: ReferendumCreateInput,\n  update: ReferendumUpdateInput,\n  where: ReferendumWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertReferendumStatusArgs = {\n  create: ReferendumStatusCreateInput,\n  update: ReferendumStatusUpdateInput,\n  where: ReferendumStatusWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertRewardArgs = {\n  create: RewardCreateInput,\n  update: RewardUpdateInput,\n  where: RewardWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertSessionArgs = {\n  create: SessionCreateInput,\n  update: SessionUpdateInput,\n  where: SessionWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertSlashingArgs = {\n  create: SlashingCreateInput,\n  update: SlashingUpdateInput,\n  where: SlashingWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertStakeArgs = {\n  create: StakeCreateInput,\n  update: StakeUpdateInput,\n  where: StakeWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertTotalIssuanceArgs = {\n  create: TotalIssuanceCreateInput,\n  update: TotalIssuanceUpdateInput,\n  where: TotalIssuanceWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertTreasurySpendProposalArgs = {\n  create: TreasurySpendProposalCreateInput,\n  update: TreasurySpendProposalUpdateInput,\n  where: TreasurySpendProposalWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertTreasuryStatusArgs = {\n  create: TreasuryStatusCreateInput,\n  update: TreasuryStatusUpdateInput,\n  where: TreasuryStatusWhereUniqueInput\n};\n\n\nexport type Mutation_RootUpsertValidatorArgs = {\n  create: ValidatorCreateInput,\n  update: ValidatorUpdateInput,\n  where: ValidatorWhereUniqueInput\n};\n\n\nexport type Mutation_RootVerifyEmailArgs = {\n  token: Scalars['String']\n};\n\nexport enum MutationType {\n  Created = 'CREATED',\n  Deleted = 'DELETED',\n  Updated = 'UPDATED'\n}\n\nexport type Node = {\n  id: Scalars['ID'],\n};\n\nexport type Nomination = Node & {\n   __typename?: 'Nomination',\n  id: Scalars['ID'],\n  nominatorController: Scalars['String'],\n  nominatorStash: Scalars['String'],\n  session: Session,\n  stakedAmount: Scalars['String'],\n  validatorController: Scalars['String'],\n  validatorStash: Scalars['String'],\n};\n\nexport type NominationConnection = {\n   __typename?: 'NominationConnection',\n  aggregate: AggregateNomination,\n  edges: Array<Maybe<NominationEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type NominationCreateInput = {\n  id?: Maybe<Scalars['ID']>,\n  nominatorController: Scalars['String'],\n  nominatorStash: Scalars['String'],\n  session: SessionCreateOneInput,\n  stakedAmount: Scalars['String'],\n  validatorController: Scalars['String'],\n  validatorStash: Scalars['String'],\n};\n\nexport type NominationEdge = {\n   __typename?: 'NominationEdge',\n  cursor: Scalars['String'],\n  node: Nomination,\n};\n\nexport enum NominationOrderByInput {\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  NominatorControllerAsc = 'nominatorController_ASC',\n  NominatorControllerDesc = 'nominatorController_DESC',\n  NominatorStashAsc = 'nominatorStash_ASC',\n  NominatorStashDesc = 'nominatorStash_DESC',\n  StakedAmountAsc = 'stakedAmount_ASC',\n  StakedAmountDesc = 'stakedAmount_DESC',\n  ValidatorControllerAsc = 'validatorController_ASC',\n  ValidatorControllerDesc = 'validatorController_DESC',\n  ValidatorStashAsc = 'validatorStash_ASC',\n  ValidatorStashDesc = 'validatorStash_DESC'\n}\n\nexport type NominationPreviousValues = {\n   __typename?: 'NominationPreviousValues',\n  id: Scalars['ID'],\n  nominatorController: Scalars['String'],\n  nominatorStash: Scalars['String'],\n  stakedAmount: Scalars['String'],\n  validatorController: Scalars['String'],\n  validatorStash: Scalars['String'],\n};\n\nexport type NominationSubscriptionPayload = {\n   __typename?: 'NominationSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<Nomination>,\n  previousValues?: Maybe<NominationPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type NominationSubscriptionWhereInput = {\n  AND?: Maybe<Array<NominationSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<NominationSubscriptionWhereInput>>,\n  OR?: Maybe<Array<NominationSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<NominationWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type NominationUpdateInput = {\n  nominatorController?: Maybe<Scalars['String']>,\n  nominatorStash?: Maybe<Scalars['String']>,\n  session?: Maybe<SessionUpdateOneRequiredInput>,\n  stakedAmount?: Maybe<Scalars['String']>,\n  validatorController?: Maybe<Scalars['String']>,\n  validatorStash?: Maybe<Scalars['String']>,\n};\n\nexport type NominationUpdateManyMutationInput = {\n  nominatorController?: Maybe<Scalars['String']>,\n  nominatorStash?: Maybe<Scalars['String']>,\n  stakedAmount?: Maybe<Scalars['String']>,\n  validatorController?: Maybe<Scalars['String']>,\n  validatorStash?: Maybe<Scalars['String']>,\n};\n\nexport type NominationWhereInput = {\n  AND?: Maybe<Array<NominationWhereInput>>,\n  NOT?: Maybe<Array<NominationWhereInput>>,\n  OR?: Maybe<Array<NominationWhereInput>>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  nominatorController?: Maybe<Scalars['String']>,\n  nominatorController_contains?: Maybe<Scalars['String']>,\n  nominatorController_ends_with?: Maybe<Scalars['String']>,\n  nominatorController_gt?: Maybe<Scalars['String']>,\n  nominatorController_gte?: Maybe<Scalars['String']>,\n  nominatorController_in?: Maybe<Array<Scalars['String']>>,\n  nominatorController_lt?: Maybe<Scalars['String']>,\n  nominatorController_lte?: Maybe<Scalars['String']>,\n  nominatorController_not?: Maybe<Scalars['String']>,\n  nominatorController_not_contains?: Maybe<Scalars['String']>,\n  nominatorController_not_ends_with?: Maybe<Scalars['String']>,\n  nominatorController_not_in?: Maybe<Array<Scalars['String']>>,\n  nominatorController_not_starts_with?: Maybe<Scalars['String']>,\n  nominatorController_starts_with?: Maybe<Scalars['String']>,\n  nominatorStash?: Maybe<Scalars['String']>,\n  nominatorStash_contains?: Maybe<Scalars['String']>,\n  nominatorStash_ends_with?: Maybe<Scalars['String']>,\n  nominatorStash_gt?: Maybe<Scalars['String']>,\n  nominatorStash_gte?: Maybe<Scalars['String']>,\n  nominatorStash_in?: Maybe<Array<Scalars['String']>>,\n  nominatorStash_lt?: Maybe<Scalars['String']>,\n  nominatorStash_lte?: Maybe<Scalars['String']>,\n  nominatorStash_not?: Maybe<Scalars['String']>,\n  nominatorStash_not_contains?: Maybe<Scalars['String']>,\n  nominatorStash_not_ends_with?: Maybe<Scalars['String']>,\n  nominatorStash_not_in?: Maybe<Array<Scalars['String']>>,\n  nominatorStash_not_starts_with?: Maybe<Scalars['String']>,\n  nominatorStash_starts_with?: Maybe<Scalars['String']>,\n  session?: Maybe<SessionWhereInput>,\n  stakedAmount?: Maybe<Scalars['String']>,\n  stakedAmount_contains?: Maybe<Scalars['String']>,\n  stakedAmount_ends_with?: Maybe<Scalars['String']>,\n  stakedAmount_gt?: Maybe<Scalars['String']>,\n  stakedAmount_gte?: Maybe<Scalars['String']>,\n  stakedAmount_in?: Maybe<Array<Scalars['String']>>,\n  stakedAmount_lt?: Maybe<Scalars['String']>,\n  stakedAmount_lte?: Maybe<Scalars['String']>,\n  stakedAmount_not?: Maybe<Scalars['String']>,\n  stakedAmount_not_contains?: Maybe<Scalars['String']>,\n  stakedAmount_not_ends_with?: Maybe<Scalars['String']>,\n  stakedAmount_not_in?: Maybe<Array<Scalars['String']>>,\n  stakedAmount_not_starts_with?: Maybe<Scalars['String']>,\n  stakedAmount_starts_with?: Maybe<Scalars['String']>,\n  validatorController?: Maybe<Scalars['String']>,\n  validatorController_contains?: Maybe<Scalars['String']>,\n  validatorController_ends_with?: Maybe<Scalars['String']>,\n  validatorController_gt?: Maybe<Scalars['String']>,\n  validatorController_gte?: Maybe<Scalars['String']>,\n  validatorController_in?: Maybe<Array<Scalars['String']>>,\n  validatorController_lt?: Maybe<Scalars['String']>,\n  validatorController_lte?: Maybe<Scalars['String']>,\n  validatorController_not?: Maybe<Scalars['String']>,\n  validatorController_not_contains?: Maybe<Scalars['String']>,\n  validatorController_not_ends_with?: Maybe<Scalars['String']>,\n  validatorController_not_in?: Maybe<Array<Scalars['String']>>,\n  validatorController_not_starts_with?: Maybe<Scalars['String']>,\n  validatorController_starts_with?: Maybe<Scalars['String']>,\n  validatorStash?: Maybe<Scalars['String']>,\n  validatorStash_contains?: Maybe<Scalars['String']>,\n  validatorStash_ends_with?: Maybe<Scalars['String']>,\n  validatorStash_gt?: Maybe<Scalars['String']>,\n  validatorStash_gte?: Maybe<Scalars['String']>,\n  validatorStash_in?: Maybe<Array<Scalars['String']>>,\n  validatorStash_lt?: Maybe<Scalars['String']>,\n  validatorStash_lte?: Maybe<Scalars['String']>,\n  validatorStash_not?: Maybe<Scalars['String']>,\n  validatorStash_not_contains?: Maybe<Scalars['String']>,\n  validatorStash_not_ends_with?: Maybe<Scalars['String']>,\n  validatorStash_not_in?: Maybe<Array<Scalars['String']>>,\n  validatorStash_not_starts_with?: Maybe<Scalars['String']>,\n  validatorStash_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type NominationWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type NotificationPreferences = {\n   __typename?: 'NotificationPreferences',\n  newProposal?: Maybe<Scalars['Boolean']>,\n  ownProposal?: Maybe<Scalars['Boolean']>,\n  postCreated?: Maybe<Scalars['Boolean']>,\n  postParticipated?: Maybe<Scalars['Boolean']>,\n};\n\nexport type NotificationPreferencesInput = {\n  newProposal?: Maybe<Scalars['Boolean']>,\n  ownProposal?: Maybe<Scalars['Boolean']>,\n  postCreated?: Maybe<Scalars['Boolean']>,\n  postParticipated?: Maybe<Scalars['Boolean']>,\n};\n\nexport type OfflineValidator = Node & {\n   __typename?: 'OfflineValidator',\n  id: Scalars['ID'],\n  others: Array<Scalars['Json']>,\n  own: Scalars['String'],\n  sessionIndex: Session,\n  total: Scalars['String'],\n  validatorId: Scalars['String'],\n};\n\nexport type OfflineValidatorConnection = {\n   __typename?: 'OfflineValidatorConnection',\n  aggregate: AggregateOfflineValidator,\n  edges: Array<Maybe<OfflineValidatorEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type OfflineValidatorCreateInput = {\n  id?: Maybe<Scalars['ID']>,\n  others?: Maybe<OfflineValidatorCreateothersInput>,\n  own: Scalars['String'],\n  sessionIndex: SessionCreateOneInput,\n  total: Scalars['String'],\n  validatorId: Scalars['String'],\n};\n\nexport type OfflineValidatorCreateothersInput = {\n  set?: Maybe<Array<Scalars['Json']>>,\n};\n\nexport type OfflineValidatorEdge = {\n   __typename?: 'OfflineValidatorEdge',\n  cursor: Scalars['String'],\n  node: OfflineValidator,\n};\n\nexport enum OfflineValidatorOrderByInput {\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  OwnAsc = 'own_ASC',\n  OwnDesc = 'own_DESC',\n  TotalAsc = 'total_ASC',\n  TotalDesc = 'total_DESC',\n  ValidatorIdAsc = 'validatorId_ASC',\n  ValidatorIdDesc = 'validatorId_DESC'\n}\n\nexport type OfflineValidatorPreviousValues = {\n   __typename?: 'OfflineValidatorPreviousValues',\n  id: Scalars['ID'],\n  others: Array<Scalars['Json']>,\n  own: Scalars['String'],\n  total: Scalars['String'],\n  validatorId: Scalars['String'],\n};\n\nexport type OfflineValidatorSubscriptionPayload = {\n   __typename?: 'OfflineValidatorSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<OfflineValidator>,\n  previousValues?: Maybe<OfflineValidatorPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type OfflineValidatorSubscriptionWhereInput = {\n  AND?: Maybe<Array<OfflineValidatorSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<OfflineValidatorSubscriptionWhereInput>>,\n  OR?: Maybe<Array<OfflineValidatorSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<OfflineValidatorWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type OfflineValidatorUpdateInput = {\n  others?: Maybe<OfflineValidatorUpdateothersInput>,\n  own?: Maybe<Scalars['String']>,\n  sessionIndex?: Maybe<SessionUpdateOneRequiredInput>,\n  total?: Maybe<Scalars['String']>,\n  validatorId?: Maybe<Scalars['String']>,\n};\n\nexport type OfflineValidatorUpdateManyMutationInput = {\n  others?: Maybe<OfflineValidatorUpdateothersInput>,\n  own?: Maybe<Scalars['String']>,\n  total?: Maybe<Scalars['String']>,\n  validatorId?: Maybe<Scalars['String']>,\n};\n\nexport type OfflineValidatorUpdateothersInput = {\n  set?: Maybe<Array<Scalars['Json']>>,\n};\n\nexport type OfflineValidatorWhereInput = {\n  AND?: Maybe<Array<OfflineValidatorWhereInput>>,\n  NOT?: Maybe<Array<OfflineValidatorWhereInput>>,\n  OR?: Maybe<Array<OfflineValidatorWhereInput>>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  own?: Maybe<Scalars['String']>,\n  own_contains?: Maybe<Scalars['String']>,\n  own_ends_with?: Maybe<Scalars['String']>,\n  own_gt?: Maybe<Scalars['String']>,\n  own_gte?: Maybe<Scalars['String']>,\n  own_in?: Maybe<Array<Scalars['String']>>,\n  own_lt?: Maybe<Scalars['String']>,\n  own_lte?: Maybe<Scalars['String']>,\n  own_not?: Maybe<Scalars['String']>,\n  own_not_contains?: Maybe<Scalars['String']>,\n  own_not_ends_with?: Maybe<Scalars['String']>,\n  own_not_in?: Maybe<Array<Scalars['String']>>,\n  own_not_starts_with?: Maybe<Scalars['String']>,\n  own_starts_with?: Maybe<Scalars['String']>,\n  sessionIndex?: Maybe<SessionWhereInput>,\n  total?: Maybe<Scalars['String']>,\n  total_contains?: Maybe<Scalars['String']>,\n  total_ends_with?: Maybe<Scalars['String']>,\n  total_gt?: Maybe<Scalars['String']>,\n  total_gte?: Maybe<Scalars['String']>,\n  total_in?: Maybe<Array<Scalars['String']>>,\n  total_lt?: Maybe<Scalars['String']>,\n  total_lte?: Maybe<Scalars['String']>,\n  total_not?: Maybe<Scalars['String']>,\n  total_not_contains?: Maybe<Scalars['String']>,\n  total_not_ends_with?: Maybe<Scalars['String']>,\n  total_not_in?: Maybe<Array<Scalars['String']>>,\n  total_not_starts_with?: Maybe<Scalars['String']>,\n  total_starts_with?: Maybe<Scalars['String']>,\n  validatorId?: Maybe<Scalars['String']>,\n  validatorId_contains?: Maybe<Scalars['String']>,\n  validatorId_ends_with?: Maybe<Scalars['String']>,\n  validatorId_gt?: Maybe<Scalars['String']>,\n  validatorId_gte?: Maybe<Scalars['String']>,\n  validatorId_in?: Maybe<Array<Scalars['String']>>,\n  validatorId_lt?: Maybe<Scalars['String']>,\n  validatorId_lte?: Maybe<Scalars['String']>,\n  validatorId_not?: Maybe<Scalars['String']>,\n  validatorId_not_contains?: Maybe<Scalars['String']>,\n  validatorId_not_ends_with?: Maybe<Scalars['String']>,\n  validatorId_not_in?: Maybe<Array<Scalars['String']>>,\n  validatorId_not_starts_with?: Maybe<Scalars['String']>,\n  validatorId_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type OfflineValidatorWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type Onchain_Links = {\n   __typename?: 'onchain_links',\n  created_at: Scalars['timestamptz'],\n  id: Scalars['Int'],\n  onchain_motion: Array<Maybe<Motion>>,\n  onchain_motion_id?: Maybe<Scalars['Int']>,\n  onchain_proposal: Array<Maybe<Proposal>>,\n  onchain_proposal_id?: Maybe<Scalars['Int']>,\n  onchain_referendum: Array<Maybe<Referendum>>,\n  onchain_referendum_id?: Maybe<Scalars['Int']>,\n  onchain_treasury_proposal_id?: Maybe<Scalars['Int']>,\n  onchain_treasury_spend_proposal: Array<Maybe<TreasurySpendProposal>>,\n  post: Posts,\n  post_id: Scalars['Int'],\n  proposer_address: Scalars['String'],\n};\n\n\nexport type Onchain_LinksOnchain_MotionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<MotionOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<MotionWhereInput_Remote_Rel_Public_Onchain_Linksonchain_Motion>\n};\n\n\nexport type Onchain_LinksOnchain_ProposalArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<ProposalOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<ProposalWhereInput_Remote_Rel_Public_Onchain_Linksonchain_Proposal>\n};\n\n\nexport type Onchain_LinksOnchain_ReferendumArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<ReferendumOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<ReferendumWhereInput_Remote_Rel_Public_Onchain_Linksonchain_Referendum>\n};\n\n\nexport type Onchain_LinksOnchain_Treasury_Spend_ProposalArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<TreasurySpendProposalOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<TreasurySpendProposalWhereInput_Remote_Rel_Public_Onchain_Linksonchain_Treasury_Spend_Proposal>\n};\n\nexport type Onchain_Links_Aggregate = {\n   __typename?: 'onchain_links_aggregate',\n  aggregate?: Maybe<Onchain_Links_Aggregate_Fields>,\n  nodes: Array<Onchain_Links>,\n};\n\nexport type Onchain_Links_Aggregate_Fields = {\n   __typename?: 'onchain_links_aggregate_fields',\n  avg?: Maybe<Onchain_Links_Avg_Fields>,\n  count?: Maybe<Scalars['Int']>,\n  max?: Maybe<Onchain_Links_Max_Fields>,\n  min?: Maybe<Onchain_Links_Min_Fields>,\n  stddev?: Maybe<Onchain_Links_Stddev_Fields>,\n  stddev_pop?: Maybe<Onchain_Links_Stddev_Pop_Fields>,\n  stddev_samp?: Maybe<Onchain_Links_Stddev_Samp_Fields>,\n  sum?: Maybe<Onchain_Links_Sum_Fields>,\n  var_pop?: Maybe<Onchain_Links_Var_Pop_Fields>,\n  var_samp?: Maybe<Onchain_Links_Var_Samp_Fields>,\n  variance?: Maybe<Onchain_Links_Variance_Fields>,\n};\n\n\nexport type Onchain_Links_Aggregate_FieldsCountArgs = {\n  columns?: Maybe<Array<Onchain_Links_Select_Column>>,\n  distinct?: Maybe<Scalars['Boolean']>\n};\n\nexport type Onchain_Links_Aggregate_Order_By = {\n  avg?: Maybe<Onchain_Links_Avg_Order_By>,\n  count?: Maybe<Order_By>,\n  max?: Maybe<Onchain_Links_Max_Order_By>,\n  min?: Maybe<Onchain_Links_Min_Order_By>,\n  stddev?: Maybe<Onchain_Links_Stddev_Order_By>,\n  stddev_pop?: Maybe<Onchain_Links_Stddev_Pop_Order_By>,\n  stddev_samp?: Maybe<Onchain_Links_Stddev_Samp_Order_By>,\n  sum?: Maybe<Onchain_Links_Sum_Order_By>,\n  var_pop?: Maybe<Onchain_Links_Var_Pop_Order_By>,\n  var_samp?: Maybe<Onchain_Links_Var_Samp_Order_By>,\n  variance?: Maybe<Onchain_Links_Variance_Order_By>,\n};\n\nexport type Onchain_Links_Arr_Rel_Insert_Input = {\n  data: Array<Onchain_Links_Insert_Input>,\n  on_conflict?: Maybe<Onchain_Links_On_Conflict>,\n};\n\nexport type Onchain_Links_Avg_Fields = {\n   __typename?: 'onchain_links_avg_fields',\n  id?: Maybe<Scalars['Float']>,\n  onchain_motion_id?: Maybe<Scalars['Float']>,\n  onchain_proposal_id?: Maybe<Scalars['Float']>,\n  onchain_referendum_id?: Maybe<Scalars['Float']>,\n  onchain_treasury_proposal_id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Onchain_Links_Avg_Order_By = {\n  id?: Maybe<Order_By>,\n  onchain_motion_id?: Maybe<Order_By>,\n  onchain_proposal_id?: Maybe<Order_By>,\n  onchain_referendum_id?: Maybe<Order_By>,\n  onchain_treasury_proposal_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n};\n\nexport type Onchain_Links_Bool_Exp = {\n  _and?: Maybe<Array<Maybe<Onchain_Links_Bool_Exp>>>,\n  _not?: Maybe<Onchain_Links_Bool_Exp>,\n  _or?: Maybe<Array<Maybe<Onchain_Links_Bool_Exp>>>,\n  created_at?: Maybe<Timestamptz_Comparison_Exp>,\n  id?: Maybe<Int_Comparison_Exp>,\n  onchain_motion_id?: Maybe<Int_Comparison_Exp>,\n  onchain_proposal_id?: Maybe<Int_Comparison_Exp>,\n  onchain_referendum_id?: Maybe<Int_Comparison_Exp>,\n  onchain_treasury_proposal_id?: Maybe<Int_Comparison_Exp>,\n  post?: Maybe<Posts_Bool_Exp>,\n  post_id?: Maybe<Int_Comparison_Exp>,\n  proposer_address?: Maybe<String_Comparison_Exp>,\n};\n\nexport enum Onchain_Links_Constraint {\n  OnchainLinksOnchainMotionIdKey = 'onchain_links_onchain_motion_id_key',\n  OnchainLinksOnchainReferendumIdKey = 'onchain_links_onchain_referendum_id_key',\n  OnchainProposalsChainDbIdKey = 'onchain_proposals_chain_db_id_key',\n  ProposalsPkey = 'proposals_pkey',\n  ProposalsPostIdKey = 'proposals_post_id_key'\n}\n\nexport type Onchain_Links_Inc_Input = {\n  id?: Maybe<Scalars['Int']>,\n  onchain_motion_id?: Maybe<Scalars['Int']>,\n  onchain_proposal_id?: Maybe<Scalars['Int']>,\n  onchain_referendum_id?: Maybe<Scalars['Int']>,\n  onchain_treasury_proposal_id?: Maybe<Scalars['Int']>,\n  post_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Onchain_Links_Insert_Input = {\n  created_at?: Maybe<Scalars['timestamptz']>,\n  id?: Maybe<Scalars['Int']>,\n  onchain_motion_id?: Maybe<Scalars['Int']>,\n  onchain_proposal_id?: Maybe<Scalars['Int']>,\n  onchain_referendum_id?: Maybe<Scalars['Int']>,\n  onchain_treasury_proposal_id?: Maybe<Scalars['Int']>,\n  post?: Maybe<Posts_Obj_Rel_Insert_Input>,\n  post_id?: Maybe<Scalars['Int']>,\n  proposer_address?: Maybe<Scalars['String']>,\n};\n\nexport type Onchain_Links_Max_Fields = {\n   __typename?: 'onchain_links_max_fields',\n  created_at?: Maybe<Scalars['timestamptz']>,\n  id?: Maybe<Scalars['Int']>,\n  onchain_motion_id?: Maybe<Scalars['Int']>,\n  onchain_proposal_id?: Maybe<Scalars['Int']>,\n  onchain_referendum_id?: Maybe<Scalars['Int']>,\n  onchain_treasury_proposal_id?: Maybe<Scalars['Int']>,\n  post_id?: Maybe<Scalars['Int']>,\n  proposer_address?: Maybe<Scalars['String']>,\n};\n\nexport type Onchain_Links_Max_Order_By = {\n  created_at?: Maybe<Order_By>,\n  id?: Maybe<Order_By>,\n  onchain_motion_id?: Maybe<Order_By>,\n  onchain_proposal_id?: Maybe<Order_By>,\n  onchain_referendum_id?: Maybe<Order_By>,\n  onchain_treasury_proposal_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n  proposer_address?: Maybe<Order_By>,\n};\n\nexport type Onchain_Links_Min_Fields = {\n   __typename?: 'onchain_links_min_fields',\n  created_at?: Maybe<Scalars['timestamptz']>,\n  id?: Maybe<Scalars['Int']>,\n  onchain_motion_id?: Maybe<Scalars['Int']>,\n  onchain_proposal_id?: Maybe<Scalars['Int']>,\n  onchain_referendum_id?: Maybe<Scalars['Int']>,\n  onchain_treasury_proposal_id?: Maybe<Scalars['Int']>,\n  post_id?: Maybe<Scalars['Int']>,\n  proposer_address?: Maybe<Scalars['String']>,\n};\n\nexport type Onchain_Links_Min_Order_By = {\n  created_at?: Maybe<Order_By>,\n  id?: Maybe<Order_By>,\n  onchain_motion_id?: Maybe<Order_By>,\n  onchain_proposal_id?: Maybe<Order_By>,\n  onchain_referendum_id?: Maybe<Order_By>,\n  onchain_treasury_proposal_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n  proposer_address?: Maybe<Order_By>,\n};\n\nexport type Onchain_Links_Mutation_Response = {\n   __typename?: 'onchain_links_mutation_response',\n  affected_rows: Scalars['Int'],\n  returning: Array<Onchain_Links>,\n};\n\nexport type Onchain_Links_Obj_Rel_Insert_Input = {\n  data: Onchain_Links_Insert_Input,\n  on_conflict?: Maybe<Onchain_Links_On_Conflict>,\n};\n\nexport type Onchain_Links_On_Conflict = {\n  constraint: Onchain_Links_Constraint,\n  update_columns: Array<Onchain_Links_Update_Column>,\n  where?: Maybe<Onchain_Links_Bool_Exp>,\n};\n\nexport type Onchain_Links_Order_By = {\n  created_at?: Maybe<Order_By>,\n  id?: Maybe<Order_By>,\n  onchain_motion_id?: Maybe<Order_By>,\n  onchain_proposal_id?: Maybe<Order_By>,\n  onchain_referendum_id?: Maybe<Order_By>,\n  onchain_treasury_proposal_id?: Maybe<Order_By>,\n  post?: Maybe<Posts_Order_By>,\n  post_id?: Maybe<Order_By>,\n  proposer_address?: Maybe<Order_By>,\n};\n\nexport enum Onchain_Links_Select_Column {\n  CreatedAt = 'created_at',\n  Id = 'id',\n  OnchainMotionId = 'onchain_motion_id',\n  OnchainProposalId = 'onchain_proposal_id',\n  OnchainReferendumId = 'onchain_referendum_id',\n  OnchainTreasuryProposalId = 'onchain_treasury_proposal_id',\n  PostId = 'post_id',\n  ProposerAddress = 'proposer_address'\n}\n\nexport type Onchain_Links_Set_Input = {\n  created_at?: Maybe<Scalars['timestamptz']>,\n  id?: Maybe<Scalars['Int']>,\n  onchain_motion_id?: Maybe<Scalars['Int']>,\n  onchain_proposal_id?: Maybe<Scalars['Int']>,\n  onchain_referendum_id?: Maybe<Scalars['Int']>,\n  onchain_treasury_proposal_id?: Maybe<Scalars['Int']>,\n  post_id?: Maybe<Scalars['Int']>,\n  proposer_address?: Maybe<Scalars['String']>,\n};\n\nexport type Onchain_Links_Stddev_Fields = {\n   __typename?: 'onchain_links_stddev_fields',\n  id?: Maybe<Scalars['Float']>,\n  onchain_motion_id?: Maybe<Scalars['Float']>,\n  onchain_proposal_id?: Maybe<Scalars['Float']>,\n  onchain_referendum_id?: Maybe<Scalars['Float']>,\n  onchain_treasury_proposal_id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Onchain_Links_Stddev_Order_By = {\n  id?: Maybe<Order_By>,\n  onchain_motion_id?: Maybe<Order_By>,\n  onchain_proposal_id?: Maybe<Order_By>,\n  onchain_referendum_id?: Maybe<Order_By>,\n  onchain_treasury_proposal_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n};\n\nexport type Onchain_Links_Stddev_Pop_Fields = {\n   __typename?: 'onchain_links_stddev_pop_fields',\n  id?: Maybe<Scalars['Float']>,\n  onchain_motion_id?: Maybe<Scalars['Float']>,\n  onchain_proposal_id?: Maybe<Scalars['Float']>,\n  onchain_referendum_id?: Maybe<Scalars['Float']>,\n  onchain_treasury_proposal_id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Onchain_Links_Stddev_Pop_Order_By = {\n  id?: Maybe<Order_By>,\n  onchain_motion_id?: Maybe<Order_By>,\n  onchain_proposal_id?: Maybe<Order_By>,\n  onchain_referendum_id?: Maybe<Order_By>,\n  onchain_treasury_proposal_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n};\n\nexport type Onchain_Links_Stddev_Samp_Fields = {\n   __typename?: 'onchain_links_stddev_samp_fields',\n  id?: Maybe<Scalars['Float']>,\n  onchain_motion_id?: Maybe<Scalars['Float']>,\n  onchain_proposal_id?: Maybe<Scalars['Float']>,\n  onchain_referendum_id?: Maybe<Scalars['Float']>,\n  onchain_treasury_proposal_id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Onchain_Links_Stddev_Samp_Order_By = {\n  id?: Maybe<Order_By>,\n  onchain_motion_id?: Maybe<Order_By>,\n  onchain_proposal_id?: Maybe<Order_By>,\n  onchain_referendum_id?: Maybe<Order_By>,\n  onchain_treasury_proposal_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n};\n\nexport type Onchain_Links_Sum_Fields = {\n   __typename?: 'onchain_links_sum_fields',\n  id?: Maybe<Scalars['Int']>,\n  onchain_motion_id?: Maybe<Scalars['Int']>,\n  onchain_proposal_id?: Maybe<Scalars['Int']>,\n  onchain_referendum_id?: Maybe<Scalars['Int']>,\n  onchain_treasury_proposal_id?: Maybe<Scalars['Int']>,\n  post_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Onchain_Links_Sum_Order_By = {\n  id?: Maybe<Order_By>,\n  onchain_motion_id?: Maybe<Order_By>,\n  onchain_proposal_id?: Maybe<Order_By>,\n  onchain_referendum_id?: Maybe<Order_By>,\n  onchain_treasury_proposal_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n};\n\nexport enum Onchain_Links_Update_Column {\n  CreatedAt = 'created_at',\n  Id = 'id',\n  OnchainMotionId = 'onchain_motion_id',\n  OnchainProposalId = 'onchain_proposal_id',\n  OnchainReferendumId = 'onchain_referendum_id',\n  OnchainTreasuryProposalId = 'onchain_treasury_proposal_id',\n  PostId = 'post_id',\n  ProposerAddress = 'proposer_address'\n}\n\nexport type Onchain_Links_Var_Pop_Fields = {\n   __typename?: 'onchain_links_var_pop_fields',\n  id?: Maybe<Scalars['Float']>,\n  onchain_motion_id?: Maybe<Scalars['Float']>,\n  onchain_proposal_id?: Maybe<Scalars['Float']>,\n  onchain_referendum_id?: Maybe<Scalars['Float']>,\n  onchain_treasury_proposal_id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Onchain_Links_Var_Pop_Order_By = {\n  id?: Maybe<Order_By>,\n  onchain_motion_id?: Maybe<Order_By>,\n  onchain_proposal_id?: Maybe<Order_By>,\n  onchain_referendum_id?: Maybe<Order_By>,\n  onchain_treasury_proposal_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n};\n\nexport type Onchain_Links_Var_Samp_Fields = {\n   __typename?: 'onchain_links_var_samp_fields',\n  id?: Maybe<Scalars['Float']>,\n  onchain_motion_id?: Maybe<Scalars['Float']>,\n  onchain_proposal_id?: Maybe<Scalars['Float']>,\n  onchain_referendum_id?: Maybe<Scalars['Float']>,\n  onchain_treasury_proposal_id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Onchain_Links_Var_Samp_Order_By = {\n  id?: Maybe<Order_By>,\n  onchain_motion_id?: Maybe<Order_By>,\n  onchain_proposal_id?: Maybe<Order_By>,\n  onchain_referendum_id?: Maybe<Order_By>,\n  onchain_treasury_proposal_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n};\n\nexport type Onchain_Links_Variance_Fields = {\n   __typename?: 'onchain_links_variance_fields',\n  id?: Maybe<Scalars['Float']>,\n  onchain_motion_id?: Maybe<Scalars['Float']>,\n  onchain_proposal_id?: Maybe<Scalars['Float']>,\n  onchain_referendum_id?: Maybe<Scalars['Float']>,\n  onchain_treasury_proposal_id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Onchain_Links_Variance_Order_By = {\n  id?: Maybe<Order_By>,\n  onchain_motion_id?: Maybe<Order_By>,\n  onchain_proposal_id?: Maybe<Order_By>,\n  onchain_referendum_id?: Maybe<Order_By>,\n  onchain_treasury_proposal_id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n};\n\nexport enum Order_By {\n  Asc = 'asc',\n  AscNullsFirst = 'asc_nulls_first',\n  AscNullsLast = 'asc_nulls_last',\n  Desc = 'desc',\n  DescNullsFirst = 'desc_nulls_first',\n  DescNullsLast = 'desc_nulls_last'\n}\n\nexport type PageInfo = {\n   __typename?: 'PageInfo',\n  endCursor?: Maybe<Scalars['String']>,\n  hasNextPage: Scalars['Boolean'],\n  hasPreviousPage: Scalars['Boolean'],\n  startCursor?: Maybe<Scalars['String']>,\n};\n\nexport type Post_Reactions = {\n   __typename?: 'post_reactions',\n  created_at: Scalars['timestamp'],\n  id: Scalars['Int'],\n  post: Posts,\n  post_id: Scalars['Int'],\n  reacting_user?: Maybe<User>,\n  reaction: Scalars['bpchar'],\n  updated_at: Scalars['timestamp'],\n  user_id: Scalars['Int'],\n};\n\nexport type Post_Reactions_Aggregate = {\n   __typename?: 'post_reactions_aggregate',\n  aggregate?: Maybe<Post_Reactions_Aggregate_Fields>,\n  nodes: Array<Post_Reactions>,\n};\n\nexport type Post_Reactions_Aggregate_Fields = {\n   __typename?: 'post_reactions_aggregate_fields',\n  avg?: Maybe<Post_Reactions_Avg_Fields>,\n  count?: Maybe<Scalars['Int']>,\n  max?: Maybe<Post_Reactions_Max_Fields>,\n  min?: Maybe<Post_Reactions_Min_Fields>,\n  stddev?: Maybe<Post_Reactions_Stddev_Fields>,\n  stddev_pop?: Maybe<Post_Reactions_Stddev_Pop_Fields>,\n  stddev_samp?: Maybe<Post_Reactions_Stddev_Samp_Fields>,\n  sum?: Maybe<Post_Reactions_Sum_Fields>,\n  var_pop?: Maybe<Post_Reactions_Var_Pop_Fields>,\n  var_samp?: Maybe<Post_Reactions_Var_Samp_Fields>,\n  variance?: Maybe<Post_Reactions_Variance_Fields>,\n};\n\n\nexport type Post_Reactions_Aggregate_FieldsCountArgs = {\n  columns?: Maybe<Array<Post_Reactions_Select_Column>>,\n  distinct?: Maybe<Scalars['Boolean']>\n};\n\nexport type Post_Reactions_Aggregate_Order_By = {\n  avg?: Maybe<Post_Reactions_Avg_Order_By>,\n  count?: Maybe<Order_By>,\n  max?: Maybe<Post_Reactions_Max_Order_By>,\n  min?: Maybe<Post_Reactions_Min_Order_By>,\n  stddev?: Maybe<Post_Reactions_Stddev_Order_By>,\n  stddev_pop?: Maybe<Post_Reactions_Stddev_Pop_Order_By>,\n  stddev_samp?: Maybe<Post_Reactions_Stddev_Samp_Order_By>,\n  sum?: Maybe<Post_Reactions_Sum_Order_By>,\n  var_pop?: Maybe<Post_Reactions_Var_Pop_Order_By>,\n  var_samp?: Maybe<Post_Reactions_Var_Samp_Order_By>,\n  variance?: Maybe<Post_Reactions_Variance_Order_By>,\n};\n\nexport type Post_Reactions_Arr_Rel_Insert_Input = {\n  data: Array<Post_Reactions_Insert_Input>,\n  on_conflict?: Maybe<Post_Reactions_On_Conflict>,\n};\n\nexport type Post_Reactions_Avg_Fields = {\n   __typename?: 'post_reactions_avg_fields',\n  id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n  user_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Reactions_Avg_Order_By = {\n  id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Post_Reactions_Bool_Exp = {\n  _and?: Maybe<Array<Maybe<Post_Reactions_Bool_Exp>>>,\n  _not?: Maybe<Post_Reactions_Bool_Exp>,\n  _or?: Maybe<Array<Maybe<Post_Reactions_Bool_Exp>>>,\n  created_at?: Maybe<Timestamp_Comparison_Exp>,\n  id?: Maybe<Int_Comparison_Exp>,\n  post?: Maybe<Posts_Bool_Exp>,\n  post_id?: Maybe<Int_Comparison_Exp>,\n  reaction?: Maybe<Bpchar_Comparison_Exp>,\n  updated_at?: Maybe<Timestamp_Comparison_Exp>,\n  user_id?: Maybe<Int_Comparison_Exp>,\n};\n\nexport enum Post_Reactions_Constraint {\n  PostReactionsPkey = 'post_reactions_pkey'\n}\n\nexport type Post_Reactions_Inc_Input = {\n  id?: Maybe<Scalars['Int']>,\n  post_id?: Maybe<Scalars['Int']>,\n  user_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Post_Reactions_Insert_Input = {\n  created_at?: Maybe<Scalars['timestamp']>,\n  id?: Maybe<Scalars['Int']>,\n  post?: Maybe<Posts_Obj_Rel_Insert_Input>,\n  post_id?: Maybe<Scalars['Int']>,\n  reaction?: Maybe<Scalars['bpchar']>,\n  updated_at?: Maybe<Scalars['timestamp']>,\n  user_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Post_Reactions_Max_Fields = {\n   __typename?: 'post_reactions_max_fields',\n  id?: Maybe<Scalars['Int']>,\n  post_id?: Maybe<Scalars['Int']>,\n  user_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Post_Reactions_Max_Order_By = {\n  id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Post_Reactions_Min_Fields = {\n   __typename?: 'post_reactions_min_fields',\n  id?: Maybe<Scalars['Int']>,\n  post_id?: Maybe<Scalars['Int']>,\n  user_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Post_Reactions_Min_Order_By = {\n  id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Post_Reactions_Mutation_Response = {\n   __typename?: 'post_reactions_mutation_response',\n  affected_rows: Scalars['Int'],\n  returning: Array<Post_Reactions>,\n};\n\nexport type Post_Reactions_Obj_Rel_Insert_Input = {\n  data: Post_Reactions_Insert_Input,\n  on_conflict?: Maybe<Post_Reactions_On_Conflict>,\n};\n\nexport type Post_Reactions_On_Conflict = {\n  constraint: Post_Reactions_Constraint,\n  update_columns: Array<Post_Reactions_Update_Column>,\n  where?: Maybe<Post_Reactions_Bool_Exp>,\n};\n\nexport type Post_Reactions_Order_By = {\n  created_at?: Maybe<Order_By>,\n  id?: Maybe<Order_By>,\n  post?: Maybe<Posts_Order_By>,\n  post_id?: Maybe<Order_By>,\n  reaction?: Maybe<Order_By>,\n  updated_at?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport enum Post_Reactions_Select_Column {\n  CreatedAt = 'created_at',\n  Id = 'id',\n  PostId = 'post_id',\n  Reaction = 'reaction',\n  UpdatedAt = 'updated_at',\n  UserId = 'user_id'\n}\n\nexport type Post_Reactions_Set_Input = {\n  created_at?: Maybe<Scalars['timestamp']>,\n  id?: Maybe<Scalars['Int']>,\n  post_id?: Maybe<Scalars['Int']>,\n  reaction?: Maybe<Scalars['bpchar']>,\n  updated_at?: Maybe<Scalars['timestamp']>,\n  user_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Post_Reactions_Stddev_Fields = {\n   __typename?: 'post_reactions_stddev_fields',\n  id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n  user_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Reactions_Stddev_Order_By = {\n  id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Post_Reactions_Stddev_Pop_Fields = {\n   __typename?: 'post_reactions_stddev_pop_fields',\n  id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n  user_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Reactions_Stddev_Pop_Order_By = {\n  id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Post_Reactions_Stddev_Samp_Fields = {\n   __typename?: 'post_reactions_stddev_samp_fields',\n  id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n  user_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Reactions_Stddev_Samp_Order_By = {\n  id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Post_Reactions_Sum_Fields = {\n   __typename?: 'post_reactions_sum_fields',\n  id?: Maybe<Scalars['Int']>,\n  post_id?: Maybe<Scalars['Int']>,\n  user_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Post_Reactions_Sum_Order_By = {\n  id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport enum Post_Reactions_Update_Column {\n  CreatedAt = 'created_at',\n  Id = 'id',\n  PostId = 'post_id',\n  Reaction = 'reaction',\n  UpdatedAt = 'updated_at',\n  UserId = 'user_id'\n}\n\nexport type Post_Reactions_Var_Pop_Fields = {\n   __typename?: 'post_reactions_var_pop_fields',\n  id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n  user_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Reactions_Var_Pop_Order_By = {\n  id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Post_Reactions_Var_Samp_Fields = {\n   __typename?: 'post_reactions_var_samp_fields',\n  id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n  user_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Reactions_Var_Samp_Order_By = {\n  id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Post_Reactions_Variance_Fields = {\n   __typename?: 'post_reactions_variance_fields',\n  id?: Maybe<Scalars['Float']>,\n  post_id?: Maybe<Scalars['Float']>,\n  user_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Reactions_Variance_Order_By = {\n  id?: Maybe<Order_By>,\n  post_id?: Maybe<Order_By>,\n  user_id?: Maybe<Order_By>,\n};\n\nexport type Post_Topics = {\n   __typename?: 'post_topics',\n  id: Scalars['Int'],\n  name: Scalars['String'],\n  posts: Array<Posts>,\n  posts_aggregate: Posts_Aggregate,\n};\n\n\nexport type Post_TopicsPostsArgs = {\n  distinct_on?: Maybe<Array<Posts_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Posts_Order_By>>,\n  where?: Maybe<Posts_Bool_Exp>\n};\n\n\nexport type Post_TopicsPosts_AggregateArgs = {\n  distinct_on?: Maybe<Array<Posts_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Posts_Order_By>>,\n  where?: Maybe<Posts_Bool_Exp>\n};\n\nexport type Post_Topics_Aggregate = {\n   __typename?: 'post_topics_aggregate',\n  aggregate?: Maybe<Post_Topics_Aggregate_Fields>,\n  nodes: Array<Post_Topics>,\n};\n\nexport type Post_Topics_Aggregate_Fields = {\n   __typename?: 'post_topics_aggregate_fields',\n  avg?: Maybe<Post_Topics_Avg_Fields>,\n  count?: Maybe<Scalars['Int']>,\n  max?: Maybe<Post_Topics_Max_Fields>,\n  min?: Maybe<Post_Topics_Min_Fields>,\n  stddev?: Maybe<Post_Topics_Stddev_Fields>,\n  stddev_pop?: Maybe<Post_Topics_Stddev_Pop_Fields>,\n  stddev_samp?: Maybe<Post_Topics_Stddev_Samp_Fields>,\n  sum?: Maybe<Post_Topics_Sum_Fields>,\n  var_pop?: Maybe<Post_Topics_Var_Pop_Fields>,\n  var_samp?: Maybe<Post_Topics_Var_Samp_Fields>,\n  variance?: Maybe<Post_Topics_Variance_Fields>,\n};\n\n\nexport type Post_Topics_Aggregate_FieldsCountArgs = {\n  columns?: Maybe<Array<Post_Topics_Select_Column>>,\n  distinct?: Maybe<Scalars['Boolean']>\n};\n\nexport type Post_Topics_Aggregate_Order_By = {\n  avg?: Maybe<Post_Topics_Avg_Order_By>,\n  count?: Maybe<Order_By>,\n  max?: Maybe<Post_Topics_Max_Order_By>,\n  min?: Maybe<Post_Topics_Min_Order_By>,\n  stddev?: Maybe<Post_Topics_Stddev_Order_By>,\n  stddev_pop?: Maybe<Post_Topics_Stddev_Pop_Order_By>,\n  stddev_samp?: Maybe<Post_Topics_Stddev_Samp_Order_By>,\n  sum?: Maybe<Post_Topics_Sum_Order_By>,\n  var_pop?: Maybe<Post_Topics_Var_Pop_Order_By>,\n  var_samp?: Maybe<Post_Topics_Var_Samp_Order_By>,\n  variance?: Maybe<Post_Topics_Variance_Order_By>,\n};\n\nexport type Post_Topics_Arr_Rel_Insert_Input = {\n  data: Array<Post_Topics_Insert_Input>,\n  on_conflict?: Maybe<Post_Topics_On_Conflict>,\n};\n\nexport type Post_Topics_Avg_Fields = {\n   __typename?: 'post_topics_avg_fields',\n  id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Topics_Avg_Order_By = {\n  id?: Maybe<Order_By>,\n};\n\nexport type Post_Topics_Bool_Exp = {\n  _and?: Maybe<Array<Maybe<Post_Topics_Bool_Exp>>>,\n  _not?: Maybe<Post_Topics_Bool_Exp>,\n  _or?: Maybe<Array<Maybe<Post_Topics_Bool_Exp>>>,\n  id?: Maybe<Int_Comparison_Exp>,\n  name?: Maybe<String_Comparison_Exp>,\n  posts?: Maybe<Posts_Bool_Exp>,\n};\n\nexport enum Post_Topics_Constraint {\n  CategoriesNameKey = 'categories_name_key',\n  CategoriesPkey = 'categories_pkey'\n}\n\nexport type Post_Topics_Inc_Input = {\n  id?: Maybe<Scalars['Int']>,\n};\n\nexport type Post_Topics_Insert_Input = {\n  id?: Maybe<Scalars['Int']>,\n  name?: Maybe<Scalars['String']>,\n  posts?: Maybe<Posts_Arr_Rel_Insert_Input>,\n};\n\nexport type Post_Topics_Max_Fields = {\n   __typename?: 'post_topics_max_fields',\n  id?: Maybe<Scalars['Int']>,\n  name?: Maybe<Scalars['String']>,\n};\n\nexport type Post_Topics_Max_Order_By = {\n  id?: Maybe<Order_By>,\n  name?: Maybe<Order_By>,\n};\n\nexport type Post_Topics_Min_Fields = {\n   __typename?: 'post_topics_min_fields',\n  id?: Maybe<Scalars['Int']>,\n  name?: Maybe<Scalars['String']>,\n};\n\nexport type Post_Topics_Min_Order_By = {\n  id?: Maybe<Order_By>,\n  name?: Maybe<Order_By>,\n};\n\nexport type Post_Topics_Mutation_Response = {\n   __typename?: 'post_topics_mutation_response',\n  affected_rows: Scalars['Int'],\n  returning: Array<Post_Topics>,\n};\n\nexport type Post_Topics_Obj_Rel_Insert_Input = {\n  data: Post_Topics_Insert_Input,\n  on_conflict?: Maybe<Post_Topics_On_Conflict>,\n};\n\nexport type Post_Topics_On_Conflict = {\n  constraint: Post_Topics_Constraint,\n  update_columns: Array<Post_Topics_Update_Column>,\n  where?: Maybe<Post_Topics_Bool_Exp>,\n};\n\nexport type Post_Topics_Order_By = {\n  id?: Maybe<Order_By>,\n  name?: Maybe<Order_By>,\n  posts_aggregate?: Maybe<Posts_Aggregate_Order_By>,\n};\n\nexport enum Post_Topics_Select_Column {\n  Id = 'id',\n  Name = 'name'\n}\n\nexport type Post_Topics_Set_Input = {\n  id?: Maybe<Scalars['Int']>,\n  name?: Maybe<Scalars['String']>,\n};\n\nexport type Post_Topics_Stddev_Fields = {\n   __typename?: 'post_topics_stddev_fields',\n  id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Topics_Stddev_Order_By = {\n  id?: Maybe<Order_By>,\n};\n\nexport type Post_Topics_Stddev_Pop_Fields = {\n   __typename?: 'post_topics_stddev_pop_fields',\n  id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Topics_Stddev_Pop_Order_By = {\n  id?: Maybe<Order_By>,\n};\n\nexport type Post_Topics_Stddev_Samp_Fields = {\n   __typename?: 'post_topics_stddev_samp_fields',\n  id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Topics_Stddev_Samp_Order_By = {\n  id?: Maybe<Order_By>,\n};\n\nexport type Post_Topics_Sum_Fields = {\n   __typename?: 'post_topics_sum_fields',\n  id?: Maybe<Scalars['Int']>,\n};\n\nexport type Post_Topics_Sum_Order_By = {\n  id?: Maybe<Order_By>,\n};\n\nexport enum Post_Topics_Update_Column {\n  Id = 'id',\n  Name = 'name'\n}\n\nexport type Post_Topics_Var_Pop_Fields = {\n   __typename?: 'post_topics_var_pop_fields',\n  id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Topics_Var_Pop_Order_By = {\n  id?: Maybe<Order_By>,\n};\n\nexport type Post_Topics_Var_Samp_Fields = {\n   __typename?: 'post_topics_var_samp_fields',\n  id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Topics_Var_Samp_Order_By = {\n  id?: Maybe<Order_By>,\n};\n\nexport type Post_Topics_Variance_Fields = {\n   __typename?: 'post_topics_variance_fields',\n  id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Topics_Variance_Order_By = {\n  id?: Maybe<Order_By>,\n};\n\nexport type Post_Types = {\n   __typename?: 'post_types',\n  id: Scalars['Int'],\n  name: Scalars['String'],\n  posts: Array<Posts>,\n  posts_aggregate: Posts_Aggregate,\n};\n\n\nexport type Post_TypesPostsArgs = {\n  distinct_on?: Maybe<Array<Posts_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Posts_Order_By>>,\n  where?: Maybe<Posts_Bool_Exp>\n};\n\n\nexport type Post_TypesPosts_AggregateArgs = {\n  distinct_on?: Maybe<Array<Posts_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Posts_Order_By>>,\n  where?: Maybe<Posts_Bool_Exp>\n};\n\nexport type Post_Types_Aggregate = {\n   __typename?: 'post_types_aggregate',\n  aggregate?: Maybe<Post_Types_Aggregate_Fields>,\n  nodes: Array<Post_Types>,\n};\n\nexport type Post_Types_Aggregate_Fields = {\n   __typename?: 'post_types_aggregate_fields',\n  avg?: Maybe<Post_Types_Avg_Fields>,\n  count?: Maybe<Scalars['Int']>,\n  max?: Maybe<Post_Types_Max_Fields>,\n  min?: Maybe<Post_Types_Min_Fields>,\n  stddev?: Maybe<Post_Types_Stddev_Fields>,\n  stddev_pop?: Maybe<Post_Types_Stddev_Pop_Fields>,\n  stddev_samp?: Maybe<Post_Types_Stddev_Samp_Fields>,\n  sum?: Maybe<Post_Types_Sum_Fields>,\n  var_pop?: Maybe<Post_Types_Var_Pop_Fields>,\n  var_samp?: Maybe<Post_Types_Var_Samp_Fields>,\n  variance?: Maybe<Post_Types_Variance_Fields>,\n};\n\n\nexport type Post_Types_Aggregate_FieldsCountArgs = {\n  columns?: Maybe<Array<Post_Types_Select_Column>>,\n  distinct?: Maybe<Scalars['Boolean']>\n};\n\nexport type Post_Types_Aggregate_Order_By = {\n  avg?: Maybe<Post_Types_Avg_Order_By>,\n  count?: Maybe<Order_By>,\n  max?: Maybe<Post_Types_Max_Order_By>,\n  min?: Maybe<Post_Types_Min_Order_By>,\n  stddev?: Maybe<Post_Types_Stddev_Order_By>,\n  stddev_pop?: Maybe<Post_Types_Stddev_Pop_Order_By>,\n  stddev_samp?: Maybe<Post_Types_Stddev_Samp_Order_By>,\n  sum?: Maybe<Post_Types_Sum_Order_By>,\n  var_pop?: Maybe<Post_Types_Var_Pop_Order_By>,\n  var_samp?: Maybe<Post_Types_Var_Samp_Order_By>,\n  variance?: Maybe<Post_Types_Variance_Order_By>,\n};\n\nexport type Post_Types_Arr_Rel_Insert_Input = {\n  data: Array<Post_Types_Insert_Input>,\n  on_conflict?: Maybe<Post_Types_On_Conflict>,\n};\n\nexport type Post_Types_Avg_Fields = {\n   __typename?: 'post_types_avg_fields',\n  id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Types_Avg_Order_By = {\n  id?: Maybe<Order_By>,\n};\n\nexport type Post_Types_Bool_Exp = {\n  _and?: Maybe<Array<Maybe<Post_Types_Bool_Exp>>>,\n  _not?: Maybe<Post_Types_Bool_Exp>,\n  _or?: Maybe<Array<Maybe<Post_Types_Bool_Exp>>>,\n  id?: Maybe<Int_Comparison_Exp>,\n  name?: Maybe<String_Comparison_Exp>,\n  posts?: Maybe<Posts_Bool_Exp>,\n};\n\nexport enum Post_Types_Constraint {\n  PostTypesNameKey = 'post_types_name_key',\n  PostTypesPkey = 'post_types_pkey'\n}\n\nexport type Post_Types_Inc_Input = {\n  id?: Maybe<Scalars['Int']>,\n};\n\nexport type Post_Types_Insert_Input = {\n  id?: Maybe<Scalars['Int']>,\n  name?: Maybe<Scalars['String']>,\n  posts?: Maybe<Posts_Arr_Rel_Insert_Input>,\n};\n\nexport type Post_Types_Max_Fields = {\n   __typename?: 'post_types_max_fields',\n  id?: Maybe<Scalars['Int']>,\n  name?: Maybe<Scalars['String']>,\n};\n\nexport type Post_Types_Max_Order_By = {\n  id?: Maybe<Order_By>,\n  name?: Maybe<Order_By>,\n};\n\nexport type Post_Types_Min_Fields = {\n   __typename?: 'post_types_min_fields',\n  id?: Maybe<Scalars['Int']>,\n  name?: Maybe<Scalars['String']>,\n};\n\nexport type Post_Types_Min_Order_By = {\n  id?: Maybe<Order_By>,\n  name?: Maybe<Order_By>,\n};\n\nexport type Post_Types_Mutation_Response = {\n   __typename?: 'post_types_mutation_response',\n  affected_rows: Scalars['Int'],\n  returning: Array<Post_Types>,\n};\n\nexport type Post_Types_Obj_Rel_Insert_Input = {\n  data: Post_Types_Insert_Input,\n  on_conflict?: Maybe<Post_Types_On_Conflict>,\n};\n\nexport type Post_Types_On_Conflict = {\n  constraint: Post_Types_Constraint,\n  update_columns: Array<Post_Types_Update_Column>,\n  where?: Maybe<Post_Types_Bool_Exp>,\n};\n\nexport type Post_Types_Order_By = {\n  id?: Maybe<Order_By>,\n  name?: Maybe<Order_By>,\n  posts_aggregate?: Maybe<Posts_Aggregate_Order_By>,\n};\n\nexport enum Post_Types_Select_Column {\n  Id = 'id',\n  Name = 'name'\n}\n\nexport type Post_Types_Set_Input = {\n  id?: Maybe<Scalars['Int']>,\n  name?: Maybe<Scalars['String']>,\n};\n\nexport type Post_Types_Stddev_Fields = {\n   __typename?: 'post_types_stddev_fields',\n  id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Types_Stddev_Order_By = {\n  id?: Maybe<Order_By>,\n};\n\nexport type Post_Types_Stddev_Pop_Fields = {\n   __typename?: 'post_types_stddev_pop_fields',\n  id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Types_Stddev_Pop_Order_By = {\n  id?: Maybe<Order_By>,\n};\n\nexport type Post_Types_Stddev_Samp_Fields = {\n   __typename?: 'post_types_stddev_samp_fields',\n  id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Types_Stddev_Samp_Order_By = {\n  id?: Maybe<Order_By>,\n};\n\nexport type Post_Types_Sum_Fields = {\n   __typename?: 'post_types_sum_fields',\n  id?: Maybe<Scalars['Int']>,\n};\n\nexport type Post_Types_Sum_Order_By = {\n  id?: Maybe<Order_By>,\n};\n\nexport enum Post_Types_Update_Column {\n  Id = 'id',\n  Name = 'name'\n}\n\nexport type Post_Types_Var_Pop_Fields = {\n   __typename?: 'post_types_var_pop_fields',\n  id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Types_Var_Pop_Order_By = {\n  id?: Maybe<Order_By>,\n};\n\nexport type Post_Types_Var_Samp_Fields = {\n   __typename?: 'post_types_var_samp_fields',\n  id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Types_Var_Samp_Order_By = {\n  id?: Maybe<Order_By>,\n};\n\nexport type Post_Types_Variance_Fields = {\n   __typename?: 'post_types_variance_fields',\n  id?: Maybe<Scalars['Float']>,\n};\n\nexport type Post_Types_Variance_Order_By = {\n  id?: Maybe<Order_By>,\n};\n\nexport type Posts = {\n   __typename?: 'posts',\n  author?: Maybe<User>,\n  author_id: Scalars['Int'],\n  comments: Array<Comments>,\n  comments_aggregate: Comments_Aggregate,\n  content?: Maybe<Scalars['String']>,\n  created_at: Scalars['timestamptz'],\n  id: Scalars['Int'],\n  onchain_link?: Maybe<Onchain_Links>,\n  post_reactions: Array<Post_Reactions>,\n  post_reactions_aggregate: Post_Reactions_Aggregate,\n  title: Scalars['String'],\n  topic: Post_Topics,\n  topic_id: Scalars['Int'],\n  type: Post_Types,\n  type_id: Scalars['Int'],\n  updated_at: Scalars['timestamptz'],\n};\n\n\nexport type PostsCommentsArgs = {\n  distinct_on?: Maybe<Array<Comments_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Comments_Order_By>>,\n  where?: Maybe<Comments_Bool_Exp>\n};\n\n\nexport type PostsComments_AggregateArgs = {\n  distinct_on?: Maybe<Array<Comments_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Comments_Order_By>>,\n  where?: Maybe<Comments_Bool_Exp>\n};\n\n\nexport type PostsPost_ReactionsArgs = {\n  distinct_on?: Maybe<Array<Post_Reactions_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Post_Reactions_Order_By>>,\n  where?: Maybe<Post_Reactions_Bool_Exp>\n};\n\n\nexport type PostsPost_Reactions_AggregateArgs = {\n  distinct_on?: Maybe<Array<Post_Reactions_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Post_Reactions_Order_By>>,\n  where?: Maybe<Post_Reactions_Bool_Exp>\n};\n\nexport type Posts_Aggregate = {\n   __typename?: 'posts_aggregate',\n  aggregate?: Maybe<Posts_Aggregate_Fields>,\n  nodes: Array<Posts>,\n};\n\nexport type Posts_Aggregate_Fields = {\n   __typename?: 'posts_aggregate_fields',\n  avg?: Maybe<Posts_Avg_Fields>,\n  count?: Maybe<Scalars['Int']>,\n  max?: Maybe<Posts_Max_Fields>,\n  min?: Maybe<Posts_Min_Fields>,\n  stddev?: Maybe<Posts_Stddev_Fields>,\n  stddev_pop?: Maybe<Posts_Stddev_Pop_Fields>,\n  stddev_samp?: Maybe<Posts_Stddev_Samp_Fields>,\n  sum?: Maybe<Posts_Sum_Fields>,\n  var_pop?: Maybe<Posts_Var_Pop_Fields>,\n  var_samp?: Maybe<Posts_Var_Samp_Fields>,\n  variance?: Maybe<Posts_Variance_Fields>,\n};\n\n\nexport type Posts_Aggregate_FieldsCountArgs = {\n  columns?: Maybe<Array<Posts_Select_Column>>,\n  distinct?: Maybe<Scalars['Boolean']>\n};\n\nexport type Posts_Aggregate_Order_By = {\n  avg?: Maybe<Posts_Avg_Order_By>,\n  count?: Maybe<Order_By>,\n  max?: Maybe<Posts_Max_Order_By>,\n  min?: Maybe<Posts_Min_Order_By>,\n  stddev?: Maybe<Posts_Stddev_Order_By>,\n  stddev_pop?: Maybe<Posts_Stddev_Pop_Order_By>,\n  stddev_samp?: Maybe<Posts_Stddev_Samp_Order_By>,\n  sum?: Maybe<Posts_Sum_Order_By>,\n  var_pop?: Maybe<Posts_Var_Pop_Order_By>,\n  var_samp?: Maybe<Posts_Var_Samp_Order_By>,\n  variance?: Maybe<Posts_Variance_Order_By>,\n};\n\nexport type Posts_Arr_Rel_Insert_Input = {\n  data: Array<Posts_Insert_Input>,\n  on_conflict?: Maybe<Posts_On_Conflict>,\n};\n\nexport type Posts_Avg_Fields = {\n   __typename?: 'posts_avg_fields',\n  author_id?: Maybe<Scalars['Float']>,\n  id?: Maybe<Scalars['Float']>,\n  topic_id?: Maybe<Scalars['Float']>,\n  type_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Posts_Avg_Order_By = {\n  author_id?: Maybe<Order_By>,\n  id?: Maybe<Order_By>,\n  topic_id?: Maybe<Order_By>,\n  type_id?: Maybe<Order_By>,\n};\n\nexport type Posts_Bool_Exp = {\n  _and?: Maybe<Array<Maybe<Posts_Bool_Exp>>>,\n  _not?: Maybe<Posts_Bool_Exp>,\n  _or?: Maybe<Array<Maybe<Posts_Bool_Exp>>>,\n  author_id?: Maybe<Int_Comparison_Exp>,\n  comments?: Maybe<Comments_Bool_Exp>,\n  content?: Maybe<String_Comparison_Exp>,\n  created_at?: Maybe<Timestamptz_Comparison_Exp>,\n  id?: Maybe<Int_Comparison_Exp>,\n  onchain_link?: Maybe<Onchain_Links_Bool_Exp>,\n  post_reactions?: Maybe<Post_Reactions_Bool_Exp>,\n  title?: Maybe<String_Comparison_Exp>,\n  topic?: Maybe<Post_Topics_Bool_Exp>,\n  topic_id?: Maybe<Int_Comparison_Exp>,\n  type?: Maybe<Post_Types_Bool_Exp>,\n  type_id?: Maybe<Int_Comparison_Exp>,\n  updated_at?: Maybe<Timestamptz_Comparison_Exp>,\n};\n\nexport enum Posts_Constraint {\n  MessagesPkey = 'messages_pkey'\n}\n\nexport type Posts_Inc_Input = {\n  author_id?: Maybe<Scalars['Int']>,\n  id?: Maybe<Scalars['Int']>,\n  topic_id?: Maybe<Scalars['Int']>,\n  type_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Posts_Insert_Input = {\n  author_id?: Maybe<Scalars['Int']>,\n  comments?: Maybe<Comments_Arr_Rel_Insert_Input>,\n  content?: Maybe<Scalars['String']>,\n  created_at?: Maybe<Scalars['timestamptz']>,\n  id?: Maybe<Scalars['Int']>,\n  onchain_link?: Maybe<Onchain_Links_Obj_Rel_Insert_Input>,\n  post_reactions?: Maybe<Post_Reactions_Arr_Rel_Insert_Input>,\n  title?: Maybe<Scalars['String']>,\n  topic?: Maybe<Post_Topics_Obj_Rel_Insert_Input>,\n  topic_id?: Maybe<Scalars['Int']>,\n  type?: Maybe<Post_Types_Obj_Rel_Insert_Input>,\n  type_id?: Maybe<Scalars['Int']>,\n  updated_at?: Maybe<Scalars['timestamptz']>,\n};\n\nexport type Posts_Max_Fields = {\n   __typename?: 'posts_max_fields',\n  author_id?: Maybe<Scalars['Int']>,\n  content?: Maybe<Scalars['String']>,\n  created_at?: Maybe<Scalars['timestamptz']>,\n  id?: Maybe<Scalars['Int']>,\n  title?: Maybe<Scalars['String']>,\n  topic_id?: Maybe<Scalars['Int']>,\n  type_id?: Maybe<Scalars['Int']>,\n  updated_at?: Maybe<Scalars['timestamptz']>,\n};\n\nexport type Posts_Max_Order_By = {\n  author_id?: Maybe<Order_By>,\n  content?: Maybe<Order_By>,\n  created_at?: Maybe<Order_By>,\n  id?: Maybe<Order_By>,\n  title?: Maybe<Order_By>,\n  topic_id?: Maybe<Order_By>,\n  type_id?: Maybe<Order_By>,\n  updated_at?: Maybe<Order_By>,\n};\n\nexport type Posts_Min_Fields = {\n   __typename?: 'posts_min_fields',\n  author_id?: Maybe<Scalars['Int']>,\n  content?: Maybe<Scalars['String']>,\n  created_at?: Maybe<Scalars['timestamptz']>,\n  id?: Maybe<Scalars['Int']>,\n  title?: Maybe<Scalars['String']>,\n  topic_id?: Maybe<Scalars['Int']>,\n  type_id?: Maybe<Scalars['Int']>,\n  updated_at?: Maybe<Scalars['timestamptz']>,\n};\n\nexport type Posts_Min_Order_By = {\n  author_id?: Maybe<Order_By>,\n  content?: Maybe<Order_By>,\n  created_at?: Maybe<Order_By>,\n  id?: Maybe<Order_By>,\n  title?: Maybe<Order_By>,\n  topic_id?: Maybe<Order_By>,\n  type_id?: Maybe<Order_By>,\n  updated_at?: Maybe<Order_By>,\n};\n\nexport type Posts_Mutation_Response = {\n   __typename?: 'posts_mutation_response',\n  affected_rows: Scalars['Int'],\n  returning: Array<Posts>,\n};\n\nexport type Posts_Obj_Rel_Insert_Input = {\n  data: Posts_Insert_Input,\n  on_conflict?: Maybe<Posts_On_Conflict>,\n};\n\nexport type Posts_On_Conflict = {\n  constraint: Posts_Constraint,\n  update_columns: Array<Posts_Update_Column>,\n  where?: Maybe<Posts_Bool_Exp>,\n};\n\nexport type Posts_Order_By = {\n  author_id?: Maybe<Order_By>,\n  comments_aggregate?: Maybe<Comments_Aggregate_Order_By>,\n  content?: Maybe<Order_By>,\n  created_at?: Maybe<Order_By>,\n  id?: Maybe<Order_By>,\n  onchain_link?: Maybe<Onchain_Links_Order_By>,\n  post_reactions_aggregate?: Maybe<Post_Reactions_Aggregate_Order_By>,\n  title?: Maybe<Order_By>,\n  topic?: Maybe<Post_Topics_Order_By>,\n  topic_id?: Maybe<Order_By>,\n  type?: Maybe<Post_Types_Order_By>,\n  type_id?: Maybe<Order_By>,\n  updated_at?: Maybe<Order_By>,\n};\n\nexport enum Posts_Select_Column {\n  AuthorId = 'author_id',\n  Content = 'content',\n  CreatedAt = 'created_at',\n  Id = 'id',\n  Title = 'title',\n  TopicId = 'topic_id',\n  TypeId = 'type_id',\n  UpdatedAt = 'updated_at'\n}\n\nexport type Posts_Set_Input = {\n  author_id?: Maybe<Scalars['Int']>,\n  content?: Maybe<Scalars['String']>,\n  created_at?: Maybe<Scalars['timestamptz']>,\n  id?: Maybe<Scalars['Int']>,\n  title?: Maybe<Scalars['String']>,\n  topic_id?: Maybe<Scalars['Int']>,\n  type_id?: Maybe<Scalars['Int']>,\n  updated_at?: Maybe<Scalars['timestamptz']>,\n};\n\nexport type Posts_Stddev_Fields = {\n   __typename?: 'posts_stddev_fields',\n  author_id?: Maybe<Scalars['Float']>,\n  id?: Maybe<Scalars['Float']>,\n  topic_id?: Maybe<Scalars['Float']>,\n  type_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Posts_Stddev_Order_By = {\n  author_id?: Maybe<Order_By>,\n  id?: Maybe<Order_By>,\n  topic_id?: Maybe<Order_By>,\n  type_id?: Maybe<Order_By>,\n};\n\nexport type Posts_Stddev_Pop_Fields = {\n   __typename?: 'posts_stddev_pop_fields',\n  author_id?: Maybe<Scalars['Float']>,\n  id?: Maybe<Scalars['Float']>,\n  topic_id?: Maybe<Scalars['Float']>,\n  type_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Posts_Stddev_Pop_Order_By = {\n  author_id?: Maybe<Order_By>,\n  id?: Maybe<Order_By>,\n  topic_id?: Maybe<Order_By>,\n  type_id?: Maybe<Order_By>,\n};\n\nexport type Posts_Stddev_Samp_Fields = {\n   __typename?: 'posts_stddev_samp_fields',\n  author_id?: Maybe<Scalars['Float']>,\n  id?: Maybe<Scalars['Float']>,\n  topic_id?: Maybe<Scalars['Float']>,\n  type_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Posts_Stddev_Samp_Order_By = {\n  author_id?: Maybe<Order_By>,\n  id?: Maybe<Order_By>,\n  topic_id?: Maybe<Order_By>,\n  type_id?: Maybe<Order_By>,\n};\n\nexport type Posts_Sum_Fields = {\n   __typename?: 'posts_sum_fields',\n  author_id?: Maybe<Scalars['Int']>,\n  id?: Maybe<Scalars['Int']>,\n  topic_id?: Maybe<Scalars['Int']>,\n  type_id?: Maybe<Scalars['Int']>,\n};\n\nexport type Posts_Sum_Order_By = {\n  author_id?: Maybe<Order_By>,\n  id?: Maybe<Order_By>,\n  topic_id?: Maybe<Order_By>,\n  type_id?: Maybe<Order_By>,\n};\n\nexport enum Posts_Update_Column {\n  AuthorId = 'author_id',\n  Content = 'content',\n  CreatedAt = 'created_at',\n  Id = 'id',\n  Title = 'title',\n  TopicId = 'topic_id',\n  TypeId = 'type_id',\n  UpdatedAt = 'updated_at'\n}\n\nexport type Posts_Var_Pop_Fields = {\n   __typename?: 'posts_var_pop_fields',\n  author_id?: Maybe<Scalars['Float']>,\n  id?: Maybe<Scalars['Float']>,\n  topic_id?: Maybe<Scalars['Float']>,\n  type_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Posts_Var_Pop_Order_By = {\n  author_id?: Maybe<Order_By>,\n  id?: Maybe<Order_By>,\n  topic_id?: Maybe<Order_By>,\n  type_id?: Maybe<Order_By>,\n};\n\nexport type Posts_Var_Samp_Fields = {\n   __typename?: 'posts_var_samp_fields',\n  author_id?: Maybe<Scalars['Float']>,\n  id?: Maybe<Scalars['Float']>,\n  topic_id?: Maybe<Scalars['Float']>,\n  type_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Posts_Var_Samp_Order_By = {\n  author_id?: Maybe<Order_By>,\n  id?: Maybe<Order_By>,\n  topic_id?: Maybe<Order_By>,\n  type_id?: Maybe<Order_By>,\n};\n\nexport type Posts_Variance_Fields = {\n   __typename?: 'posts_variance_fields',\n  author_id?: Maybe<Scalars['Float']>,\n  id?: Maybe<Scalars['Float']>,\n  topic_id?: Maybe<Scalars['Float']>,\n  type_id?: Maybe<Scalars['Float']>,\n};\n\nexport type Posts_Variance_Order_By = {\n  author_id?: Maybe<Order_By>,\n  id?: Maybe<Order_By>,\n  topic_id?: Maybe<Order_By>,\n  type_id?: Maybe<Order_By>,\n};\n\nexport type Preimage = Node & {\n   __typename?: 'Preimage',\n  author: Scalars['String'],\n  depositAmount: Scalars['String'],\n  hash: Scalars['String'],\n  id: Scalars['ID'],\n  metaDescription: Scalars['String'],\n  method: Scalars['String'],\n  motion?: Maybe<Motion>,\n  preimageArguments?: Maybe<Array<PreimageArgument>>,\n  preimageStatus?: Maybe<Array<PreimageStatus>>,\n  proposal?: Maybe<Proposal>,\n  referendum?: Maybe<Referendum>,\n  section: Scalars['String'],\n};\n\n\nexport type PreimagePreimageArgumentsArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<PreimageArgumentOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<PreimageArgumentWhereInput>\n};\n\n\nexport type PreimagePreimageStatusArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<PreimageStatusOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<PreimageStatusWhereInput>\n};\n\nexport type PreimageArgument = Node & {\n   __typename?: 'PreimageArgument',\n  id: Scalars['ID'],\n  name: Scalars['String'],\n  preimage: Preimage,\n  value: Scalars['String'],\n};\n\nexport type PreimageArgumentConnection = {\n   __typename?: 'PreimageArgumentConnection',\n  aggregate: AggregatePreimageArgument,\n  edges: Array<Maybe<PreimageArgumentEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type PreimageArgumentCreateInput = {\n  id?: Maybe<Scalars['ID']>,\n  name: Scalars['String'],\n  preimage: PreimageCreateOneWithoutPreimageArgumentsInput,\n  value: Scalars['String'],\n};\n\nexport type PreimageArgumentCreateManyWithoutPreimageInput = {\n  connect?: Maybe<Array<PreimageArgumentWhereUniqueInput>>,\n  create?: Maybe<Array<PreimageArgumentCreateWithoutPreimageInput>>,\n};\n\nexport type PreimageArgumentCreateWithoutPreimageInput = {\n  id?: Maybe<Scalars['ID']>,\n  name: Scalars['String'],\n  value: Scalars['String'],\n};\n\nexport type PreimageArgumentEdge = {\n   __typename?: 'PreimageArgumentEdge',\n  cursor: Scalars['String'],\n  node: PreimageArgument,\n};\n\nexport enum PreimageArgumentOrderByInput {\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  NameAsc = 'name_ASC',\n  NameDesc = 'name_DESC',\n  ValueAsc = 'value_ASC',\n  ValueDesc = 'value_DESC'\n}\n\nexport type PreimageArgumentPreviousValues = {\n   __typename?: 'PreimageArgumentPreviousValues',\n  id: Scalars['ID'],\n  name: Scalars['String'],\n  value: Scalars['String'],\n};\n\nexport type PreimageArgumentScalarWhereInput = {\n  AND?: Maybe<Array<PreimageArgumentScalarWhereInput>>,\n  NOT?: Maybe<Array<PreimageArgumentScalarWhereInput>>,\n  OR?: Maybe<Array<PreimageArgumentScalarWhereInput>>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  name?: Maybe<Scalars['String']>,\n  name_contains?: Maybe<Scalars['String']>,\n  name_ends_with?: Maybe<Scalars['String']>,\n  name_gt?: Maybe<Scalars['String']>,\n  name_gte?: Maybe<Scalars['String']>,\n  name_in?: Maybe<Array<Scalars['String']>>,\n  name_lt?: Maybe<Scalars['String']>,\n  name_lte?: Maybe<Scalars['String']>,\n  name_not?: Maybe<Scalars['String']>,\n  name_not_contains?: Maybe<Scalars['String']>,\n  name_not_ends_with?: Maybe<Scalars['String']>,\n  name_not_in?: Maybe<Array<Scalars['String']>>,\n  name_not_starts_with?: Maybe<Scalars['String']>,\n  name_starts_with?: Maybe<Scalars['String']>,\n  value?: Maybe<Scalars['String']>,\n  value_contains?: Maybe<Scalars['String']>,\n  value_ends_with?: Maybe<Scalars['String']>,\n  value_gt?: Maybe<Scalars['String']>,\n  value_gte?: Maybe<Scalars['String']>,\n  value_in?: Maybe<Array<Scalars['String']>>,\n  value_lt?: Maybe<Scalars['String']>,\n  value_lte?: Maybe<Scalars['String']>,\n  value_not?: Maybe<Scalars['String']>,\n  value_not_contains?: Maybe<Scalars['String']>,\n  value_not_ends_with?: Maybe<Scalars['String']>,\n  value_not_in?: Maybe<Array<Scalars['String']>>,\n  value_not_starts_with?: Maybe<Scalars['String']>,\n  value_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageArgumentSubscriptionPayload = {\n   __typename?: 'PreimageArgumentSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<PreimageArgument>,\n  previousValues?: Maybe<PreimageArgumentPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type PreimageArgumentSubscriptionWhereInput = {\n  AND?: Maybe<Array<PreimageArgumentSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<PreimageArgumentSubscriptionWhereInput>>,\n  OR?: Maybe<Array<PreimageArgumentSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<PreimageArgumentWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type PreimageArgumentUpdateInput = {\n  name?: Maybe<Scalars['String']>,\n  preimage?: Maybe<PreimageUpdateOneRequiredWithoutPreimageArgumentsInput>,\n  value?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageArgumentUpdateManyDataInput = {\n  name?: Maybe<Scalars['String']>,\n  value?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageArgumentUpdateManyMutationInput = {\n  name?: Maybe<Scalars['String']>,\n  value?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageArgumentUpdateManyWithoutPreimageInput = {\n  connect?: Maybe<Array<PreimageArgumentWhereUniqueInput>>,\n  create?: Maybe<Array<PreimageArgumentCreateWithoutPreimageInput>>,\n  delete?: Maybe<Array<PreimageArgumentWhereUniqueInput>>,\n  deleteMany?: Maybe<Array<PreimageArgumentScalarWhereInput>>,\n  disconnect?: Maybe<Array<PreimageArgumentWhereUniqueInput>>,\n  set?: Maybe<Array<PreimageArgumentWhereUniqueInput>>,\n  update?: Maybe<Array<PreimageArgumentUpdateWithWhereUniqueWithoutPreimageInput>>,\n  updateMany?: Maybe<Array<PreimageArgumentUpdateManyWithWhereNestedInput>>,\n  upsert?: Maybe<Array<PreimageArgumentUpsertWithWhereUniqueWithoutPreimageInput>>,\n};\n\nexport type PreimageArgumentUpdateManyWithWhereNestedInput = {\n  data: PreimageArgumentUpdateManyDataInput,\n  where: PreimageArgumentScalarWhereInput,\n};\n\nexport type PreimageArgumentUpdateWithoutPreimageDataInput = {\n  name?: Maybe<Scalars['String']>,\n  value?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageArgumentUpdateWithWhereUniqueWithoutPreimageInput = {\n  data: PreimageArgumentUpdateWithoutPreimageDataInput,\n  where: PreimageArgumentWhereUniqueInput,\n};\n\nexport type PreimageArgumentUpsertWithWhereUniqueWithoutPreimageInput = {\n  create: PreimageArgumentCreateWithoutPreimageInput,\n  update: PreimageArgumentUpdateWithoutPreimageDataInput,\n  where: PreimageArgumentWhereUniqueInput,\n};\n\nexport type PreimageArgumentWhereInput = {\n  AND?: Maybe<Array<PreimageArgumentWhereInput>>,\n  NOT?: Maybe<Array<PreimageArgumentWhereInput>>,\n  OR?: Maybe<Array<PreimageArgumentWhereInput>>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  name?: Maybe<Scalars['String']>,\n  name_contains?: Maybe<Scalars['String']>,\n  name_ends_with?: Maybe<Scalars['String']>,\n  name_gt?: Maybe<Scalars['String']>,\n  name_gte?: Maybe<Scalars['String']>,\n  name_in?: Maybe<Array<Scalars['String']>>,\n  name_lt?: Maybe<Scalars['String']>,\n  name_lte?: Maybe<Scalars['String']>,\n  name_not?: Maybe<Scalars['String']>,\n  name_not_contains?: Maybe<Scalars['String']>,\n  name_not_ends_with?: Maybe<Scalars['String']>,\n  name_not_in?: Maybe<Array<Scalars['String']>>,\n  name_not_starts_with?: Maybe<Scalars['String']>,\n  name_starts_with?: Maybe<Scalars['String']>,\n  preimage?: Maybe<PreimageWhereInput>,\n  value?: Maybe<Scalars['String']>,\n  value_contains?: Maybe<Scalars['String']>,\n  value_ends_with?: Maybe<Scalars['String']>,\n  value_gt?: Maybe<Scalars['String']>,\n  value_gte?: Maybe<Scalars['String']>,\n  value_in?: Maybe<Array<Scalars['String']>>,\n  value_lt?: Maybe<Scalars['String']>,\n  value_lte?: Maybe<Scalars['String']>,\n  value_not?: Maybe<Scalars['String']>,\n  value_not_contains?: Maybe<Scalars['String']>,\n  value_not_ends_with?: Maybe<Scalars['String']>,\n  value_not_in?: Maybe<Array<Scalars['String']>>,\n  value_not_starts_with?: Maybe<Scalars['String']>,\n  value_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageArgumentWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type PreimageConnection = {\n   __typename?: 'PreimageConnection',\n  aggregate: AggregatePreimage,\n  edges: Array<Maybe<PreimageEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type PreimageCreateInput = {\n  author: Scalars['String'],\n  depositAmount: Scalars['String'],\n  hash: Scalars['String'],\n  id?: Maybe<Scalars['ID']>,\n  metaDescription: Scalars['String'],\n  method: Scalars['String'],\n  motion?: Maybe<MotionCreateOneWithoutPreimageInput>,\n  preimageArguments?: Maybe<PreimageArgumentCreateManyWithoutPreimageInput>,\n  preimageStatus?: Maybe<PreimageStatusCreateManyWithoutPreimageInput>,\n  proposal?: Maybe<ProposalCreateOneWithoutPreimageInput>,\n  referendum?: Maybe<ReferendumCreateOneWithoutPreimageInput>,\n  section: Scalars['String'],\n};\n\nexport type PreimageCreateOneWithoutMotionInput = {\n  connect?: Maybe<PreimageWhereUniqueInput>,\n  create?: Maybe<PreimageCreateWithoutMotionInput>,\n};\n\nexport type PreimageCreateOneWithoutPreimageArgumentsInput = {\n  connect?: Maybe<PreimageWhereUniqueInput>,\n  create?: Maybe<PreimageCreateWithoutPreimageArgumentsInput>,\n};\n\nexport type PreimageCreateOneWithoutPreimageStatusInput = {\n  connect?: Maybe<PreimageWhereUniqueInput>,\n  create?: Maybe<PreimageCreateWithoutPreimageStatusInput>,\n};\n\nexport type PreimageCreateOneWithoutProposalInput = {\n  connect?: Maybe<PreimageWhereUniqueInput>,\n  create?: Maybe<PreimageCreateWithoutProposalInput>,\n};\n\nexport type PreimageCreateOneWithoutReferendumInput = {\n  connect?: Maybe<PreimageWhereUniqueInput>,\n  create?: Maybe<PreimageCreateWithoutReferendumInput>,\n};\n\nexport type PreimageCreateWithoutMotionInput = {\n  author: Scalars['String'],\n  depositAmount: Scalars['String'],\n  hash: Scalars['String'],\n  id?: Maybe<Scalars['ID']>,\n  metaDescription: Scalars['String'],\n  method: Scalars['String'],\n  preimageArguments?: Maybe<PreimageArgumentCreateManyWithoutPreimageInput>,\n  preimageStatus?: Maybe<PreimageStatusCreateManyWithoutPreimageInput>,\n  proposal?: Maybe<ProposalCreateOneWithoutPreimageInput>,\n  referendum?: Maybe<ReferendumCreateOneWithoutPreimageInput>,\n  section: Scalars['String'],\n};\n\nexport type PreimageCreateWithoutPreimageArgumentsInput = {\n  author: Scalars['String'],\n  depositAmount: Scalars['String'],\n  hash: Scalars['String'],\n  id?: Maybe<Scalars['ID']>,\n  metaDescription: Scalars['String'],\n  method: Scalars['String'],\n  motion?: Maybe<MotionCreateOneWithoutPreimageInput>,\n  preimageStatus?: Maybe<PreimageStatusCreateManyWithoutPreimageInput>,\n  proposal?: Maybe<ProposalCreateOneWithoutPreimageInput>,\n  referendum?: Maybe<ReferendumCreateOneWithoutPreimageInput>,\n  section: Scalars['String'],\n};\n\nexport type PreimageCreateWithoutPreimageStatusInput = {\n  author: Scalars['String'],\n  depositAmount: Scalars['String'],\n  hash: Scalars['String'],\n  id?: Maybe<Scalars['ID']>,\n  metaDescription: Scalars['String'],\n  method: Scalars['String'],\n  motion?: Maybe<MotionCreateOneWithoutPreimageInput>,\n  preimageArguments?: Maybe<PreimageArgumentCreateManyWithoutPreimageInput>,\n  proposal?: Maybe<ProposalCreateOneWithoutPreimageInput>,\n  referendum?: Maybe<ReferendumCreateOneWithoutPreimageInput>,\n  section: Scalars['String'],\n};\n\nexport type PreimageCreateWithoutProposalInput = {\n  author: Scalars['String'],\n  depositAmount: Scalars['String'],\n  hash: Scalars['String'],\n  id?: Maybe<Scalars['ID']>,\n  metaDescription: Scalars['String'],\n  method: Scalars['String'],\n  motion?: Maybe<MotionCreateOneWithoutPreimageInput>,\n  preimageArguments?: Maybe<PreimageArgumentCreateManyWithoutPreimageInput>,\n  preimageStatus?: Maybe<PreimageStatusCreateManyWithoutPreimageInput>,\n  referendum?: Maybe<ReferendumCreateOneWithoutPreimageInput>,\n  section: Scalars['String'],\n};\n\nexport type PreimageCreateWithoutReferendumInput = {\n  author: Scalars['String'],\n  depositAmount: Scalars['String'],\n  hash: Scalars['String'],\n  id?: Maybe<Scalars['ID']>,\n  metaDescription: Scalars['String'],\n  method: Scalars['String'],\n  motion?: Maybe<MotionCreateOneWithoutPreimageInput>,\n  preimageArguments?: Maybe<PreimageArgumentCreateManyWithoutPreimageInput>,\n  preimageStatus?: Maybe<PreimageStatusCreateManyWithoutPreimageInput>,\n  proposal?: Maybe<ProposalCreateOneWithoutPreimageInput>,\n  section: Scalars['String'],\n};\n\nexport type PreimageEdge = {\n   __typename?: 'PreimageEdge',\n  cursor: Scalars['String'],\n  node: Preimage,\n};\n\nexport enum PreimageOrderByInput {\n  AuthorAsc = 'author_ASC',\n  AuthorDesc = 'author_DESC',\n  DepositAmountAsc = 'depositAmount_ASC',\n  DepositAmountDesc = 'depositAmount_DESC',\n  HashAsc = 'hash_ASC',\n  HashDesc = 'hash_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  MetaDescriptionAsc = 'metaDescription_ASC',\n  MetaDescriptionDesc = 'metaDescription_DESC',\n  MethodAsc = 'method_ASC',\n  MethodDesc = 'method_DESC',\n  SectionAsc = 'section_ASC',\n  SectionDesc = 'section_DESC'\n}\n\nexport type PreimagePreviousValues = {\n   __typename?: 'PreimagePreviousValues',\n  author: Scalars['String'],\n  depositAmount: Scalars['String'],\n  hash: Scalars['String'],\n  id: Scalars['ID'],\n  metaDescription: Scalars['String'],\n  method: Scalars['String'],\n  section: Scalars['String'],\n};\n\nexport type PreimageStatus = Node & {\n   __typename?: 'PreimageStatus',\n  blockNumber: BlockNumber,\n  id: Scalars['ID'],\n  preimage: Preimage,\n  status: Scalars['String'],\n};\n\nexport type PreimageStatusConnection = {\n   __typename?: 'PreimageStatusConnection',\n  aggregate: AggregatePreimageStatus,\n  edges: Array<Maybe<PreimageStatusEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type PreimageStatusCreateInput = {\n  blockNumber: BlockNumberCreateOneInput,\n  id?: Maybe<Scalars['ID']>,\n  preimage: PreimageCreateOneWithoutPreimageStatusInput,\n  status: Scalars['String'],\n};\n\nexport type PreimageStatusCreateManyWithoutPreimageInput = {\n  connect?: Maybe<Array<PreimageStatusWhereUniqueInput>>,\n  create?: Maybe<Array<PreimageStatusCreateWithoutPreimageInput>>,\n};\n\nexport type PreimageStatusCreateWithoutPreimageInput = {\n  blockNumber: BlockNumberCreateOneInput,\n  id?: Maybe<Scalars['ID']>,\n  status: Scalars['String'],\n};\n\nexport type PreimageStatusEdge = {\n   __typename?: 'PreimageStatusEdge',\n  cursor: Scalars['String'],\n  node: PreimageStatus,\n};\n\nexport enum PreimageStatusOrderByInput {\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  StatusAsc = 'status_ASC',\n  StatusDesc = 'status_DESC'\n}\n\nexport type PreimageStatusPreviousValues = {\n   __typename?: 'PreimageStatusPreviousValues',\n  id: Scalars['ID'],\n  status: Scalars['String'],\n};\n\nexport type PreimageStatusScalarWhereInput = {\n  AND?: Maybe<Array<PreimageStatusScalarWhereInput>>,\n  NOT?: Maybe<Array<PreimageStatusScalarWhereInput>>,\n  OR?: Maybe<Array<PreimageStatusScalarWhereInput>>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  status?: Maybe<Scalars['String']>,\n  status_contains?: Maybe<Scalars['String']>,\n  status_ends_with?: Maybe<Scalars['String']>,\n  status_gt?: Maybe<Scalars['String']>,\n  status_gte?: Maybe<Scalars['String']>,\n  status_in?: Maybe<Array<Scalars['String']>>,\n  status_lt?: Maybe<Scalars['String']>,\n  status_lte?: Maybe<Scalars['String']>,\n  status_not?: Maybe<Scalars['String']>,\n  status_not_contains?: Maybe<Scalars['String']>,\n  status_not_ends_with?: Maybe<Scalars['String']>,\n  status_not_in?: Maybe<Array<Scalars['String']>>,\n  status_not_starts_with?: Maybe<Scalars['String']>,\n  status_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageStatusSubscriptionPayload = {\n   __typename?: 'PreimageStatusSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<PreimageStatus>,\n  previousValues?: Maybe<PreimageStatusPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type PreimageStatusSubscriptionWhereInput = {\n  AND?: Maybe<Array<PreimageStatusSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<PreimageStatusSubscriptionWhereInput>>,\n  OR?: Maybe<Array<PreimageStatusSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<PreimageStatusWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type PreimageStatusUpdateInput = {\n  blockNumber?: Maybe<BlockNumberUpdateOneRequiredInput>,\n  preimage?: Maybe<PreimageUpdateOneRequiredWithoutPreimageStatusInput>,\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageStatusUpdateManyDataInput = {\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageStatusUpdateManyMutationInput = {\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageStatusUpdateManyWithoutPreimageInput = {\n  connect?: Maybe<Array<PreimageStatusWhereUniqueInput>>,\n  create?: Maybe<Array<PreimageStatusCreateWithoutPreimageInput>>,\n  delete?: Maybe<Array<PreimageStatusWhereUniqueInput>>,\n  deleteMany?: Maybe<Array<PreimageStatusScalarWhereInput>>,\n  disconnect?: Maybe<Array<PreimageStatusWhereUniqueInput>>,\n  set?: Maybe<Array<PreimageStatusWhereUniqueInput>>,\n  update?: Maybe<Array<PreimageStatusUpdateWithWhereUniqueWithoutPreimageInput>>,\n  updateMany?: Maybe<Array<PreimageStatusUpdateManyWithWhereNestedInput>>,\n  upsert?: Maybe<Array<PreimageStatusUpsertWithWhereUniqueWithoutPreimageInput>>,\n};\n\nexport type PreimageStatusUpdateManyWithWhereNestedInput = {\n  data: PreimageStatusUpdateManyDataInput,\n  where: PreimageStatusScalarWhereInput,\n};\n\nexport type PreimageStatusUpdateWithoutPreimageDataInput = {\n  blockNumber?: Maybe<BlockNumberUpdateOneRequiredInput>,\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageStatusUpdateWithWhereUniqueWithoutPreimageInput = {\n  data: PreimageStatusUpdateWithoutPreimageDataInput,\n  where: PreimageStatusWhereUniqueInput,\n};\n\nexport type PreimageStatusUpsertWithWhereUniqueWithoutPreimageInput = {\n  create: PreimageStatusCreateWithoutPreimageInput,\n  update: PreimageStatusUpdateWithoutPreimageDataInput,\n  where: PreimageStatusWhereUniqueInput,\n};\n\nexport type PreimageStatusWhereInput = {\n  AND?: Maybe<Array<PreimageStatusWhereInput>>,\n  NOT?: Maybe<Array<PreimageStatusWhereInput>>,\n  OR?: Maybe<Array<PreimageStatusWhereInput>>,\n  blockNumber?: Maybe<BlockNumberWhereInput>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  preimage?: Maybe<PreimageWhereInput>,\n  status?: Maybe<Scalars['String']>,\n  status_contains?: Maybe<Scalars['String']>,\n  status_ends_with?: Maybe<Scalars['String']>,\n  status_gt?: Maybe<Scalars['String']>,\n  status_gte?: Maybe<Scalars['String']>,\n  status_in?: Maybe<Array<Scalars['String']>>,\n  status_lt?: Maybe<Scalars['String']>,\n  status_lte?: Maybe<Scalars['String']>,\n  status_not?: Maybe<Scalars['String']>,\n  status_not_contains?: Maybe<Scalars['String']>,\n  status_not_ends_with?: Maybe<Scalars['String']>,\n  status_not_in?: Maybe<Array<Scalars['String']>>,\n  status_not_starts_with?: Maybe<Scalars['String']>,\n  status_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageStatusWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type PreimageSubscriptionPayload = {\n   __typename?: 'PreimageSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<Preimage>,\n  previousValues?: Maybe<PreimagePreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type PreimageSubscriptionWhereInput = {\n  AND?: Maybe<Array<PreimageSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<PreimageSubscriptionWhereInput>>,\n  OR?: Maybe<Array<PreimageSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<PreimageWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type PreimageUpdateInput = {\n  author?: Maybe<Scalars['String']>,\n  depositAmount?: Maybe<Scalars['String']>,\n  hash?: Maybe<Scalars['String']>,\n  metaDescription?: Maybe<Scalars['String']>,\n  method?: Maybe<Scalars['String']>,\n  motion?: Maybe<MotionUpdateOneWithoutPreimageInput>,\n  preimageArguments?: Maybe<PreimageArgumentUpdateManyWithoutPreimageInput>,\n  preimageStatus?: Maybe<PreimageStatusUpdateManyWithoutPreimageInput>,\n  proposal?: Maybe<ProposalUpdateOneWithoutPreimageInput>,\n  referendum?: Maybe<ReferendumUpdateOneWithoutPreimageInput>,\n  section?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageUpdateManyMutationInput = {\n  author?: Maybe<Scalars['String']>,\n  depositAmount?: Maybe<Scalars['String']>,\n  hash?: Maybe<Scalars['String']>,\n  metaDescription?: Maybe<Scalars['String']>,\n  method?: Maybe<Scalars['String']>,\n  section?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageUpdateOneRequiredWithoutPreimageArgumentsInput = {\n  connect?: Maybe<PreimageWhereUniqueInput>,\n  create?: Maybe<PreimageCreateWithoutPreimageArgumentsInput>,\n  update?: Maybe<PreimageUpdateWithoutPreimageArgumentsDataInput>,\n  upsert?: Maybe<PreimageUpsertWithoutPreimageArgumentsInput>,\n};\n\nexport type PreimageUpdateOneRequiredWithoutPreimageStatusInput = {\n  connect?: Maybe<PreimageWhereUniqueInput>,\n  create?: Maybe<PreimageCreateWithoutPreimageStatusInput>,\n  update?: Maybe<PreimageUpdateWithoutPreimageStatusDataInput>,\n  upsert?: Maybe<PreimageUpsertWithoutPreimageStatusInput>,\n};\n\nexport type PreimageUpdateOneWithoutMotionInput = {\n  connect?: Maybe<PreimageWhereUniqueInput>,\n  create?: Maybe<PreimageCreateWithoutMotionInput>,\n  delete?: Maybe<Scalars['Boolean']>,\n  disconnect?: Maybe<Scalars['Boolean']>,\n  update?: Maybe<PreimageUpdateWithoutMotionDataInput>,\n  upsert?: Maybe<PreimageUpsertWithoutMotionInput>,\n};\n\nexport type PreimageUpdateOneWithoutProposalInput = {\n  connect?: Maybe<PreimageWhereUniqueInput>,\n  create?: Maybe<PreimageCreateWithoutProposalInput>,\n  delete?: Maybe<Scalars['Boolean']>,\n  disconnect?: Maybe<Scalars['Boolean']>,\n  update?: Maybe<PreimageUpdateWithoutProposalDataInput>,\n  upsert?: Maybe<PreimageUpsertWithoutProposalInput>,\n};\n\nexport type PreimageUpdateOneWithoutReferendumInput = {\n  connect?: Maybe<PreimageWhereUniqueInput>,\n  create?: Maybe<PreimageCreateWithoutReferendumInput>,\n  delete?: Maybe<Scalars['Boolean']>,\n  disconnect?: Maybe<Scalars['Boolean']>,\n  update?: Maybe<PreimageUpdateWithoutReferendumDataInput>,\n  upsert?: Maybe<PreimageUpsertWithoutReferendumInput>,\n};\n\nexport type PreimageUpdateWithoutMotionDataInput = {\n  author?: Maybe<Scalars['String']>,\n  depositAmount?: Maybe<Scalars['String']>,\n  hash?: Maybe<Scalars['String']>,\n  metaDescription?: Maybe<Scalars['String']>,\n  method?: Maybe<Scalars['String']>,\n  preimageArguments?: Maybe<PreimageArgumentUpdateManyWithoutPreimageInput>,\n  preimageStatus?: Maybe<PreimageStatusUpdateManyWithoutPreimageInput>,\n  proposal?: Maybe<ProposalUpdateOneWithoutPreimageInput>,\n  referendum?: Maybe<ReferendumUpdateOneWithoutPreimageInput>,\n  section?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageUpdateWithoutPreimageArgumentsDataInput = {\n  author?: Maybe<Scalars['String']>,\n  depositAmount?: Maybe<Scalars['String']>,\n  hash?: Maybe<Scalars['String']>,\n  metaDescription?: Maybe<Scalars['String']>,\n  method?: Maybe<Scalars['String']>,\n  motion?: Maybe<MotionUpdateOneWithoutPreimageInput>,\n  preimageStatus?: Maybe<PreimageStatusUpdateManyWithoutPreimageInput>,\n  proposal?: Maybe<ProposalUpdateOneWithoutPreimageInput>,\n  referendum?: Maybe<ReferendumUpdateOneWithoutPreimageInput>,\n  section?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageUpdateWithoutPreimageStatusDataInput = {\n  author?: Maybe<Scalars['String']>,\n  depositAmount?: Maybe<Scalars['String']>,\n  hash?: Maybe<Scalars['String']>,\n  metaDescription?: Maybe<Scalars['String']>,\n  method?: Maybe<Scalars['String']>,\n  motion?: Maybe<MotionUpdateOneWithoutPreimageInput>,\n  preimageArguments?: Maybe<PreimageArgumentUpdateManyWithoutPreimageInput>,\n  proposal?: Maybe<ProposalUpdateOneWithoutPreimageInput>,\n  referendum?: Maybe<ReferendumUpdateOneWithoutPreimageInput>,\n  section?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageUpdateWithoutProposalDataInput = {\n  author?: Maybe<Scalars['String']>,\n  depositAmount?: Maybe<Scalars['String']>,\n  hash?: Maybe<Scalars['String']>,\n  metaDescription?: Maybe<Scalars['String']>,\n  method?: Maybe<Scalars['String']>,\n  motion?: Maybe<MotionUpdateOneWithoutPreimageInput>,\n  preimageArguments?: Maybe<PreimageArgumentUpdateManyWithoutPreimageInput>,\n  preimageStatus?: Maybe<PreimageStatusUpdateManyWithoutPreimageInput>,\n  referendum?: Maybe<ReferendumUpdateOneWithoutPreimageInput>,\n  section?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageUpdateWithoutReferendumDataInput = {\n  author?: Maybe<Scalars['String']>,\n  depositAmount?: Maybe<Scalars['String']>,\n  hash?: Maybe<Scalars['String']>,\n  metaDescription?: Maybe<Scalars['String']>,\n  method?: Maybe<Scalars['String']>,\n  motion?: Maybe<MotionUpdateOneWithoutPreimageInput>,\n  preimageArguments?: Maybe<PreimageArgumentUpdateManyWithoutPreimageInput>,\n  preimageStatus?: Maybe<PreimageStatusUpdateManyWithoutPreimageInput>,\n  proposal?: Maybe<ProposalUpdateOneWithoutPreimageInput>,\n  section?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageUpsertWithoutMotionInput = {\n  create: PreimageCreateWithoutMotionInput,\n  update: PreimageUpdateWithoutMotionDataInput,\n};\n\nexport type PreimageUpsertWithoutPreimageArgumentsInput = {\n  create: PreimageCreateWithoutPreimageArgumentsInput,\n  update: PreimageUpdateWithoutPreimageArgumentsDataInput,\n};\n\nexport type PreimageUpsertWithoutPreimageStatusInput = {\n  create: PreimageCreateWithoutPreimageStatusInput,\n  update: PreimageUpdateWithoutPreimageStatusDataInput,\n};\n\nexport type PreimageUpsertWithoutProposalInput = {\n  create: PreimageCreateWithoutProposalInput,\n  update: PreimageUpdateWithoutProposalDataInput,\n};\n\nexport type PreimageUpsertWithoutReferendumInput = {\n  create: PreimageCreateWithoutReferendumInput,\n  update: PreimageUpdateWithoutReferendumDataInput,\n};\n\nexport type PreimageWhereInput = {\n  AND?: Maybe<Array<PreimageWhereInput>>,\n  NOT?: Maybe<Array<PreimageWhereInput>>,\n  OR?: Maybe<Array<PreimageWhereInput>>,\n  author?: Maybe<Scalars['String']>,\n  author_contains?: Maybe<Scalars['String']>,\n  author_ends_with?: Maybe<Scalars['String']>,\n  author_gt?: Maybe<Scalars['String']>,\n  author_gte?: Maybe<Scalars['String']>,\n  author_in?: Maybe<Array<Scalars['String']>>,\n  author_lt?: Maybe<Scalars['String']>,\n  author_lte?: Maybe<Scalars['String']>,\n  author_not?: Maybe<Scalars['String']>,\n  author_not_contains?: Maybe<Scalars['String']>,\n  author_not_ends_with?: Maybe<Scalars['String']>,\n  author_not_in?: Maybe<Array<Scalars['String']>>,\n  author_not_starts_with?: Maybe<Scalars['String']>,\n  author_starts_with?: Maybe<Scalars['String']>,\n  depositAmount?: Maybe<Scalars['String']>,\n  depositAmount_contains?: Maybe<Scalars['String']>,\n  depositAmount_ends_with?: Maybe<Scalars['String']>,\n  depositAmount_gt?: Maybe<Scalars['String']>,\n  depositAmount_gte?: Maybe<Scalars['String']>,\n  depositAmount_in?: Maybe<Array<Scalars['String']>>,\n  depositAmount_lt?: Maybe<Scalars['String']>,\n  depositAmount_lte?: Maybe<Scalars['String']>,\n  depositAmount_not?: Maybe<Scalars['String']>,\n  depositAmount_not_contains?: Maybe<Scalars['String']>,\n  depositAmount_not_ends_with?: Maybe<Scalars['String']>,\n  depositAmount_not_in?: Maybe<Array<Scalars['String']>>,\n  depositAmount_not_starts_with?: Maybe<Scalars['String']>,\n  depositAmount_starts_with?: Maybe<Scalars['String']>,\n  hash?: Maybe<Scalars['String']>,\n  hash_contains?: Maybe<Scalars['String']>,\n  hash_ends_with?: Maybe<Scalars['String']>,\n  hash_gt?: Maybe<Scalars['String']>,\n  hash_gte?: Maybe<Scalars['String']>,\n  hash_in?: Maybe<Array<Scalars['String']>>,\n  hash_lt?: Maybe<Scalars['String']>,\n  hash_lte?: Maybe<Scalars['String']>,\n  hash_not?: Maybe<Scalars['String']>,\n  hash_not_contains?: Maybe<Scalars['String']>,\n  hash_not_ends_with?: Maybe<Scalars['String']>,\n  hash_not_in?: Maybe<Array<Scalars['String']>>,\n  hash_not_starts_with?: Maybe<Scalars['String']>,\n  hash_starts_with?: Maybe<Scalars['String']>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  metaDescription?: Maybe<Scalars['String']>,\n  metaDescription_contains?: Maybe<Scalars['String']>,\n  metaDescription_ends_with?: Maybe<Scalars['String']>,\n  metaDescription_gt?: Maybe<Scalars['String']>,\n  metaDescription_gte?: Maybe<Scalars['String']>,\n  metaDescription_in?: Maybe<Array<Scalars['String']>>,\n  metaDescription_lt?: Maybe<Scalars['String']>,\n  metaDescription_lte?: Maybe<Scalars['String']>,\n  metaDescription_not?: Maybe<Scalars['String']>,\n  metaDescription_not_contains?: Maybe<Scalars['String']>,\n  metaDescription_not_ends_with?: Maybe<Scalars['String']>,\n  metaDescription_not_in?: Maybe<Array<Scalars['String']>>,\n  metaDescription_not_starts_with?: Maybe<Scalars['String']>,\n  metaDescription_starts_with?: Maybe<Scalars['String']>,\n  method?: Maybe<Scalars['String']>,\n  method_contains?: Maybe<Scalars['String']>,\n  method_ends_with?: Maybe<Scalars['String']>,\n  method_gt?: Maybe<Scalars['String']>,\n  method_gte?: Maybe<Scalars['String']>,\n  method_in?: Maybe<Array<Scalars['String']>>,\n  method_lt?: Maybe<Scalars['String']>,\n  method_lte?: Maybe<Scalars['String']>,\n  method_not?: Maybe<Scalars['String']>,\n  method_not_contains?: Maybe<Scalars['String']>,\n  method_not_ends_with?: Maybe<Scalars['String']>,\n  method_not_in?: Maybe<Array<Scalars['String']>>,\n  method_not_starts_with?: Maybe<Scalars['String']>,\n  method_starts_with?: Maybe<Scalars['String']>,\n  motion?: Maybe<MotionWhereInput>,\n  preimageArguments_every?: Maybe<PreimageArgumentWhereInput>,\n  preimageArguments_none?: Maybe<PreimageArgumentWhereInput>,\n  preimageArguments_some?: Maybe<PreimageArgumentWhereInput>,\n  preimageStatus_every?: Maybe<PreimageStatusWhereInput>,\n  preimageStatus_none?: Maybe<PreimageStatusWhereInput>,\n  preimageStatus_some?: Maybe<PreimageStatusWhereInput>,\n  proposal?: Maybe<ProposalWhereInput>,\n  referendum?: Maybe<ReferendumWhereInput>,\n  section?: Maybe<Scalars['String']>,\n  section_contains?: Maybe<Scalars['String']>,\n  section_ends_with?: Maybe<Scalars['String']>,\n  section_gt?: Maybe<Scalars['String']>,\n  section_gte?: Maybe<Scalars['String']>,\n  section_in?: Maybe<Array<Scalars['String']>>,\n  section_lt?: Maybe<Scalars['String']>,\n  section_lte?: Maybe<Scalars['String']>,\n  section_not?: Maybe<Scalars['String']>,\n  section_not_contains?: Maybe<Scalars['String']>,\n  section_not_ends_with?: Maybe<Scalars['String']>,\n  section_not_in?: Maybe<Array<Scalars['String']>>,\n  section_not_starts_with?: Maybe<Scalars['String']>,\n  section_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type PreimageWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport enum PrismaDatabase {\n  Default = 'default'\n}\n\nexport type Proposal = {\n   __typename?: 'Proposal',\n  author: Scalars['String'],\n  depositAmount: Scalars['String'],\n  id: Scalars['Int'],\n  preimage?: Maybe<Preimage>,\n  preimageHash: Scalars['String'],\n  proposalId: Scalars['Int'],\n  proposalStatus?: Maybe<Array<ProposalStatus>>,\n};\n\n\nexport type ProposalProposalStatusArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<ProposalStatusOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<ProposalStatusWhereInput>\n};\n\nexport type ProposalConnection = {\n   __typename?: 'ProposalConnection',\n  aggregate: AggregateProposal,\n  edges: Array<Maybe<ProposalEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type ProposalCreateInput = {\n  author: Scalars['String'],\n  depositAmount: Scalars['String'],\n  preimage?: Maybe<PreimageCreateOneWithoutProposalInput>,\n  preimageHash: Scalars['String'],\n  proposalId: Scalars['Int'],\n  proposalStatus?: Maybe<ProposalStatusCreateManyWithoutProposalInput>,\n};\n\nexport type ProposalCreateOneWithoutPreimageInput = {\n  connect?: Maybe<ProposalWhereUniqueInput>,\n  create?: Maybe<ProposalCreateWithoutPreimageInput>,\n};\n\nexport type ProposalCreateOneWithoutProposalStatusInput = {\n  connect?: Maybe<ProposalWhereUniqueInput>,\n  create?: Maybe<ProposalCreateWithoutProposalStatusInput>,\n};\n\nexport type ProposalCreateWithoutPreimageInput = {\n  author: Scalars['String'],\n  depositAmount: Scalars['String'],\n  preimageHash: Scalars['String'],\n  proposalId: Scalars['Int'],\n  proposalStatus?: Maybe<ProposalStatusCreateManyWithoutProposalInput>,\n};\n\nexport type ProposalCreateWithoutProposalStatusInput = {\n  author: Scalars['String'],\n  depositAmount: Scalars['String'],\n  preimage?: Maybe<PreimageCreateOneWithoutProposalInput>,\n  preimageHash: Scalars['String'],\n  proposalId: Scalars['Int'],\n};\n\nexport type ProposalEdge = {\n   __typename?: 'ProposalEdge',\n  cursor: Scalars['String'],\n  node: Proposal,\n};\n\nexport enum ProposalOrderByInput {\n  AuthorAsc = 'author_ASC',\n  AuthorDesc = 'author_DESC',\n  DepositAmountAsc = 'depositAmount_ASC',\n  DepositAmountDesc = 'depositAmount_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  PreimageHashAsc = 'preimageHash_ASC',\n  PreimageHashDesc = 'preimageHash_DESC',\n  ProposalIdAsc = 'proposalId_ASC',\n  ProposalIdDesc = 'proposalId_DESC'\n}\n\nexport type ProposalPreviousValues = {\n   __typename?: 'ProposalPreviousValues',\n  author: Scalars['String'],\n  depositAmount: Scalars['String'],\n  id: Scalars['Int'],\n  preimageHash: Scalars['String'],\n  proposalId: Scalars['Int'],\n};\n\nexport type ProposalStatus = Node & {\n   __typename?: 'ProposalStatus',\n  blockNumber: BlockNumber,\n  id: Scalars['ID'],\n  proposal: Proposal,\n  status: Scalars['String'],\n};\n\nexport type ProposalStatusConnection = {\n   __typename?: 'ProposalStatusConnection',\n  aggregate: AggregateProposalStatus,\n  edges: Array<Maybe<ProposalStatusEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type ProposalStatusCreateInput = {\n  blockNumber: BlockNumberCreateOneInput,\n  id?: Maybe<Scalars['ID']>,\n  proposal: ProposalCreateOneWithoutProposalStatusInput,\n  status: Scalars['String'],\n};\n\nexport type ProposalStatusCreateManyWithoutProposalInput = {\n  connect?: Maybe<Array<ProposalStatusWhereUniqueInput>>,\n  create?: Maybe<Array<ProposalStatusCreateWithoutProposalInput>>,\n};\n\nexport type ProposalStatusCreateWithoutProposalInput = {\n  blockNumber: BlockNumberCreateOneInput,\n  id?: Maybe<Scalars['ID']>,\n  status: Scalars['String'],\n};\n\nexport type ProposalStatusEdge = {\n   __typename?: 'ProposalStatusEdge',\n  cursor: Scalars['String'],\n  node: ProposalStatus,\n};\n\nexport enum ProposalStatusOrderByInput {\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  StatusAsc = 'status_ASC',\n  StatusDesc = 'status_DESC'\n}\n\nexport type ProposalStatusPreviousValues = {\n   __typename?: 'ProposalStatusPreviousValues',\n  id: Scalars['ID'],\n  status: Scalars['String'],\n};\n\nexport type ProposalStatusScalarWhereInput = {\n  AND?: Maybe<Array<ProposalStatusScalarWhereInput>>,\n  NOT?: Maybe<Array<ProposalStatusScalarWhereInput>>,\n  OR?: Maybe<Array<ProposalStatusScalarWhereInput>>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  status?: Maybe<Scalars['String']>,\n  status_contains?: Maybe<Scalars['String']>,\n  status_ends_with?: Maybe<Scalars['String']>,\n  status_gt?: Maybe<Scalars['String']>,\n  status_gte?: Maybe<Scalars['String']>,\n  status_in?: Maybe<Array<Scalars['String']>>,\n  status_lt?: Maybe<Scalars['String']>,\n  status_lte?: Maybe<Scalars['String']>,\n  status_not?: Maybe<Scalars['String']>,\n  status_not_contains?: Maybe<Scalars['String']>,\n  status_not_ends_with?: Maybe<Scalars['String']>,\n  status_not_in?: Maybe<Array<Scalars['String']>>,\n  status_not_starts_with?: Maybe<Scalars['String']>,\n  status_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type ProposalStatusSubscriptionPayload = {\n   __typename?: 'ProposalStatusSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<ProposalStatus>,\n  previousValues?: Maybe<ProposalStatusPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type ProposalStatusSubscriptionWhereInput = {\n  AND?: Maybe<Array<ProposalStatusSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<ProposalStatusSubscriptionWhereInput>>,\n  OR?: Maybe<Array<ProposalStatusSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<ProposalStatusWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type ProposalStatusUpdateInput = {\n  blockNumber?: Maybe<BlockNumberUpdateOneRequiredInput>,\n  proposal?: Maybe<ProposalUpdateOneRequiredWithoutProposalStatusInput>,\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type ProposalStatusUpdateManyDataInput = {\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type ProposalStatusUpdateManyMutationInput = {\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type ProposalStatusUpdateManyWithoutProposalInput = {\n  connect?: Maybe<Array<ProposalStatusWhereUniqueInput>>,\n  create?: Maybe<Array<ProposalStatusCreateWithoutProposalInput>>,\n  delete?: Maybe<Array<ProposalStatusWhereUniqueInput>>,\n  deleteMany?: Maybe<Array<ProposalStatusScalarWhereInput>>,\n  disconnect?: Maybe<Array<ProposalStatusWhereUniqueInput>>,\n  set?: Maybe<Array<ProposalStatusWhereUniqueInput>>,\n  update?: Maybe<Array<ProposalStatusUpdateWithWhereUniqueWithoutProposalInput>>,\n  updateMany?: Maybe<Array<ProposalStatusUpdateManyWithWhereNestedInput>>,\n  upsert?: Maybe<Array<ProposalStatusUpsertWithWhereUniqueWithoutProposalInput>>,\n};\n\nexport type ProposalStatusUpdateManyWithWhereNestedInput = {\n  data: ProposalStatusUpdateManyDataInput,\n  where: ProposalStatusScalarWhereInput,\n};\n\nexport type ProposalStatusUpdateWithoutProposalDataInput = {\n  blockNumber?: Maybe<BlockNumberUpdateOneRequiredInput>,\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type ProposalStatusUpdateWithWhereUniqueWithoutProposalInput = {\n  data: ProposalStatusUpdateWithoutProposalDataInput,\n  where: ProposalStatusWhereUniqueInput,\n};\n\nexport type ProposalStatusUpsertWithWhereUniqueWithoutProposalInput = {\n  create: ProposalStatusCreateWithoutProposalInput,\n  update: ProposalStatusUpdateWithoutProposalDataInput,\n  where: ProposalStatusWhereUniqueInput,\n};\n\nexport type ProposalStatusWhereInput = {\n  AND?: Maybe<Array<ProposalStatusWhereInput>>,\n  NOT?: Maybe<Array<ProposalStatusWhereInput>>,\n  OR?: Maybe<Array<ProposalStatusWhereInput>>,\n  blockNumber?: Maybe<BlockNumberWhereInput>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  proposal?: Maybe<ProposalWhereInput>,\n  status?: Maybe<Scalars['String']>,\n  status_contains?: Maybe<Scalars['String']>,\n  status_ends_with?: Maybe<Scalars['String']>,\n  status_gt?: Maybe<Scalars['String']>,\n  status_gte?: Maybe<Scalars['String']>,\n  status_in?: Maybe<Array<Scalars['String']>>,\n  status_lt?: Maybe<Scalars['String']>,\n  status_lte?: Maybe<Scalars['String']>,\n  status_not?: Maybe<Scalars['String']>,\n  status_not_contains?: Maybe<Scalars['String']>,\n  status_not_ends_with?: Maybe<Scalars['String']>,\n  status_not_in?: Maybe<Array<Scalars['String']>>,\n  status_not_starts_with?: Maybe<Scalars['String']>,\n  status_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type ProposalStatusWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type ProposalSubscriptionPayload = {\n   __typename?: 'ProposalSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<Proposal>,\n  previousValues?: Maybe<ProposalPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type ProposalSubscriptionWhereInput = {\n  AND?: Maybe<Array<ProposalSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<ProposalSubscriptionWhereInput>>,\n  OR?: Maybe<Array<ProposalSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<ProposalWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type ProposalUpdateInput = {\n  author?: Maybe<Scalars['String']>,\n  depositAmount?: Maybe<Scalars['String']>,\n  preimage?: Maybe<PreimageUpdateOneWithoutProposalInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  proposalId?: Maybe<Scalars['Int']>,\n  proposalStatus?: Maybe<ProposalStatusUpdateManyWithoutProposalInput>,\n};\n\nexport type ProposalUpdateManyMutationInput = {\n  author?: Maybe<Scalars['String']>,\n  depositAmount?: Maybe<Scalars['String']>,\n  preimageHash?: Maybe<Scalars['String']>,\n  proposalId?: Maybe<Scalars['Int']>,\n};\n\nexport type ProposalUpdateOneRequiredWithoutProposalStatusInput = {\n  connect?: Maybe<ProposalWhereUniqueInput>,\n  create?: Maybe<ProposalCreateWithoutProposalStatusInput>,\n  update?: Maybe<ProposalUpdateWithoutProposalStatusDataInput>,\n  upsert?: Maybe<ProposalUpsertWithoutProposalStatusInput>,\n};\n\nexport type ProposalUpdateOneWithoutPreimageInput = {\n  connect?: Maybe<ProposalWhereUniqueInput>,\n  create?: Maybe<ProposalCreateWithoutPreimageInput>,\n  delete?: Maybe<Scalars['Boolean']>,\n  disconnect?: Maybe<Scalars['Boolean']>,\n  update?: Maybe<ProposalUpdateWithoutPreimageDataInput>,\n  upsert?: Maybe<ProposalUpsertWithoutPreimageInput>,\n};\n\nexport type ProposalUpdateWithoutPreimageDataInput = {\n  author?: Maybe<Scalars['String']>,\n  depositAmount?: Maybe<Scalars['String']>,\n  preimageHash?: Maybe<Scalars['String']>,\n  proposalId?: Maybe<Scalars['Int']>,\n  proposalStatus?: Maybe<ProposalStatusUpdateManyWithoutProposalInput>,\n};\n\nexport type ProposalUpdateWithoutProposalStatusDataInput = {\n  author?: Maybe<Scalars['String']>,\n  depositAmount?: Maybe<Scalars['String']>,\n  preimage?: Maybe<PreimageUpdateOneWithoutProposalInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  proposalId?: Maybe<Scalars['Int']>,\n};\n\nexport type ProposalUpsertWithoutPreimageInput = {\n  create: ProposalCreateWithoutPreimageInput,\n  update: ProposalUpdateWithoutPreimageDataInput,\n};\n\nexport type ProposalUpsertWithoutProposalStatusInput = {\n  create: ProposalCreateWithoutProposalStatusInput,\n  update: ProposalUpdateWithoutProposalStatusDataInput,\n};\n\nexport type ProposalWhereInput = {\n  AND?: Maybe<Array<ProposalWhereInput>>,\n  NOT?: Maybe<Array<ProposalWhereInput>>,\n  OR?: Maybe<Array<ProposalWhereInput>>,\n  author?: Maybe<Scalars['String']>,\n  author_contains?: Maybe<Scalars['String']>,\n  author_ends_with?: Maybe<Scalars['String']>,\n  author_gt?: Maybe<Scalars['String']>,\n  author_gte?: Maybe<Scalars['String']>,\n  author_in?: Maybe<Array<Scalars['String']>>,\n  author_lt?: Maybe<Scalars['String']>,\n  author_lte?: Maybe<Scalars['String']>,\n  author_not?: Maybe<Scalars['String']>,\n  author_not_contains?: Maybe<Scalars['String']>,\n  author_not_ends_with?: Maybe<Scalars['String']>,\n  author_not_in?: Maybe<Array<Scalars['String']>>,\n  author_not_starts_with?: Maybe<Scalars['String']>,\n  author_starts_with?: Maybe<Scalars['String']>,\n  depositAmount?: Maybe<Scalars['String']>,\n  depositAmount_contains?: Maybe<Scalars['String']>,\n  depositAmount_ends_with?: Maybe<Scalars['String']>,\n  depositAmount_gt?: Maybe<Scalars['String']>,\n  depositAmount_gte?: Maybe<Scalars['String']>,\n  depositAmount_in?: Maybe<Array<Scalars['String']>>,\n  depositAmount_lt?: Maybe<Scalars['String']>,\n  depositAmount_lte?: Maybe<Scalars['String']>,\n  depositAmount_not?: Maybe<Scalars['String']>,\n  depositAmount_not_contains?: Maybe<Scalars['String']>,\n  depositAmount_not_ends_with?: Maybe<Scalars['String']>,\n  depositAmount_not_in?: Maybe<Array<Scalars['String']>>,\n  depositAmount_not_starts_with?: Maybe<Scalars['String']>,\n  depositAmount_starts_with?: Maybe<Scalars['String']>,\n  id?: Maybe<Scalars['Int']>,\n  id_gt?: Maybe<Scalars['Int']>,\n  id_gte?: Maybe<Scalars['Int']>,\n  id_in?: Maybe<Array<Scalars['Int']>>,\n  id_lt?: Maybe<Scalars['Int']>,\n  id_lte?: Maybe<Scalars['Int']>,\n  id_not?: Maybe<Scalars['Int']>,\n  id_not_in?: Maybe<Array<Scalars['Int']>>,\n  preimage?: Maybe<PreimageWhereInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  preimageHash_contains?: Maybe<Scalars['String']>,\n  preimageHash_ends_with?: Maybe<Scalars['String']>,\n  preimageHash_gt?: Maybe<Scalars['String']>,\n  preimageHash_gte?: Maybe<Scalars['String']>,\n  preimageHash_in?: Maybe<Array<Scalars['String']>>,\n  preimageHash_lt?: Maybe<Scalars['String']>,\n  preimageHash_lte?: Maybe<Scalars['String']>,\n  preimageHash_not?: Maybe<Scalars['String']>,\n  preimageHash_not_contains?: Maybe<Scalars['String']>,\n  preimageHash_not_ends_with?: Maybe<Scalars['String']>,\n  preimageHash_not_in?: Maybe<Array<Scalars['String']>>,\n  preimageHash_not_starts_with?: Maybe<Scalars['String']>,\n  preimageHash_starts_with?: Maybe<Scalars['String']>,\n  proposalId?: Maybe<Scalars['Int']>,\n  proposalId_gt?: Maybe<Scalars['Int']>,\n  proposalId_gte?: Maybe<Scalars['Int']>,\n  proposalId_in?: Maybe<Array<Scalars['Int']>>,\n  proposalId_lt?: Maybe<Scalars['Int']>,\n  proposalId_lte?: Maybe<Scalars['Int']>,\n  proposalId_not?: Maybe<Scalars['Int']>,\n  proposalId_not_in?: Maybe<Array<Scalars['Int']>>,\n  proposalStatus_every?: Maybe<ProposalStatusWhereInput>,\n  proposalStatus_none?: Maybe<ProposalStatusWhereInput>,\n  proposalStatus_some?: Maybe<ProposalStatusWhereInput>,\n};\n\nexport type ProposalWhereInput_Remote_Rel_Public_Onchain_Linksonchain_Proposal = {\n  AND?: Maybe<Array<ProposalWhereInput>>,\n  NOT?: Maybe<Array<ProposalWhereInput>>,\n  OR?: Maybe<Array<ProposalWhereInput>>,\n  author?: Maybe<Scalars['String']>,\n  author_contains?: Maybe<Scalars['String']>,\n  author_ends_with?: Maybe<Scalars['String']>,\n  author_gt?: Maybe<Scalars['String']>,\n  author_gte?: Maybe<Scalars['String']>,\n  author_in?: Maybe<Array<Scalars['String']>>,\n  author_lt?: Maybe<Scalars['String']>,\n  author_lte?: Maybe<Scalars['String']>,\n  author_not?: Maybe<Scalars['String']>,\n  author_not_contains?: Maybe<Scalars['String']>,\n  author_not_ends_with?: Maybe<Scalars['String']>,\n  author_not_in?: Maybe<Array<Scalars['String']>>,\n  author_not_starts_with?: Maybe<Scalars['String']>,\n  author_starts_with?: Maybe<Scalars['String']>,\n  depositAmount?: Maybe<Scalars['String']>,\n  depositAmount_contains?: Maybe<Scalars['String']>,\n  depositAmount_ends_with?: Maybe<Scalars['String']>,\n  depositAmount_gt?: Maybe<Scalars['String']>,\n  depositAmount_gte?: Maybe<Scalars['String']>,\n  depositAmount_in?: Maybe<Array<Scalars['String']>>,\n  depositAmount_lt?: Maybe<Scalars['String']>,\n  depositAmount_lte?: Maybe<Scalars['String']>,\n  depositAmount_not?: Maybe<Scalars['String']>,\n  depositAmount_not_contains?: Maybe<Scalars['String']>,\n  depositAmount_not_ends_with?: Maybe<Scalars['String']>,\n  depositAmount_not_in?: Maybe<Array<Scalars['String']>>,\n  depositAmount_not_starts_with?: Maybe<Scalars['String']>,\n  depositAmount_starts_with?: Maybe<Scalars['String']>,\n  id?: Maybe<Scalars['Int']>,\n  id_gt?: Maybe<Scalars['Int']>,\n  id_gte?: Maybe<Scalars['Int']>,\n  id_in?: Maybe<Array<Scalars['Int']>>,\n  id_lt?: Maybe<Scalars['Int']>,\n  id_lte?: Maybe<Scalars['Int']>,\n  id_not?: Maybe<Scalars['Int']>,\n  id_not_in?: Maybe<Array<Scalars['Int']>>,\n  preimage?: Maybe<PreimageWhereInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  preimageHash_contains?: Maybe<Scalars['String']>,\n  preimageHash_ends_with?: Maybe<Scalars['String']>,\n  preimageHash_gt?: Maybe<Scalars['String']>,\n  preimageHash_gte?: Maybe<Scalars['String']>,\n  preimageHash_in?: Maybe<Array<Scalars['String']>>,\n  preimageHash_lt?: Maybe<Scalars['String']>,\n  preimageHash_lte?: Maybe<Scalars['String']>,\n  preimageHash_not?: Maybe<Scalars['String']>,\n  preimageHash_not_contains?: Maybe<Scalars['String']>,\n  preimageHash_not_ends_with?: Maybe<Scalars['String']>,\n  preimageHash_not_in?: Maybe<Array<Scalars['String']>>,\n  preimageHash_not_starts_with?: Maybe<Scalars['String']>,\n  preimageHash_starts_with?: Maybe<Scalars['String']>,\n  proposalId_gt?: Maybe<Scalars['Int']>,\n  proposalId_gte?: Maybe<Scalars['Int']>,\n  proposalId_in?: Maybe<Array<Scalars['Int']>>,\n  proposalId_lt?: Maybe<Scalars['Int']>,\n  proposalId_lte?: Maybe<Scalars['Int']>,\n  proposalId_not?: Maybe<Scalars['Int']>,\n  proposalId_not_in?: Maybe<Array<Scalars['Int']>>,\n  proposalStatus_every?: Maybe<ProposalStatusWhereInput>,\n  proposalStatus_none?: Maybe<ProposalStatusWhereInput>,\n  proposalStatus_some?: Maybe<ProposalStatusWhereInput>,\n};\n\nexport type ProposalWhereUniqueInput = {\n  id?: Maybe<Scalars['Int']>,\n  proposalId?: Maybe<Scalars['Int']>,\n};\n\nexport type PublicUser = {\n   __typename?: 'PublicUser',\n  id?: Maybe<Scalars['Int']>,\n  name?: Maybe<Scalars['String']>,\n  username?: Maybe<Scalars['String']>,\n};\n\nexport type Query = {\n   __typename?: 'Query',\n  notification?: Maybe<NotificationPreferences>,\n  subscription?: Maybe<Subscription>,\n  token?: Maybe<Token>,\n  user?: Maybe<User>,\n  users?: Maybe<Array<Maybe<PublicUser>>>,\n};\n\n\nexport type QuerySubscriptionArgs = {\n  post_id: Scalars['Int']\n};\n\n\nexport type QueryUserArgs = {\n  id: Scalars['Int']\n};\n\n\nexport type QueryUsersArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  page?: Maybe<Scalars['Int']>\n};\n\nexport type Query_Root = {\n   __typename?: 'query_root',\n  blockIndex?: Maybe<BlockIndex>,\n  blockIndexes: Array<Maybe<BlockIndex>>,\n  blockIndexesConnection: BlockIndexConnection,\n  blockNumber?: Maybe<BlockNumber>,\n  blockNumbers: Array<Maybe<BlockNumber>>,\n  blockNumbersConnection: BlockNumberConnection,\n  comment_reactions: Array<Comment_Reactions>,\n  comment_reactions_aggregate: Comment_Reactions_Aggregate,\n  comment_reactions_by_pk?: Maybe<Comment_Reactions>,\n  comments: Array<Comments>,\n  comments_aggregate: Comments_Aggregate,\n  comments_by_pk?: Maybe<Comments>,\n  council?: Maybe<Council>,\n  councilMember?: Maybe<CouncilMember>,\n  councilMembers: Array<Maybe<CouncilMember>>,\n  councilMembersConnection: CouncilMemberConnection,\n  councils: Array<Maybe<Council>>,\n  councilsConnection: CouncilConnection,\n  era?: Maybe<Era>,\n  eras: Array<Maybe<Era>>,\n  erasConnection: EraConnection,\n  heartBeat?: Maybe<HeartBeat>,\n  heartBeats: Array<Maybe<HeartBeat>>,\n  heartBeatsConnection: HeartBeatConnection,\n  motion?: Maybe<Motion>,\n  motionProposalArgument?: Maybe<MotionProposalArgument>,\n  motionProposalArguments: Array<Maybe<MotionProposalArgument>>,\n  motionProposalArgumentsConnection: MotionProposalArgumentConnection,\n  motionStatus?: Maybe<MotionStatus>,\n  motionStatuses: Array<Maybe<MotionStatus>>,\n  motionStatusesConnection: MotionStatusConnection,\n  motions: Array<Maybe<Motion>>,\n  motionsConnection: MotionConnection,\n  node?: Maybe<Node>,\n  nomination?: Maybe<Nomination>,\n  nominations: Array<Maybe<Nomination>>,\n  nominationsConnection: NominationConnection,\n  notification?: Maybe<NotificationPreferences>,\n  offlineValidator?: Maybe<OfflineValidator>,\n  offlineValidators: Array<Maybe<OfflineValidator>>,\n  offlineValidatorsConnection: OfflineValidatorConnection,\n  onchain_links: Array<Onchain_Links>,\n  onchain_links_aggregate: Onchain_Links_Aggregate,\n  onchain_links_by_pk?: Maybe<Onchain_Links>,\n  post_reactions: Array<Post_Reactions>,\n  post_reactions_aggregate: Post_Reactions_Aggregate,\n  post_reactions_by_pk?: Maybe<Post_Reactions>,\n  post_topics: Array<Post_Topics>,\n  post_topics_aggregate: Post_Topics_Aggregate,\n  post_topics_by_pk?: Maybe<Post_Topics>,\n  post_types: Array<Post_Types>,\n  post_types_aggregate: Post_Types_Aggregate,\n  post_types_by_pk?: Maybe<Post_Types>,\n  posts: Array<Posts>,\n  posts_aggregate: Posts_Aggregate,\n  posts_by_pk?: Maybe<Posts>,\n  preimage?: Maybe<Preimage>,\n  preimageArgument?: Maybe<PreimageArgument>,\n  preimageArguments: Array<Maybe<PreimageArgument>>,\n  preimageArgumentsConnection: PreimageArgumentConnection,\n  preimageStatus?: Maybe<PreimageStatus>,\n  preimageStatuses: Array<Maybe<PreimageStatus>>,\n  preimageStatusesConnection: PreimageStatusConnection,\n  preimages: Array<Maybe<Preimage>>,\n  preimagesConnection: PreimageConnection,\n  proposal?: Maybe<Proposal>,\n  proposalStatus?: Maybe<ProposalStatus>,\n  proposalStatuses: Array<Maybe<ProposalStatus>>,\n  proposalStatusesConnection: ProposalStatusConnection,\n  proposals: Array<Maybe<Proposal>>,\n  proposalsConnection: ProposalConnection,\n  referendum?: Maybe<Referendum>,\n  referendumStatus?: Maybe<ReferendumStatus>,\n  referendumStatuses: Array<Maybe<ReferendumStatus>>,\n  referendumStatusesConnection: ReferendumStatusConnection,\n  referendums: Array<Maybe<Referendum>>,\n  referendumsConnection: ReferendumConnection,\n  reward?: Maybe<Reward>,\n  rewards: Array<Maybe<Reward>>,\n  rewardsConnection: RewardConnection,\n  session?: Maybe<Session>,\n  sessions: Array<Maybe<Session>>,\n  sessionsConnection: SessionConnection,\n  slashing?: Maybe<Slashing>,\n  slashings: Array<Maybe<Slashing>>,\n  slashingsConnection: SlashingConnection,\n  stake?: Maybe<Stake>,\n  stakes: Array<Maybe<Stake>>,\n  stakesConnection: StakeConnection,\n  subscription?: Maybe<Subscription>,\n  token?: Maybe<Token>,\n  totalIssuance?: Maybe<TotalIssuance>,\n  totalIssuances: Array<Maybe<TotalIssuance>>,\n  totalIssuancesConnection: TotalIssuanceConnection,\n  treasurySpendProposal?: Maybe<TreasurySpendProposal>,\n  treasurySpendProposals: Array<Maybe<TreasurySpendProposal>>,\n  treasurySpendProposalsConnection: TreasurySpendProposalConnection,\n  treasuryStatus?: Maybe<TreasuryStatus>,\n  treasuryStatuses: Array<Maybe<TreasuryStatus>>,\n  treasuryStatusesConnection: TreasuryStatusConnection,\n  user?: Maybe<User>,\n  users?: Maybe<Array<Maybe<PublicUser>>>,\n  validator?: Maybe<Validator>,\n  validators: Array<Maybe<Validator>>,\n  validatorsConnection: ValidatorConnection,\n};\n\n\nexport type Query_RootBlockIndexArgs = {\n  where: BlockIndexWhereUniqueInput\n};\n\n\nexport type Query_RootBlockIndexesArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<BlockIndexOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<BlockIndexWhereInput>\n};\n\n\nexport type Query_RootBlockIndexesConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<BlockIndexOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<BlockIndexWhereInput>\n};\n\n\nexport type Query_RootBlockNumberArgs = {\n  where: BlockNumberWhereUniqueInput\n};\n\n\nexport type Query_RootBlockNumbersArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<BlockNumberOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<BlockNumberWhereInput>\n};\n\n\nexport type Query_RootBlockNumbersConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<BlockNumberOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<BlockNumberWhereInput>\n};\n\n\nexport type Query_RootComment_ReactionsArgs = {\n  distinct_on?: Maybe<Array<Comment_Reactions_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Comment_Reactions_Order_By>>,\n  where?: Maybe<Comment_Reactions_Bool_Exp>\n};\n\n\nexport type Query_RootComment_Reactions_AggregateArgs = {\n  distinct_on?: Maybe<Array<Comment_Reactions_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Comment_Reactions_Order_By>>,\n  where?: Maybe<Comment_Reactions_Bool_Exp>\n};\n\n\nexport type Query_RootComment_Reactions_By_PkArgs = {\n  id: Scalars['Int']\n};\n\n\nexport type Query_RootCommentsArgs = {\n  distinct_on?: Maybe<Array<Comments_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Comments_Order_By>>,\n  where?: Maybe<Comments_Bool_Exp>\n};\n\n\nexport type Query_RootComments_AggregateArgs = {\n  distinct_on?: Maybe<Array<Comments_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Comments_Order_By>>,\n  where?: Maybe<Comments_Bool_Exp>\n};\n\n\nexport type Query_RootComments_By_PkArgs = {\n  id: Scalars['uuid']\n};\n\n\nexport type Query_RootCouncilArgs = {\n  where: CouncilWhereUniqueInput\n};\n\n\nexport type Query_RootCouncilMemberArgs = {\n  where: CouncilMemberWhereUniqueInput\n};\n\n\nexport type Query_RootCouncilMembersArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<CouncilMemberOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<CouncilMemberWhereInput>\n};\n\n\nexport type Query_RootCouncilMembersConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<CouncilMemberOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<CouncilMemberWhereInput>\n};\n\n\nexport type Query_RootCouncilsArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<CouncilOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<CouncilWhereInput>\n};\n\n\nexport type Query_RootCouncilsConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<CouncilOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<CouncilWhereInput>\n};\n\n\nexport type Query_RootEraArgs = {\n  where: EraWhereUniqueInput\n};\n\n\nexport type Query_RootErasArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<EraOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<EraWhereInput>\n};\n\n\nexport type Query_RootErasConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<EraOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<EraWhereInput>\n};\n\n\nexport type Query_RootHeartBeatArgs = {\n  where: HeartBeatWhereUniqueInput\n};\n\n\nexport type Query_RootHeartBeatsArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<HeartBeatOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<HeartBeatWhereInput>\n};\n\n\nexport type Query_RootHeartBeatsConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<HeartBeatOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<HeartBeatWhereInput>\n};\n\n\nexport type Query_RootMotionArgs = {\n  where: MotionWhereUniqueInput\n};\n\n\nexport type Query_RootMotionProposalArgumentArgs = {\n  where: MotionProposalArgumentWhereUniqueInput\n};\n\n\nexport type Query_RootMotionProposalArgumentsArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<MotionProposalArgumentOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<MotionProposalArgumentWhereInput>\n};\n\n\nexport type Query_RootMotionProposalArgumentsConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<MotionProposalArgumentOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<MotionProposalArgumentWhereInput>\n};\n\n\nexport type Query_RootMotionStatusArgs = {\n  where: MotionStatusWhereUniqueInput\n};\n\n\nexport type Query_RootMotionStatusesArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<MotionStatusOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<MotionStatusWhereInput>\n};\n\n\nexport type Query_RootMotionStatusesConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<MotionStatusOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<MotionStatusWhereInput>\n};\n\n\nexport type Query_RootMotionsArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<MotionOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<MotionWhereInput>\n};\n\n\nexport type Query_RootMotionsConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<MotionOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<MotionWhereInput>\n};\n\n\nexport type Query_RootNodeArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type Query_RootNominationArgs = {\n  where: NominationWhereUniqueInput\n};\n\n\nexport type Query_RootNominationsArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<NominationOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<NominationWhereInput>\n};\n\n\nexport type Query_RootNominationsConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<NominationOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<NominationWhereInput>\n};\n\n\nexport type Query_RootOfflineValidatorArgs = {\n  where: OfflineValidatorWhereUniqueInput\n};\n\n\nexport type Query_RootOfflineValidatorsArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<OfflineValidatorOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<OfflineValidatorWhereInput>\n};\n\n\nexport type Query_RootOfflineValidatorsConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<OfflineValidatorOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<OfflineValidatorWhereInput>\n};\n\n\nexport type Query_RootOnchain_LinksArgs = {\n  distinct_on?: Maybe<Array<Onchain_Links_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Onchain_Links_Order_By>>,\n  where?: Maybe<Onchain_Links_Bool_Exp>\n};\n\n\nexport type Query_RootOnchain_Links_AggregateArgs = {\n  distinct_on?: Maybe<Array<Onchain_Links_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Onchain_Links_Order_By>>,\n  where?: Maybe<Onchain_Links_Bool_Exp>\n};\n\n\nexport type Query_RootOnchain_Links_By_PkArgs = {\n  id: Scalars['Int']\n};\n\n\nexport type Query_RootPost_ReactionsArgs = {\n  distinct_on?: Maybe<Array<Post_Reactions_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Post_Reactions_Order_By>>,\n  where?: Maybe<Post_Reactions_Bool_Exp>\n};\n\n\nexport type Query_RootPost_Reactions_AggregateArgs = {\n  distinct_on?: Maybe<Array<Post_Reactions_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Post_Reactions_Order_By>>,\n  where?: Maybe<Post_Reactions_Bool_Exp>\n};\n\n\nexport type Query_RootPost_Reactions_By_PkArgs = {\n  id: Scalars['Int']\n};\n\n\nexport type Query_RootPost_TopicsArgs = {\n  distinct_on?: Maybe<Array<Post_Topics_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Post_Topics_Order_By>>,\n  where?: Maybe<Post_Topics_Bool_Exp>\n};\n\n\nexport type Query_RootPost_Topics_AggregateArgs = {\n  distinct_on?: Maybe<Array<Post_Topics_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Post_Topics_Order_By>>,\n  where?: Maybe<Post_Topics_Bool_Exp>\n};\n\n\nexport type Query_RootPost_Topics_By_PkArgs = {\n  id: Scalars['Int']\n};\n\n\nexport type Query_RootPost_TypesArgs = {\n  distinct_on?: Maybe<Array<Post_Types_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Post_Types_Order_By>>,\n  where?: Maybe<Post_Types_Bool_Exp>\n};\n\n\nexport type Query_RootPost_Types_AggregateArgs = {\n  distinct_on?: Maybe<Array<Post_Types_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Post_Types_Order_By>>,\n  where?: Maybe<Post_Types_Bool_Exp>\n};\n\n\nexport type Query_RootPost_Types_By_PkArgs = {\n  id: Scalars['Int']\n};\n\n\nexport type Query_RootPostsArgs = {\n  distinct_on?: Maybe<Array<Posts_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Posts_Order_By>>,\n  where?: Maybe<Posts_Bool_Exp>\n};\n\n\nexport type Query_RootPosts_AggregateArgs = {\n  distinct_on?: Maybe<Array<Posts_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Posts_Order_By>>,\n  where?: Maybe<Posts_Bool_Exp>\n};\n\n\nexport type Query_RootPosts_By_PkArgs = {\n  id: Scalars['Int']\n};\n\n\nexport type Query_RootPreimageArgs = {\n  where: PreimageWhereUniqueInput\n};\n\n\nexport type Query_RootPreimageArgumentArgs = {\n  where: PreimageArgumentWhereUniqueInput\n};\n\n\nexport type Query_RootPreimageArgumentsArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<PreimageArgumentOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<PreimageArgumentWhereInput>\n};\n\n\nexport type Query_RootPreimageArgumentsConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<PreimageArgumentOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<PreimageArgumentWhereInput>\n};\n\n\nexport type Query_RootPreimageStatusArgs = {\n  where: PreimageStatusWhereUniqueInput\n};\n\n\nexport type Query_RootPreimageStatusesArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<PreimageStatusOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<PreimageStatusWhereInput>\n};\n\n\nexport type Query_RootPreimageStatusesConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<PreimageStatusOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<PreimageStatusWhereInput>\n};\n\n\nexport type Query_RootPreimagesArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<PreimageOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<PreimageWhereInput>\n};\n\n\nexport type Query_RootPreimagesConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<PreimageOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<PreimageWhereInput>\n};\n\n\nexport type Query_RootProposalArgs = {\n  where: ProposalWhereUniqueInput\n};\n\n\nexport type Query_RootProposalStatusArgs = {\n  where: ProposalStatusWhereUniqueInput\n};\n\n\nexport type Query_RootProposalStatusesArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<ProposalStatusOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<ProposalStatusWhereInput>\n};\n\n\nexport type Query_RootProposalStatusesConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<ProposalStatusOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<ProposalStatusWhereInput>\n};\n\n\nexport type Query_RootProposalsArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<ProposalOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<ProposalWhereInput>\n};\n\n\nexport type Query_RootProposalsConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<ProposalOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<ProposalWhereInput>\n};\n\n\nexport type Query_RootReferendumArgs = {\n  where: ReferendumWhereUniqueInput\n};\n\n\nexport type Query_RootReferendumStatusArgs = {\n  where: ReferendumStatusWhereUniqueInput\n};\n\n\nexport type Query_RootReferendumStatusesArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<ReferendumStatusOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<ReferendumStatusWhereInput>\n};\n\n\nexport type Query_RootReferendumStatusesConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<ReferendumStatusOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<ReferendumStatusWhereInput>\n};\n\n\nexport type Query_RootReferendumsArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<ReferendumOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<ReferendumWhereInput>\n};\n\n\nexport type Query_RootReferendumsConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<ReferendumOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<ReferendumWhereInput>\n};\n\n\nexport type Query_RootRewardArgs = {\n  where: RewardWhereUniqueInput\n};\n\n\nexport type Query_RootRewardsArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<RewardOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<RewardWhereInput>\n};\n\n\nexport type Query_RootRewardsConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<RewardOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<RewardWhereInput>\n};\n\n\nexport type Query_RootSessionArgs = {\n  where: SessionWhereUniqueInput\n};\n\n\nexport type Query_RootSessionsArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<SessionOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<SessionWhereInput>\n};\n\n\nexport type Query_RootSessionsConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<SessionOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<SessionWhereInput>\n};\n\n\nexport type Query_RootSlashingArgs = {\n  where: SlashingWhereUniqueInput\n};\n\n\nexport type Query_RootSlashingsArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<SlashingOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<SlashingWhereInput>\n};\n\n\nexport type Query_RootSlashingsConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<SlashingOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<SlashingWhereInput>\n};\n\n\nexport type Query_RootStakeArgs = {\n  where: StakeWhereUniqueInput\n};\n\n\nexport type Query_RootStakesArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<StakeOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<StakeWhereInput>\n};\n\n\nexport type Query_RootStakesConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<StakeOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<StakeWhereInput>\n};\n\n\nexport type Query_RootSubscriptionArgs = {\n  post_id: Scalars['Int']\n};\n\n\nexport type Query_RootTotalIssuanceArgs = {\n  where: TotalIssuanceWhereUniqueInput\n};\n\n\nexport type Query_RootTotalIssuancesArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<TotalIssuanceOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<TotalIssuanceWhereInput>\n};\n\n\nexport type Query_RootTotalIssuancesConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<TotalIssuanceOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<TotalIssuanceWhereInput>\n};\n\n\nexport type Query_RootTreasurySpendProposalArgs = {\n  where: TreasurySpendProposalWhereUniqueInput\n};\n\n\nexport type Query_RootTreasurySpendProposalsArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<TreasurySpendProposalOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<TreasurySpendProposalWhereInput>\n};\n\n\nexport type Query_RootTreasurySpendProposalsConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<TreasurySpendProposalOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<TreasurySpendProposalWhereInput>\n};\n\n\nexport type Query_RootTreasuryStatusArgs = {\n  where: TreasuryStatusWhereUniqueInput\n};\n\n\nexport type Query_RootTreasuryStatusesArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<TreasuryStatusOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<TreasuryStatusWhereInput>\n};\n\n\nexport type Query_RootTreasuryStatusesConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<TreasuryStatusOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<TreasuryStatusWhereInput>\n};\n\n\nexport type Query_RootUserArgs = {\n  id: Scalars['Int']\n};\n\n\nexport type Query_RootUsersArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  page?: Maybe<Scalars['Int']>\n};\n\n\nexport type Query_RootValidatorArgs = {\n  where: ValidatorWhereUniqueInput\n};\n\n\nexport type Query_RootValidatorsArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<ValidatorOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<ValidatorWhereInput>\n};\n\n\nexport type Query_RootValidatorsConnectionArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<ValidatorOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<ValidatorWhereInput>\n};\n\nexport type Referendum = {\n   __typename?: 'Referendum',\n  delay: Scalars['Int'],\n  end: Scalars['Int'],\n  id: Scalars['Int'],\n  preimage?: Maybe<Preimage>,\n  preimageHash: Scalars['String'],\n  referendumId: Scalars['Int'],\n  referendumStatus?: Maybe<Array<ReferendumStatus>>,\n  voteThreshold: Scalars['String'],\n};\n\n\nexport type ReferendumReferendumStatusArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<ReferendumStatusOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<ReferendumStatusWhereInput>\n};\n\nexport type ReferendumConnection = {\n   __typename?: 'ReferendumConnection',\n  aggregate: AggregateReferendum,\n  edges: Array<Maybe<ReferendumEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type ReferendumCreateInput = {\n  delay: Scalars['Int'],\n  end: Scalars['Int'],\n  preimage?: Maybe<PreimageCreateOneWithoutReferendumInput>,\n  preimageHash: Scalars['String'],\n  referendumId: Scalars['Int'],\n  referendumStatus?: Maybe<ReferendumStatusCreateManyWithoutReferendumInput>,\n  voteThreshold: Scalars['String'],\n};\n\nexport type ReferendumCreateOneWithoutPreimageInput = {\n  connect?: Maybe<ReferendumWhereUniqueInput>,\n  create?: Maybe<ReferendumCreateWithoutPreimageInput>,\n};\n\nexport type ReferendumCreateOneWithoutReferendumStatusInput = {\n  connect?: Maybe<ReferendumWhereUniqueInput>,\n  create?: Maybe<ReferendumCreateWithoutReferendumStatusInput>,\n};\n\nexport type ReferendumCreateWithoutPreimageInput = {\n  delay: Scalars['Int'],\n  end: Scalars['Int'],\n  preimageHash: Scalars['String'],\n  referendumId: Scalars['Int'],\n  referendumStatus?: Maybe<ReferendumStatusCreateManyWithoutReferendumInput>,\n  voteThreshold: Scalars['String'],\n};\n\nexport type ReferendumCreateWithoutReferendumStatusInput = {\n  delay: Scalars['Int'],\n  end: Scalars['Int'],\n  preimage?: Maybe<PreimageCreateOneWithoutReferendumInput>,\n  preimageHash: Scalars['String'],\n  referendumId: Scalars['Int'],\n  voteThreshold: Scalars['String'],\n};\n\nexport type ReferendumEdge = {\n   __typename?: 'ReferendumEdge',\n  cursor: Scalars['String'],\n  node: Referendum,\n};\n\nexport enum ReferendumOrderByInput {\n  DelayAsc = 'delay_ASC',\n  DelayDesc = 'delay_DESC',\n  EndAsc = 'end_ASC',\n  EndDesc = 'end_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  PreimageHashAsc = 'preimageHash_ASC',\n  PreimageHashDesc = 'preimageHash_DESC',\n  ReferendumIdAsc = 'referendumId_ASC',\n  ReferendumIdDesc = 'referendumId_DESC',\n  VoteThresholdAsc = 'voteThreshold_ASC',\n  VoteThresholdDesc = 'voteThreshold_DESC'\n}\n\nexport type ReferendumPreviousValues = {\n   __typename?: 'ReferendumPreviousValues',\n  delay: Scalars['Int'],\n  end: Scalars['Int'],\n  id: Scalars['Int'],\n  preimageHash: Scalars['String'],\n  referendumId: Scalars['Int'],\n  voteThreshold: Scalars['String'],\n};\n\nexport type ReferendumStatus = Node & {\n   __typename?: 'ReferendumStatus',\n  blockNumber: BlockNumber,\n  id: Scalars['ID'],\n  referendum: Referendum,\n  status: Scalars['String'],\n};\n\nexport type ReferendumStatusConnection = {\n   __typename?: 'ReferendumStatusConnection',\n  aggregate: AggregateReferendumStatus,\n  edges: Array<Maybe<ReferendumStatusEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type ReferendumStatusCreateInput = {\n  blockNumber: BlockNumberCreateOneInput,\n  id?: Maybe<Scalars['ID']>,\n  referendum: ReferendumCreateOneWithoutReferendumStatusInput,\n  status: Scalars['String'],\n};\n\nexport type ReferendumStatusCreateManyWithoutReferendumInput = {\n  connect?: Maybe<Array<ReferendumStatusWhereUniqueInput>>,\n  create?: Maybe<Array<ReferendumStatusCreateWithoutReferendumInput>>,\n};\n\nexport type ReferendumStatusCreateWithoutReferendumInput = {\n  blockNumber: BlockNumberCreateOneInput,\n  id?: Maybe<Scalars['ID']>,\n  status: Scalars['String'],\n};\n\nexport type ReferendumStatusEdge = {\n   __typename?: 'ReferendumStatusEdge',\n  cursor: Scalars['String'],\n  node: ReferendumStatus,\n};\n\nexport enum ReferendumStatusOrderByInput {\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  StatusAsc = 'status_ASC',\n  StatusDesc = 'status_DESC'\n}\n\nexport type ReferendumStatusPreviousValues = {\n   __typename?: 'ReferendumStatusPreviousValues',\n  id: Scalars['ID'],\n  status: Scalars['String'],\n};\n\nexport type ReferendumStatusScalarWhereInput = {\n  AND?: Maybe<Array<ReferendumStatusScalarWhereInput>>,\n  NOT?: Maybe<Array<ReferendumStatusScalarWhereInput>>,\n  OR?: Maybe<Array<ReferendumStatusScalarWhereInput>>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  status?: Maybe<Scalars['String']>,\n  status_contains?: Maybe<Scalars['String']>,\n  status_ends_with?: Maybe<Scalars['String']>,\n  status_gt?: Maybe<Scalars['String']>,\n  status_gte?: Maybe<Scalars['String']>,\n  status_in?: Maybe<Array<Scalars['String']>>,\n  status_lt?: Maybe<Scalars['String']>,\n  status_lte?: Maybe<Scalars['String']>,\n  status_not?: Maybe<Scalars['String']>,\n  status_not_contains?: Maybe<Scalars['String']>,\n  status_not_ends_with?: Maybe<Scalars['String']>,\n  status_not_in?: Maybe<Array<Scalars['String']>>,\n  status_not_starts_with?: Maybe<Scalars['String']>,\n  status_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type ReferendumStatusSubscriptionPayload = {\n   __typename?: 'ReferendumStatusSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<ReferendumStatus>,\n  previousValues?: Maybe<ReferendumStatusPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type ReferendumStatusSubscriptionWhereInput = {\n  AND?: Maybe<Array<ReferendumStatusSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<ReferendumStatusSubscriptionWhereInput>>,\n  OR?: Maybe<Array<ReferendumStatusSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<ReferendumStatusWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type ReferendumStatusUpdateInput = {\n  blockNumber?: Maybe<BlockNumberUpdateOneRequiredInput>,\n  referendum?: Maybe<ReferendumUpdateOneRequiredWithoutReferendumStatusInput>,\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type ReferendumStatusUpdateManyDataInput = {\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type ReferendumStatusUpdateManyMutationInput = {\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type ReferendumStatusUpdateManyWithoutReferendumInput = {\n  connect?: Maybe<Array<ReferendumStatusWhereUniqueInput>>,\n  create?: Maybe<Array<ReferendumStatusCreateWithoutReferendumInput>>,\n  delete?: Maybe<Array<ReferendumStatusWhereUniqueInput>>,\n  deleteMany?: Maybe<Array<ReferendumStatusScalarWhereInput>>,\n  disconnect?: Maybe<Array<ReferendumStatusWhereUniqueInput>>,\n  set?: Maybe<Array<ReferendumStatusWhereUniqueInput>>,\n  update?: Maybe<Array<ReferendumStatusUpdateWithWhereUniqueWithoutReferendumInput>>,\n  updateMany?: Maybe<Array<ReferendumStatusUpdateManyWithWhereNestedInput>>,\n  upsert?: Maybe<Array<ReferendumStatusUpsertWithWhereUniqueWithoutReferendumInput>>,\n};\n\nexport type ReferendumStatusUpdateManyWithWhereNestedInput = {\n  data: ReferendumStatusUpdateManyDataInput,\n  where: ReferendumStatusScalarWhereInput,\n};\n\nexport type ReferendumStatusUpdateWithoutReferendumDataInput = {\n  blockNumber?: Maybe<BlockNumberUpdateOneRequiredInput>,\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type ReferendumStatusUpdateWithWhereUniqueWithoutReferendumInput = {\n  data: ReferendumStatusUpdateWithoutReferendumDataInput,\n  where: ReferendumStatusWhereUniqueInput,\n};\n\nexport type ReferendumStatusUpsertWithWhereUniqueWithoutReferendumInput = {\n  create: ReferendumStatusCreateWithoutReferendumInput,\n  update: ReferendumStatusUpdateWithoutReferendumDataInput,\n  where: ReferendumStatusWhereUniqueInput,\n};\n\nexport type ReferendumStatusWhereInput = {\n  AND?: Maybe<Array<ReferendumStatusWhereInput>>,\n  NOT?: Maybe<Array<ReferendumStatusWhereInput>>,\n  OR?: Maybe<Array<ReferendumStatusWhereInput>>,\n  blockNumber?: Maybe<BlockNumberWhereInput>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  referendum?: Maybe<ReferendumWhereInput>,\n  status?: Maybe<Scalars['String']>,\n  status_contains?: Maybe<Scalars['String']>,\n  status_ends_with?: Maybe<Scalars['String']>,\n  status_gt?: Maybe<Scalars['String']>,\n  status_gte?: Maybe<Scalars['String']>,\n  status_in?: Maybe<Array<Scalars['String']>>,\n  status_lt?: Maybe<Scalars['String']>,\n  status_lte?: Maybe<Scalars['String']>,\n  status_not?: Maybe<Scalars['String']>,\n  status_not_contains?: Maybe<Scalars['String']>,\n  status_not_ends_with?: Maybe<Scalars['String']>,\n  status_not_in?: Maybe<Array<Scalars['String']>>,\n  status_not_starts_with?: Maybe<Scalars['String']>,\n  status_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type ReferendumStatusWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type ReferendumSubscriptionPayload = {\n   __typename?: 'ReferendumSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<Referendum>,\n  previousValues?: Maybe<ReferendumPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type ReferendumSubscriptionWhereInput = {\n  AND?: Maybe<Array<ReferendumSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<ReferendumSubscriptionWhereInput>>,\n  OR?: Maybe<Array<ReferendumSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<ReferendumWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type ReferendumUpdateInput = {\n  delay?: Maybe<Scalars['Int']>,\n  end?: Maybe<Scalars['Int']>,\n  preimage?: Maybe<PreimageUpdateOneWithoutReferendumInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  referendumId?: Maybe<Scalars['Int']>,\n  referendumStatus?: Maybe<ReferendumStatusUpdateManyWithoutReferendumInput>,\n  voteThreshold?: Maybe<Scalars['String']>,\n};\n\nexport type ReferendumUpdateManyMutationInput = {\n  delay?: Maybe<Scalars['Int']>,\n  end?: Maybe<Scalars['Int']>,\n  preimageHash?: Maybe<Scalars['String']>,\n  referendumId?: Maybe<Scalars['Int']>,\n  voteThreshold?: Maybe<Scalars['String']>,\n};\n\nexport type ReferendumUpdateOneRequiredWithoutReferendumStatusInput = {\n  connect?: Maybe<ReferendumWhereUniqueInput>,\n  create?: Maybe<ReferendumCreateWithoutReferendumStatusInput>,\n  update?: Maybe<ReferendumUpdateWithoutReferendumStatusDataInput>,\n  upsert?: Maybe<ReferendumUpsertWithoutReferendumStatusInput>,\n};\n\nexport type ReferendumUpdateOneWithoutPreimageInput = {\n  connect?: Maybe<ReferendumWhereUniqueInput>,\n  create?: Maybe<ReferendumCreateWithoutPreimageInput>,\n  delete?: Maybe<Scalars['Boolean']>,\n  disconnect?: Maybe<Scalars['Boolean']>,\n  update?: Maybe<ReferendumUpdateWithoutPreimageDataInput>,\n  upsert?: Maybe<ReferendumUpsertWithoutPreimageInput>,\n};\n\nexport type ReferendumUpdateWithoutPreimageDataInput = {\n  delay?: Maybe<Scalars['Int']>,\n  end?: Maybe<Scalars['Int']>,\n  preimageHash?: Maybe<Scalars['String']>,\n  referendumId?: Maybe<Scalars['Int']>,\n  referendumStatus?: Maybe<ReferendumStatusUpdateManyWithoutReferendumInput>,\n  voteThreshold?: Maybe<Scalars['String']>,\n};\n\nexport type ReferendumUpdateWithoutReferendumStatusDataInput = {\n  delay?: Maybe<Scalars['Int']>,\n  end?: Maybe<Scalars['Int']>,\n  preimage?: Maybe<PreimageUpdateOneWithoutReferendumInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  referendumId?: Maybe<Scalars['Int']>,\n  voteThreshold?: Maybe<Scalars['String']>,\n};\n\nexport type ReferendumUpsertWithoutPreimageInput = {\n  create: ReferendumCreateWithoutPreimageInput,\n  update: ReferendumUpdateWithoutPreimageDataInput,\n};\n\nexport type ReferendumUpsertWithoutReferendumStatusInput = {\n  create: ReferendumCreateWithoutReferendumStatusInput,\n  update: ReferendumUpdateWithoutReferendumStatusDataInput,\n};\n\nexport type ReferendumWhereInput = {\n  AND?: Maybe<Array<ReferendumWhereInput>>,\n  NOT?: Maybe<Array<ReferendumWhereInput>>,\n  OR?: Maybe<Array<ReferendumWhereInput>>,\n  delay?: Maybe<Scalars['Int']>,\n  delay_gt?: Maybe<Scalars['Int']>,\n  delay_gte?: Maybe<Scalars['Int']>,\n  delay_in?: Maybe<Array<Scalars['Int']>>,\n  delay_lt?: Maybe<Scalars['Int']>,\n  delay_lte?: Maybe<Scalars['Int']>,\n  delay_not?: Maybe<Scalars['Int']>,\n  delay_not_in?: Maybe<Array<Scalars['Int']>>,\n  end?: Maybe<Scalars['Int']>,\n  end_gt?: Maybe<Scalars['Int']>,\n  end_gte?: Maybe<Scalars['Int']>,\n  end_in?: Maybe<Array<Scalars['Int']>>,\n  end_lt?: Maybe<Scalars['Int']>,\n  end_lte?: Maybe<Scalars['Int']>,\n  end_not?: Maybe<Scalars['Int']>,\n  end_not_in?: Maybe<Array<Scalars['Int']>>,\n  id?: Maybe<Scalars['Int']>,\n  id_gt?: Maybe<Scalars['Int']>,\n  id_gte?: Maybe<Scalars['Int']>,\n  id_in?: Maybe<Array<Scalars['Int']>>,\n  id_lt?: Maybe<Scalars['Int']>,\n  id_lte?: Maybe<Scalars['Int']>,\n  id_not?: Maybe<Scalars['Int']>,\n  id_not_in?: Maybe<Array<Scalars['Int']>>,\n  preimage?: Maybe<PreimageWhereInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  preimageHash_contains?: Maybe<Scalars['String']>,\n  preimageHash_ends_with?: Maybe<Scalars['String']>,\n  preimageHash_gt?: Maybe<Scalars['String']>,\n  preimageHash_gte?: Maybe<Scalars['String']>,\n  preimageHash_in?: Maybe<Array<Scalars['String']>>,\n  preimageHash_lt?: Maybe<Scalars['String']>,\n  preimageHash_lte?: Maybe<Scalars['String']>,\n  preimageHash_not?: Maybe<Scalars['String']>,\n  preimageHash_not_contains?: Maybe<Scalars['String']>,\n  preimageHash_not_ends_with?: Maybe<Scalars['String']>,\n  preimageHash_not_in?: Maybe<Array<Scalars['String']>>,\n  preimageHash_not_starts_with?: Maybe<Scalars['String']>,\n  preimageHash_starts_with?: Maybe<Scalars['String']>,\n  referendumId?: Maybe<Scalars['Int']>,\n  referendumId_gt?: Maybe<Scalars['Int']>,\n  referendumId_gte?: Maybe<Scalars['Int']>,\n  referendumId_in?: Maybe<Array<Scalars['Int']>>,\n  referendumId_lt?: Maybe<Scalars['Int']>,\n  referendumId_lte?: Maybe<Scalars['Int']>,\n  referendumId_not?: Maybe<Scalars['Int']>,\n  referendumId_not_in?: Maybe<Array<Scalars['Int']>>,\n  referendumStatus_every?: Maybe<ReferendumStatusWhereInput>,\n  referendumStatus_none?: Maybe<ReferendumStatusWhereInput>,\n  referendumStatus_some?: Maybe<ReferendumStatusWhereInput>,\n  voteThreshold?: Maybe<Scalars['String']>,\n  voteThreshold_contains?: Maybe<Scalars['String']>,\n  voteThreshold_ends_with?: Maybe<Scalars['String']>,\n  voteThreshold_gt?: Maybe<Scalars['String']>,\n  voteThreshold_gte?: Maybe<Scalars['String']>,\n  voteThreshold_in?: Maybe<Array<Scalars['String']>>,\n  voteThreshold_lt?: Maybe<Scalars['String']>,\n  voteThreshold_lte?: Maybe<Scalars['String']>,\n  voteThreshold_not?: Maybe<Scalars['String']>,\n  voteThreshold_not_contains?: Maybe<Scalars['String']>,\n  voteThreshold_not_ends_with?: Maybe<Scalars['String']>,\n  voteThreshold_not_in?: Maybe<Array<Scalars['String']>>,\n  voteThreshold_not_starts_with?: Maybe<Scalars['String']>,\n  voteThreshold_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type ReferendumWhereInput_Remote_Rel_Public_Onchain_Linksonchain_Referendum = {\n  AND?: Maybe<Array<ReferendumWhereInput>>,\n  NOT?: Maybe<Array<ReferendumWhereInput>>,\n  OR?: Maybe<Array<ReferendumWhereInput>>,\n  delay?: Maybe<Scalars['Int']>,\n  delay_gt?: Maybe<Scalars['Int']>,\n  delay_gte?: Maybe<Scalars['Int']>,\n  delay_in?: Maybe<Array<Scalars['Int']>>,\n  delay_lt?: Maybe<Scalars['Int']>,\n  delay_lte?: Maybe<Scalars['Int']>,\n  delay_not?: Maybe<Scalars['Int']>,\n  delay_not_in?: Maybe<Array<Scalars['Int']>>,\n  end?: Maybe<Scalars['Int']>,\n  end_gt?: Maybe<Scalars['Int']>,\n  end_gte?: Maybe<Scalars['Int']>,\n  end_in?: Maybe<Array<Scalars['Int']>>,\n  end_lt?: Maybe<Scalars['Int']>,\n  end_lte?: Maybe<Scalars['Int']>,\n  end_not?: Maybe<Scalars['Int']>,\n  end_not_in?: Maybe<Array<Scalars['Int']>>,\n  id?: Maybe<Scalars['Int']>,\n  id_gt?: Maybe<Scalars['Int']>,\n  id_gte?: Maybe<Scalars['Int']>,\n  id_in?: Maybe<Array<Scalars['Int']>>,\n  id_lt?: Maybe<Scalars['Int']>,\n  id_lte?: Maybe<Scalars['Int']>,\n  id_not?: Maybe<Scalars['Int']>,\n  id_not_in?: Maybe<Array<Scalars['Int']>>,\n  preimage?: Maybe<PreimageWhereInput>,\n  preimageHash?: Maybe<Scalars['String']>,\n  preimageHash_contains?: Maybe<Scalars['String']>,\n  preimageHash_ends_with?: Maybe<Scalars['String']>,\n  preimageHash_gt?: Maybe<Scalars['String']>,\n  preimageHash_gte?: Maybe<Scalars['String']>,\n  preimageHash_in?: Maybe<Array<Scalars['String']>>,\n  preimageHash_lt?: Maybe<Scalars['String']>,\n  preimageHash_lte?: Maybe<Scalars['String']>,\n  preimageHash_not?: Maybe<Scalars['String']>,\n  preimageHash_not_contains?: Maybe<Scalars['String']>,\n  preimageHash_not_ends_with?: Maybe<Scalars['String']>,\n  preimageHash_not_in?: Maybe<Array<Scalars['String']>>,\n  preimageHash_not_starts_with?: Maybe<Scalars['String']>,\n  preimageHash_starts_with?: Maybe<Scalars['String']>,\n  referendumId_gt?: Maybe<Scalars['Int']>,\n  referendumId_gte?: Maybe<Scalars['Int']>,\n  referendumId_in?: Maybe<Array<Scalars['Int']>>,\n  referendumId_lt?: Maybe<Scalars['Int']>,\n  referendumId_lte?: Maybe<Scalars['Int']>,\n  referendumId_not?: Maybe<Scalars['Int']>,\n  referendumId_not_in?: Maybe<Array<Scalars['Int']>>,\n  referendumStatus_every?: Maybe<ReferendumStatusWhereInput>,\n  referendumStatus_none?: Maybe<ReferendumStatusWhereInput>,\n  referendumStatus_some?: Maybe<ReferendumStatusWhereInput>,\n  voteThreshold?: Maybe<Scalars['String']>,\n  voteThreshold_contains?: Maybe<Scalars['String']>,\n  voteThreshold_ends_with?: Maybe<Scalars['String']>,\n  voteThreshold_gt?: Maybe<Scalars['String']>,\n  voteThreshold_gte?: Maybe<Scalars['String']>,\n  voteThreshold_in?: Maybe<Array<Scalars['String']>>,\n  voteThreshold_lt?: Maybe<Scalars['String']>,\n  voteThreshold_lte?: Maybe<Scalars['String']>,\n  voteThreshold_not?: Maybe<Scalars['String']>,\n  voteThreshold_not_contains?: Maybe<Scalars['String']>,\n  voteThreshold_not_ends_with?: Maybe<Scalars['String']>,\n  voteThreshold_not_in?: Maybe<Array<Scalars['String']>>,\n  voteThreshold_not_starts_with?: Maybe<Scalars['String']>,\n  voteThreshold_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type ReferendumWhereUniqueInput = {\n  id?: Maybe<Scalars['Int']>,\n  referendumId?: Maybe<Scalars['Int']>,\n};\n\nexport type Reward = Node & {\n   __typename?: 'Reward',\n  authoredBlock: BlockNumber,\n  id: Scalars['ID'],\n  sessionIndex: Session,\n  treasuryReward: Scalars['String'],\n  validatorReward: Scalars['String'],\n};\n\nexport type RewardConnection = {\n   __typename?: 'RewardConnection',\n  aggregate: AggregateReward,\n  edges: Array<Maybe<RewardEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type RewardCreateInput = {\n  authoredBlock: BlockNumberCreateOneInput,\n  id?: Maybe<Scalars['ID']>,\n  sessionIndex: SessionCreateOneInput,\n  treasuryReward: Scalars['String'],\n  validatorReward: Scalars['String'],\n};\n\nexport type RewardEdge = {\n   __typename?: 'RewardEdge',\n  cursor: Scalars['String'],\n  node: Reward,\n};\n\nexport enum RewardOrderByInput {\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  TreasuryRewardAsc = 'treasuryReward_ASC',\n  TreasuryRewardDesc = 'treasuryReward_DESC',\n  ValidatorRewardAsc = 'validatorReward_ASC',\n  ValidatorRewardDesc = 'validatorReward_DESC'\n}\n\nexport type RewardPreviousValues = {\n   __typename?: 'RewardPreviousValues',\n  id: Scalars['ID'],\n  treasuryReward: Scalars['String'],\n  validatorReward: Scalars['String'],\n};\n\nexport type RewardSubscriptionPayload = {\n   __typename?: 'RewardSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<Reward>,\n  previousValues?: Maybe<RewardPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type RewardSubscriptionWhereInput = {\n  AND?: Maybe<Array<RewardSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<RewardSubscriptionWhereInput>>,\n  OR?: Maybe<Array<RewardSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<RewardWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type RewardUpdateInput = {\n  authoredBlock?: Maybe<BlockNumberUpdateOneRequiredInput>,\n  sessionIndex?: Maybe<SessionUpdateOneRequiredInput>,\n  treasuryReward?: Maybe<Scalars['String']>,\n  validatorReward?: Maybe<Scalars['String']>,\n};\n\nexport type RewardUpdateManyMutationInput = {\n  treasuryReward?: Maybe<Scalars['String']>,\n  validatorReward?: Maybe<Scalars['String']>,\n};\n\nexport type RewardWhereInput = {\n  AND?: Maybe<Array<RewardWhereInput>>,\n  NOT?: Maybe<Array<RewardWhereInput>>,\n  OR?: Maybe<Array<RewardWhereInput>>,\n  authoredBlock?: Maybe<BlockNumberWhereInput>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  sessionIndex?: Maybe<SessionWhereInput>,\n  treasuryReward?: Maybe<Scalars['String']>,\n  treasuryReward_contains?: Maybe<Scalars['String']>,\n  treasuryReward_ends_with?: Maybe<Scalars['String']>,\n  treasuryReward_gt?: Maybe<Scalars['String']>,\n  treasuryReward_gte?: Maybe<Scalars['String']>,\n  treasuryReward_in?: Maybe<Array<Scalars['String']>>,\n  treasuryReward_lt?: Maybe<Scalars['String']>,\n  treasuryReward_lte?: Maybe<Scalars['String']>,\n  treasuryReward_not?: Maybe<Scalars['String']>,\n  treasuryReward_not_contains?: Maybe<Scalars['String']>,\n  treasuryReward_not_ends_with?: Maybe<Scalars['String']>,\n  treasuryReward_not_in?: Maybe<Array<Scalars['String']>>,\n  treasuryReward_not_starts_with?: Maybe<Scalars['String']>,\n  treasuryReward_starts_with?: Maybe<Scalars['String']>,\n  validatorReward?: Maybe<Scalars['String']>,\n  validatorReward_contains?: Maybe<Scalars['String']>,\n  validatorReward_ends_with?: Maybe<Scalars['String']>,\n  validatorReward_gt?: Maybe<Scalars['String']>,\n  validatorReward_gte?: Maybe<Scalars['String']>,\n  validatorReward_in?: Maybe<Array<Scalars['String']>>,\n  validatorReward_lt?: Maybe<Scalars['String']>,\n  validatorReward_lte?: Maybe<Scalars['String']>,\n  validatorReward_not?: Maybe<Scalars['String']>,\n  validatorReward_not_contains?: Maybe<Scalars['String']>,\n  validatorReward_not_ends_with?: Maybe<Scalars['String']>,\n  validatorReward_not_in?: Maybe<Array<Scalars['String']>>,\n  validatorReward_not_starts_with?: Maybe<Scalars['String']>,\n  validatorReward_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type RewardWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type Session = Node & {\n   __typename?: 'Session',\n  id: Scalars['ID'],\n  index: Scalars['Int'],\n  start: BlockNumber,\n};\n\nexport type SessionConnection = {\n   __typename?: 'SessionConnection',\n  aggregate: AggregateSession,\n  edges: Array<Maybe<SessionEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type SessionCreateInput = {\n  id?: Maybe<Scalars['ID']>,\n  index: Scalars['Int'],\n  start: BlockNumberCreateOneInput,\n};\n\nexport type SessionCreateOneInput = {\n  connect?: Maybe<SessionWhereUniqueInput>,\n  create?: Maybe<SessionCreateInput>,\n};\n\nexport type SessionEdge = {\n   __typename?: 'SessionEdge',\n  cursor: Scalars['String'],\n  node: Session,\n};\n\nexport enum SessionOrderByInput {\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  IndexAsc = 'index_ASC',\n  IndexDesc = 'index_DESC'\n}\n\nexport type SessionPreviousValues = {\n   __typename?: 'SessionPreviousValues',\n  id: Scalars['ID'],\n  index: Scalars['Int'],\n};\n\nexport type SessionSubscriptionPayload = {\n   __typename?: 'SessionSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<Session>,\n  previousValues?: Maybe<SessionPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type SessionSubscriptionWhereInput = {\n  AND?: Maybe<Array<SessionSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<SessionSubscriptionWhereInput>>,\n  OR?: Maybe<Array<SessionSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<SessionWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type SessionUpdateDataInput = {\n  index?: Maybe<Scalars['Int']>,\n  start?: Maybe<BlockNumberUpdateOneRequiredInput>,\n};\n\nexport type SessionUpdateInput = {\n  index?: Maybe<Scalars['Int']>,\n  start?: Maybe<BlockNumberUpdateOneRequiredInput>,\n};\n\nexport type SessionUpdateManyMutationInput = {\n  index?: Maybe<Scalars['Int']>,\n};\n\nexport type SessionUpdateOneRequiredInput = {\n  connect?: Maybe<SessionWhereUniqueInput>,\n  create?: Maybe<SessionCreateInput>,\n  update?: Maybe<SessionUpdateDataInput>,\n  upsert?: Maybe<SessionUpsertNestedInput>,\n};\n\nexport type SessionUpsertNestedInput = {\n  create: SessionCreateInput,\n  update: SessionUpdateDataInput,\n};\n\nexport type SessionWhereInput = {\n  AND?: Maybe<Array<SessionWhereInput>>,\n  NOT?: Maybe<Array<SessionWhereInput>>,\n  OR?: Maybe<Array<SessionWhereInput>>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  index?: Maybe<Scalars['Int']>,\n  index_gt?: Maybe<Scalars['Int']>,\n  index_gte?: Maybe<Scalars['Int']>,\n  index_in?: Maybe<Array<Scalars['Int']>>,\n  index_lt?: Maybe<Scalars['Int']>,\n  index_lte?: Maybe<Scalars['Int']>,\n  index_not?: Maybe<Scalars['Int']>,\n  index_not_in?: Maybe<Array<Scalars['Int']>>,\n  start?: Maybe<BlockNumberWhereInput>,\n};\n\nexport type SessionWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n  index?: Maybe<Scalars['Int']>,\n};\n\nexport type Slashing = Node & {\n   __typename?: 'Slashing',\n  amount: Scalars['String'],\n  blockNumber: BlockNumber,\n  id: Scalars['ID'],\n  who: Scalars['String'],\n};\n\nexport type SlashingConnection = {\n   __typename?: 'SlashingConnection',\n  aggregate: AggregateSlashing,\n  edges: Array<Maybe<SlashingEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type SlashingCreateInput = {\n  amount: Scalars['String'],\n  blockNumber: BlockNumberCreateOneInput,\n  id?: Maybe<Scalars['ID']>,\n  who: Scalars['String'],\n};\n\nexport type SlashingEdge = {\n   __typename?: 'SlashingEdge',\n  cursor: Scalars['String'],\n  node: Slashing,\n};\n\nexport enum SlashingOrderByInput {\n  AmountAsc = 'amount_ASC',\n  AmountDesc = 'amount_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  WhoAsc = 'who_ASC',\n  WhoDesc = 'who_DESC'\n}\n\nexport type SlashingPreviousValues = {\n   __typename?: 'SlashingPreviousValues',\n  amount: Scalars['String'],\n  id: Scalars['ID'],\n  who: Scalars['String'],\n};\n\nexport type SlashingSubscriptionPayload = {\n   __typename?: 'SlashingSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<Slashing>,\n  previousValues?: Maybe<SlashingPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type SlashingSubscriptionWhereInput = {\n  AND?: Maybe<Array<SlashingSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<SlashingSubscriptionWhereInput>>,\n  OR?: Maybe<Array<SlashingSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<SlashingWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type SlashingUpdateInput = {\n  amount?: Maybe<Scalars['String']>,\n  blockNumber?: Maybe<BlockNumberUpdateOneRequiredInput>,\n  who?: Maybe<Scalars['String']>,\n};\n\nexport type SlashingUpdateManyMutationInput = {\n  amount?: Maybe<Scalars['String']>,\n  who?: Maybe<Scalars['String']>,\n};\n\nexport type SlashingWhereInput = {\n  AND?: Maybe<Array<SlashingWhereInput>>,\n  NOT?: Maybe<Array<SlashingWhereInput>>,\n  OR?: Maybe<Array<SlashingWhereInput>>,\n  amount?: Maybe<Scalars['String']>,\n  amount_contains?: Maybe<Scalars['String']>,\n  amount_ends_with?: Maybe<Scalars['String']>,\n  amount_gt?: Maybe<Scalars['String']>,\n  amount_gte?: Maybe<Scalars['String']>,\n  amount_in?: Maybe<Array<Scalars['String']>>,\n  amount_lt?: Maybe<Scalars['String']>,\n  amount_lte?: Maybe<Scalars['String']>,\n  amount_not?: Maybe<Scalars['String']>,\n  amount_not_contains?: Maybe<Scalars['String']>,\n  amount_not_ends_with?: Maybe<Scalars['String']>,\n  amount_not_in?: Maybe<Array<Scalars['String']>>,\n  amount_not_starts_with?: Maybe<Scalars['String']>,\n  amount_starts_with?: Maybe<Scalars['String']>,\n  blockNumber?: Maybe<BlockNumberWhereInput>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  who?: Maybe<Scalars['String']>,\n  who_contains?: Maybe<Scalars['String']>,\n  who_ends_with?: Maybe<Scalars['String']>,\n  who_gt?: Maybe<Scalars['String']>,\n  who_gte?: Maybe<Scalars['String']>,\n  who_in?: Maybe<Array<Scalars['String']>>,\n  who_lt?: Maybe<Scalars['String']>,\n  who_lte?: Maybe<Scalars['String']>,\n  who_not?: Maybe<Scalars['String']>,\n  who_not_contains?: Maybe<Scalars['String']>,\n  who_not_ends_with?: Maybe<Scalars['String']>,\n  who_not_in?: Maybe<Array<Scalars['String']>>,\n  who_not_starts_with?: Maybe<Scalars['String']>,\n  who_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type SlashingWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n  who?: Maybe<Scalars['String']>,\n};\n\nexport type Stake = Node & {\n   __typename?: 'Stake',\n  blockNumber: BlockNumber,\n  id: Scalars['ID'],\n  totalStake: Scalars['String'],\n};\n\nexport type StakeConnection = {\n   __typename?: 'StakeConnection',\n  aggregate: AggregateStake,\n  edges: Array<Maybe<StakeEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type StakeCreateInput = {\n  blockNumber: BlockNumberCreateOneInput,\n  id?: Maybe<Scalars['ID']>,\n  totalStake: Scalars['String'],\n};\n\nexport type StakeEdge = {\n   __typename?: 'StakeEdge',\n  cursor: Scalars['String'],\n  node: Stake,\n};\n\nexport enum StakeOrderByInput {\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  TotalStakeAsc = 'totalStake_ASC',\n  TotalStakeDesc = 'totalStake_DESC'\n}\n\nexport type StakePreviousValues = {\n   __typename?: 'StakePreviousValues',\n  id: Scalars['ID'],\n  totalStake: Scalars['String'],\n};\n\nexport type StakeSubscriptionPayload = {\n   __typename?: 'StakeSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<Stake>,\n  previousValues?: Maybe<StakePreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type StakeSubscriptionWhereInput = {\n  AND?: Maybe<Array<StakeSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<StakeSubscriptionWhereInput>>,\n  OR?: Maybe<Array<StakeSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<StakeWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type StakeUpdateInput = {\n  blockNumber?: Maybe<BlockNumberUpdateOneRequiredInput>,\n  totalStake?: Maybe<Scalars['String']>,\n};\n\nexport type StakeUpdateManyMutationInput = {\n  totalStake?: Maybe<Scalars['String']>,\n};\n\nexport type StakeWhereInput = {\n  AND?: Maybe<Array<StakeWhereInput>>,\n  NOT?: Maybe<Array<StakeWhereInput>>,\n  OR?: Maybe<Array<StakeWhereInput>>,\n  blockNumber?: Maybe<BlockNumberWhereInput>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  totalStake?: Maybe<Scalars['String']>,\n  totalStake_contains?: Maybe<Scalars['String']>,\n  totalStake_ends_with?: Maybe<Scalars['String']>,\n  totalStake_gt?: Maybe<Scalars['String']>,\n  totalStake_gte?: Maybe<Scalars['String']>,\n  totalStake_in?: Maybe<Array<Scalars['String']>>,\n  totalStake_lt?: Maybe<Scalars['String']>,\n  totalStake_lte?: Maybe<Scalars['String']>,\n  totalStake_not?: Maybe<Scalars['String']>,\n  totalStake_not_contains?: Maybe<Scalars['String']>,\n  totalStake_not_ends_with?: Maybe<Scalars['String']>,\n  totalStake_not_in?: Maybe<Array<Scalars['String']>>,\n  totalStake_not_starts_with?: Maybe<Scalars['String']>,\n  totalStake_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type StakeWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type String_Comparison_Exp = {\n  _eq?: Maybe<Scalars['String']>,\n  _gt?: Maybe<Scalars['String']>,\n  _gte?: Maybe<Scalars['String']>,\n  _ilike?: Maybe<Scalars['String']>,\n  _in?: Maybe<Array<Scalars['String']>>,\n  _is_null?: Maybe<Scalars['Boolean']>,\n  _like?: Maybe<Scalars['String']>,\n  _lt?: Maybe<Scalars['String']>,\n  _lte?: Maybe<Scalars['String']>,\n  _neq?: Maybe<Scalars['String']>,\n  _nilike?: Maybe<Scalars['String']>,\n  _nin?: Maybe<Array<Scalars['String']>>,\n  _nlike?: Maybe<Scalars['String']>,\n  _nsimilar?: Maybe<Scalars['String']>,\n  _similar?: Maybe<Scalars['String']>,\n};\n\nexport type Subscription = {\n   __typename?: 'Subscription',\n  subscribed?: Maybe<Scalars['Boolean']>,\n};\n\nexport type Subscription_Root = {\n   __typename?: 'subscription_root',\n  comment_reactions: Array<Comment_Reactions>,\n  comment_reactions_aggregate: Comment_Reactions_Aggregate,\n  comment_reactions_by_pk?: Maybe<Comment_Reactions>,\n  comments: Array<Comments>,\n  comments_aggregate: Comments_Aggregate,\n  comments_by_pk?: Maybe<Comments>,\n  onchain_links: Array<Onchain_Links>,\n  onchain_links_aggregate: Onchain_Links_Aggregate,\n  onchain_links_by_pk?: Maybe<Onchain_Links>,\n  post_reactions: Array<Post_Reactions>,\n  post_reactions_aggregate: Post_Reactions_Aggregate,\n  post_reactions_by_pk?: Maybe<Post_Reactions>,\n  post_topics: Array<Post_Topics>,\n  post_topics_aggregate: Post_Topics_Aggregate,\n  post_topics_by_pk?: Maybe<Post_Topics>,\n  post_types: Array<Post_Types>,\n  post_types_aggregate: Post_Types_Aggregate,\n  post_types_by_pk?: Maybe<Post_Types>,\n  posts: Array<Posts>,\n  posts_aggregate: Posts_Aggregate,\n  posts_by_pk?: Maybe<Posts>,\n};\n\n\nexport type Subscription_RootComment_ReactionsArgs = {\n  distinct_on?: Maybe<Array<Comment_Reactions_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Comment_Reactions_Order_By>>,\n  where?: Maybe<Comment_Reactions_Bool_Exp>\n};\n\n\nexport type Subscription_RootComment_Reactions_AggregateArgs = {\n  distinct_on?: Maybe<Array<Comment_Reactions_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Comment_Reactions_Order_By>>,\n  where?: Maybe<Comment_Reactions_Bool_Exp>\n};\n\n\nexport type Subscription_RootComment_Reactions_By_PkArgs = {\n  id: Scalars['Int']\n};\n\n\nexport type Subscription_RootCommentsArgs = {\n  distinct_on?: Maybe<Array<Comments_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Comments_Order_By>>,\n  where?: Maybe<Comments_Bool_Exp>\n};\n\n\nexport type Subscription_RootComments_AggregateArgs = {\n  distinct_on?: Maybe<Array<Comments_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Comments_Order_By>>,\n  where?: Maybe<Comments_Bool_Exp>\n};\n\n\nexport type Subscription_RootComments_By_PkArgs = {\n  id: Scalars['uuid']\n};\n\n\nexport type Subscription_RootOnchain_LinksArgs = {\n  distinct_on?: Maybe<Array<Onchain_Links_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Onchain_Links_Order_By>>,\n  where?: Maybe<Onchain_Links_Bool_Exp>\n};\n\n\nexport type Subscription_RootOnchain_Links_AggregateArgs = {\n  distinct_on?: Maybe<Array<Onchain_Links_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Onchain_Links_Order_By>>,\n  where?: Maybe<Onchain_Links_Bool_Exp>\n};\n\n\nexport type Subscription_RootOnchain_Links_By_PkArgs = {\n  id: Scalars['Int']\n};\n\n\nexport type Subscription_RootPost_ReactionsArgs = {\n  distinct_on?: Maybe<Array<Post_Reactions_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Post_Reactions_Order_By>>,\n  where?: Maybe<Post_Reactions_Bool_Exp>\n};\n\n\nexport type Subscription_RootPost_Reactions_AggregateArgs = {\n  distinct_on?: Maybe<Array<Post_Reactions_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Post_Reactions_Order_By>>,\n  where?: Maybe<Post_Reactions_Bool_Exp>\n};\n\n\nexport type Subscription_RootPost_Reactions_By_PkArgs = {\n  id: Scalars['Int']\n};\n\n\nexport type Subscription_RootPost_TopicsArgs = {\n  distinct_on?: Maybe<Array<Post_Topics_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Post_Topics_Order_By>>,\n  where?: Maybe<Post_Topics_Bool_Exp>\n};\n\n\nexport type Subscription_RootPost_Topics_AggregateArgs = {\n  distinct_on?: Maybe<Array<Post_Topics_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Post_Topics_Order_By>>,\n  where?: Maybe<Post_Topics_Bool_Exp>\n};\n\n\nexport type Subscription_RootPost_Topics_By_PkArgs = {\n  id: Scalars['Int']\n};\n\n\nexport type Subscription_RootPost_TypesArgs = {\n  distinct_on?: Maybe<Array<Post_Types_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Post_Types_Order_By>>,\n  where?: Maybe<Post_Types_Bool_Exp>\n};\n\n\nexport type Subscription_RootPost_Types_AggregateArgs = {\n  distinct_on?: Maybe<Array<Post_Types_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Post_Types_Order_By>>,\n  where?: Maybe<Post_Types_Bool_Exp>\n};\n\n\nexport type Subscription_RootPost_Types_By_PkArgs = {\n  id: Scalars['Int']\n};\n\n\nexport type Subscription_RootPostsArgs = {\n  distinct_on?: Maybe<Array<Posts_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Posts_Order_By>>,\n  where?: Maybe<Posts_Bool_Exp>\n};\n\n\nexport type Subscription_RootPosts_AggregateArgs = {\n  distinct_on?: Maybe<Array<Posts_Select_Column>>,\n  limit?: Maybe<Scalars['Int']>,\n  offset?: Maybe<Scalars['Int']>,\n  order_by?: Maybe<Array<Posts_Order_By>>,\n  where?: Maybe<Posts_Bool_Exp>\n};\n\n\nexport type Subscription_RootPosts_By_PkArgs = {\n  id: Scalars['Int']\n};\n\n\nexport type Timestamp_Comparison_Exp = {\n  _eq?: Maybe<Scalars['timestamp']>,\n  _gt?: Maybe<Scalars['timestamp']>,\n  _gte?: Maybe<Scalars['timestamp']>,\n  _in?: Maybe<Array<Scalars['timestamp']>>,\n  _is_null?: Maybe<Scalars['Boolean']>,\n  _lt?: Maybe<Scalars['timestamp']>,\n  _lte?: Maybe<Scalars['timestamp']>,\n  _neq?: Maybe<Scalars['timestamp']>,\n  _nin?: Maybe<Array<Scalars['timestamp']>>,\n};\n\n\nexport type Timestamptz_Comparison_Exp = {\n  _eq?: Maybe<Scalars['timestamptz']>,\n  _gt?: Maybe<Scalars['timestamptz']>,\n  _gte?: Maybe<Scalars['timestamptz']>,\n  _in?: Maybe<Array<Scalars['timestamptz']>>,\n  _is_null?: Maybe<Scalars['Boolean']>,\n  _lt?: Maybe<Scalars['timestamptz']>,\n  _lte?: Maybe<Scalars['timestamptz']>,\n  _neq?: Maybe<Scalars['timestamptz']>,\n  _nin?: Maybe<Array<Scalars['timestamptz']>>,\n};\n\nexport type Token = {\n   __typename?: 'Token',\n  token?: Maybe<Scalars['String']>,\n};\n\nexport type TotalIssuance = Node & {\n   __typename?: 'TotalIssuance',\n  amount: Scalars['String'],\n  blockNumber: BlockNumber,\n  id: Scalars['ID'],\n};\n\nexport type TotalIssuanceConnection = {\n   __typename?: 'TotalIssuanceConnection',\n  aggregate: AggregateTotalIssuance,\n  edges: Array<Maybe<TotalIssuanceEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type TotalIssuanceCreateInput = {\n  amount: Scalars['String'],\n  blockNumber: BlockNumberCreateOneInput,\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type TotalIssuanceEdge = {\n   __typename?: 'TotalIssuanceEdge',\n  cursor: Scalars['String'],\n  node: TotalIssuance,\n};\n\nexport enum TotalIssuanceOrderByInput {\n  AmountAsc = 'amount_ASC',\n  AmountDesc = 'amount_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC'\n}\n\nexport type TotalIssuancePreviousValues = {\n   __typename?: 'TotalIssuancePreviousValues',\n  amount: Scalars['String'],\n  id: Scalars['ID'],\n};\n\nexport type TotalIssuanceSubscriptionPayload = {\n   __typename?: 'TotalIssuanceSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<TotalIssuance>,\n  previousValues?: Maybe<TotalIssuancePreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type TotalIssuanceSubscriptionWhereInput = {\n  AND?: Maybe<Array<TotalIssuanceSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<TotalIssuanceSubscriptionWhereInput>>,\n  OR?: Maybe<Array<TotalIssuanceSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<TotalIssuanceWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type TotalIssuanceUpdateInput = {\n  amount?: Maybe<Scalars['String']>,\n  blockNumber?: Maybe<BlockNumberUpdateOneRequiredInput>,\n};\n\nexport type TotalIssuanceUpdateManyMutationInput = {\n  amount?: Maybe<Scalars['String']>,\n};\n\nexport type TotalIssuanceWhereInput = {\n  AND?: Maybe<Array<TotalIssuanceWhereInput>>,\n  NOT?: Maybe<Array<TotalIssuanceWhereInput>>,\n  OR?: Maybe<Array<TotalIssuanceWhereInput>>,\n  amount?: Maybe<Scalars['String']>,\n  amount_contains?: Maybe<Scalars['String']>,\n  amount_ends_with?: Maybe<Scalars['String']>,\n  amount_gt?: Maybe<Scalars['String']>,\n  amount_gte?: Maybe<Scalars['String']>,\n  amount_in?: Maybe<Array<Scalars['String']>>,\n  amount_lt?: Maybe<Scalars['String']>,\n  amount_lte?: Maybe<Scalars['String']>,\n  amount_not?: Maybe<Scalars['String']>,\n  amount_not_contains?: Maybe<Scalars['String']>,\n  amount_not_ends_with?: Maybe<Scalars['String']>,\n  amount_not_in?: Maybe<Array<Scalars['String']>>,\n  amount_not_starts_with?: Maybe<Scalars['String']>,\n  amount_starts_with?: Maybe<Scalars['String']>,\n  blockNumber?: Maybe<BlockNumberWhereInput>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n};\n\nexport type TotalIssuanceWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type TreasurySpendProposal = {\n   __typename?: 'TreasurySpendProposal',\n  beneficiary: Scalars['String'],\n  bond: Scalars['String'],\n  id: Scalars['Int'],\n  motion?: Maybe<Motion>,\n  proposer: Scalars['String'],\n  treasuryProposalId: Scalars['Int'],\n  treasuryStatus?: Maybe<Array<TreasuryStatus>>,\n  value: Scalars['String'],\n};\n\n\nexport type TreasurySpendProposalTreasuryStatusArgs = {\n  after?: Maybe<Scalars['String']>,\n  before?: Maybe<Scalars['String']>,\n  first?: Maybe<Scalars['Int']>,\n  last?: Maybe<Scalars['Int']>,\n  orderBy?: Maybe<TreasuryStatusOrderByInput>,\n  skip?: Maybe<Scalars['Int']>,\n  where?: Maybe<TreasuryStatusWhereInput>\n};\n\nexport type TreasurySpendProposalConnection = {\n   __typename?: 'TreasurySpendProposalConnection',\n  aggregate: AggregateTreasurySpendProposal,\n  edges: Array<Maybe<TreasurySpendProposalEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type TreasurySpendProposalCreateInput = {\n  beneficiary: Scalars['String'],\n  bond: Scalars['String'],\n  motion?: Maybe<MotionCreateOneWithoutTreasurySpendProposalInput>,\n  proposer: Scalars['String'],\n  treasuryProposalId: Scalars['Int'],\n  treasuryStatus?: Maybe<TreasuryStatusCreateManyWithoutTreasurySpendProposalInput>,\n  value: Scalars['String'],\n};\n\nexport type TreasurySpendProposalCreateOneWithoutMotionInput = {\n  connect?: Maybe<TreasurySpendProposalWhereUniqueInput>,\n  create?: Maybe<TreasurySpendProposalCreateWithoutMotionInput>,\n};\n\nexport type TreasurySpendProposalCreateOneWithoutTreasuryStatusInput = {\n  connect?: Maybe<TreasurySpendProposalWhereUniqueInput>,\n  create?: Maybe<TreasurySpendProposalCreateWithoutTreasuryStatusInput>,\n};\n\nexport type TreasurySpendProposalCreateWithoutMotionInput = {\n  beneficiary: Scalars['String'],\n  bond: Scalars['String'],\n  proposer: Scalars['String'],\n  treasuryProposalId: Scalars['Int'],\n  treasuryStatus?: Maybe<TreasuryStatusCreateManyWithoutTreasurySpendProposalInput>,\n  value: Scalars['String'],\n};\n\nexport type TreasurySpendProposalCreateWithoutTreasuryStatusInput = {\n  beneficiary: Scalars['String'],\n  bond: Scalars['String'],\n  motion?: Maybe<MotionCreateOneWithoutTreasurySpendProposalInput>,\n  proposer: Scalars['String'],\n  treasuryProposalId: Scalars['Int'],\n  value: Scalars['String'],\n};\n\nexport type TreasurySpendProposalEdge = {\n   __typename?: 'TreasurySpendProposalEdge',\n  cursor: Scalars['String'],\n  node: TreasurySpendProposal,\n};\n\nexport enum TreasurySpendProposalOrderByInput {\n  BeneficiaryAsc = 'beneficiary_ASC',\n  BeneficiaryDesc = 'beneficiary_DESC',\n  BondAsc = 'bond_ASC',\n  BondDesc = 'bond_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  ProposerAsc = 'proposer_ASC',\n  ProposerDesc = 'proposer_DESC',\n  TreasuryProposalIdAsc = 'treasuryProposalId_ASC',\n  TreasuryProposalIdDesc = 'treasuryProposalId_DESC',\n  ValueAsc = 'value_ASC',\n  ValueDesc = 'value_DESC'\n}\n\nexport type TreasurySpendProposalPreviousValues = {\n   __typename?: 'TreasurySpendProposalPreviousValues',\n  beneficiary: Scalars['String'],\n  bond: Scalars['String'],\n  id: Scalars['Int'],\n  proposer: Scalars['String'],\n  treasuryProposalId: Scalars['Int'],\n  value: Scalars['String'],\n};\n\nexport type TreasurySpendProposalSubscriptionPayload = {\n   __typename?: 'TreasurySpendProposalSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<TreasurySpendProposal>,\n  previousValues?: Maybe<TreasurySpendProposalPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type TreasurySpendProposalSubscriptionWhereInput = {\n  AND?: Maybe<Array<TreasurySpendProposalSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<TreasurySpendProposalSubscriptionWhereInput>>,\n  OR?: Maybe<Array<TreasurySpendProposalSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<TreasurySpendProposalWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type TreasurySpendProposalUpdateInput = {\n  beneficiary?: Maybe<Scalars['String']>,\n  bond?: Maybe<Scalars['String']>,\n  motion?: Maybe<MotionUpdateOneWithoutTreasurySpendProposalInput>,\n  proposer?: Maybe<Scalars['String']>,\n  treasuryProposalId?: Maybe<Scalars['Int']>,\n  treasuryStatus?: Maybe<TreasuryStatusUpdateManyWithoutTreasurySpendProposalInput>,\n  value?: Maybe<Scalars['String']>,\n};\n\nexport type TreasurySpendProposalUpdateManyMutationInput = {\n  beneficiary?: Maybe<Scalars['String']>,\n  bond?: Maybe<Scalars['String']>,\n  proposer?: Maybe<Scalars['String']>,\n  treasuryProposalId?: Maybe<Scalars['Int']>,\n  value?: Maybe<Scalars['String']>,\n};\n\nexport type TreasurySpendProposalUpdateOneRequiredWithoutTreasuryStatusInput = {\n  connect?: Maybe<TreasurySpendProposalWhereUniqueInput>,\n  create?: Maybe<TreasurySpendProposalCreateWithoutTreasuryStatusInput>,\n  update?: Maybe<TreasurySpendProposalUpdateWithoutTreasuryStatusDataInput>,\n  upsert?: Maybe<TreasurySpendProposalUpsertWithoutTreasuryStatusInput>,\n};\n\nexport type TreasurySpendProposalUpdateOneWithoutMotionInput = {\n  connect?: Maybe<TreasurySpendProposalWhereUniqueInput>,\n  create?: Maybe<TreasurySpendProposalCreateWithoutMotionInput>,\n  delete?: Maybe<Scalars['Boolean']>,\n  disconnect?: Maybe<Scalars['Boolean']>,\n  update?: Maybe<TreasurySpendProposalUpdateWithoutMotionDataInput>,\n  upsert?: Maybe<TreasurySpendProposalUpsertWithoutMotionInput>,\n};\n\nexport type TreasurySpendProposalUpdateWithoutMotionDataInput = {\n  beneficiary?: Maybe<Scalars['String']>,\n  bond?: Maybe<Scalars['String']>,\n  proposer?: Maybe<Scalars['String']>,\n  treasuryProposalId?: Maybe<Scalars['Int']>,\n  treasuryStatus?: Maybe<TreasuryStatusUpdateManyWithoutTreasurySpendProposalInput>,\n  value?: Maybe<Scalars['String']>,\n};\n\nexport type TreasurySpendProposalUpdateWithoutTreasuryStatusDataInput = {\n  beneficiary?: Maybe<Scalars['String']>,\n  bond?: Maybe<Scalars['String']>,\n  motion?: Maybe<MotionUpdateOneWithoutTreasurySpendProposalInput>,\n  proposer?: Maybe<Scalars['String']>,\n  treasuryProposalId?: Maybe<Scalars['Int']>,\n  value?: Maybe<Scalars['String']>,\n};\n\nexport type TreasurySpendProposalUpsertWithoutMotionInput = {\n  create: TreasurySpendProposalCreateWithoutMotionInput,\n  update: TreasurySpendProposalUpdateWithoutMotionDataInput,\n};\n\nexport type TreasurySpendProposalUpsertWithoutTreasuryStatusInput = {\n  create: TreasurySpendProposalCreateWithoutTreasuryStatusInput,\n  update: TreasurySpendProposalUpdateWithoutTreasuryStatusDataInput,\n};\n\nexport type TreasurySpendProposalWhereInput = {\n  AND?: Maybe<Array<TreasurySpendProposalWhereInput>>,\n  NOT?: Maybe<Array<TreasurySpendProposalWhereInput>>,\n  OR?: Maybe<Array<TreasurySpendProposalWhereInput>>,\n  beneficiary?: Maybe<Scalars['String']>,\n  beneficiary_contains?: Maybe<Scalars['String']>,\n  beneficiary_ends_with?: Maybe<Scalars['String']>,\n  beneficiary_gt?: Maybe<Scalars['String']>,\n  beneficiary_gte?: Maybe<Scalars['String']>,\n  beneficiary_in?: Maybe<Array<Scalars['String']>>,\n  beneficiary_lt?: Maybe<Scalars['String']>,\n  beneficiary_lte?: Maybe<Scalars['String']>,\n  beneficiary_not?: Maybe<Scalars['String']>,\n  beneficiary_not_contains?: Maybe<Scalars['String']>,\n  beneficiary_not_ends_with?: Maybe<Scalars['String']>,\n  beneficiary_not_in?: Maybe<Array<Scalars['String']>>,\n  beneficiary_not_starts_with?: Maybe<Scalars['String']>,\n  beneficiary_starts_with?: Maybe<Scalars['String']>,\n  bond?: Maybe<Scalars['String']>,\n  bond_contains?: Maybe<Scalars['String']>,\n  bond_ends_with?: Maybe<Scalars['String']>,\n  bond_gt?: Maybe<Scalars['String']>,\n  bond_gte?: Maybe<Scalars['String']>,\n  bond_in?: Maybe<Array<Scalars['String']>>,\n  bond_lt?: Maybe<Scalars['String']>,\n  bond_lte?: Maybe<Scalars['String']>,\n  bond_not?: Maybe<Scalars['String']>,\n  bond_not_contains?: Maybe<Scalars['String']>,\n  bond_not_ends_with?: Maybe<Scalars['String']>,\n  bond_not_in?: Maybe<Array<Scalars['String']>>,\n  bond_not_starts_with?: Maybe<Scalars['String']>,\n  bond_starts_with?: Maybe<Scalars['String']>,\n  id?: Maybe<Scalars['Int']>,\n  id_gt?: Maybe<Scalars['Int']>,\n  id_gte?: Maybe<Scalars['Int']>,\n  id_in?: Maybe<Array<Scalars['Int']>>,\n  id_lt?: Maybe<Scalars['Int']>,\n  id_lte?: Maybe<Scalars['Int']>,\n  id_not?: Maybe<Scalars['Int']>,\n  id_not_in?: Maybe<Array<Scalars['Int']>>,\n  motion?: Maybe<MotionWhereInput>,\n  proposer?: Maybe<Scalars['String']>,\n  proposer_contains?: Maybe<Scalars['String']>,\n  proposer_ends_with?: Maybe<Scalars['String']>,\n  proposer_gt?: Maybe<Scalars['String']>,\n  proposer_gte?: Maybe<Scalars['String']>,\n  proposer_in?: Maybe<Array<Scalars['String']>>,\n  proposer_lt?: Maybe<Scalars['String']>,\n  proposer_lte?: Maybe<Scalars['String']>,\n  proposer_not?: Maybe<Scalars['String']>,\n  proposer_not_contains?: Maybe<Scalars['String']>,\n  proposer_not_ends_with?: Maybe<Scalars['String']>,\n  proposer_not_in?: Maybe<Array<Scalars['String']>>,\n  proposer_not_starts_with?: Maybe<Scalars['String']>,\n  proposer_starts_with?: Maybe<Scalars['String']>,\n  treasuryProposalId?: Maybe<Scalars['Int']>,\n  treasuryProposalId_gt?: Maybe<Scalars['Int']>,\n  treasuryProposalId_gte?: Maybe<Scalars['Int']>,\n  treasuryProposalId_in?: Maybe<Array<Scalars['Int']>>,\n  treasuryProposalId_lt?: Maybe<Scalars['Int']>,\n  treasuryProposalId_lte?: Maybe<Scalars['Int']>,\n  treasuryProposalId_not?: Maybe<Scalars['Int']>,\n  treasuryProposalId_not_in?: Maybe<Array<Scalars['Int']>>,\n  treasuryStatus_every?: Maybe<TreasuryStatusWhereInput>,\n  treasuryStatus_none?: Maybe<TreasuryStatusWhereInput>,\n  treasuryStatus_some?: Maybe<TreasuryStatusWhereInput>,\n  value?: Maybe<Scalars['String']>,\n  value_contains?: Maybe<Scalars['String']>,\n  value_ends_with?: Maybe<Scalars['String']>,\n  value_gt?: Maybe<Scalars['String']>,\n  value_gte?: Maybe<Scalars['String']>,\n  value_in?: Maybe<Array<Scalars['String']>>,\n  value_lt?: Maybe<Scalars['String']>,\n  value_lte?: Maybe<Scalars['String']>,\n  value_not?: Maybe<Scalars['String']>,\n  value_not_contains?: Maybe<Scalars['String']>,\n  value_not_ends_with?: Maybe<Scalars['String']>,\n  value_not_in?: Maybe<Array<Scalars['String']>>,\n  value_not_starts_with?: Maybe<Scalars['String']>,\n  value_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type TreasurySpendProposalWhereInput_Remote_Rel_Public_Onchain_Linksonchain_Treasury_Spend_Proposal = {\n  AND?: Maybe<Array<TreasurySpendProposalWhereInput>>,\n  NOT?: Maybe<Array<TreasurySpendProposalWhereInput>>,\n  OR?: Maybe<Array<TreasurySpendProposalWhereInput>>,\n  beneficiary?: Maybe<Scalars['String']>,\n  beneficiary_contains?: Maybe<Scalars['String']>,\n  beneficiary_ends_with?: Maybe<Scalars['String']>,\n  beneficiary_gt?: Maybe<Scalars['String']>,\n  beneficiary_gte?: Maybe<Scalars['String']>,\n  beneficiary_in?: Maybe<Array<Scalars['String']>>,\n  beneficiary_lt?: Maybe<Scalars['String']>,\n  beneficiary_lte?: Maybe<Scalars['String']>,\n  beneficiary_not?: Maybe<Scalars['String']>,\n  beneficiary_not_contains?: Maybe<Scalars['String']>,\n  beneficiary_not_ends_with?: Maybe<Scalars['String']>,\n  beneficiary_not_in?: Maybe<Array<Scalars['String']>>,\n  beneficiary_not_starts_with?: Maybe<Scalars['String']>,\n  beneficiary_starts_with?: Maybe<Scalars['String']>,\n  bond?: Maybe<Scalars['String']>,\n  bond_contains?: Maybe<Scalars['String']>,\n  bond_ends_with?: Maybe<Scalars['String']>,\n  bond_gt?: Maybe<Scalars['String']>,\n  bond_gte?: Maybe<Scalars['String']>,\n  bond_in?: Maybe<Array<Scalars['String']>>,\n  bond_lt?: Maybe<Scalars['String']>,\n  bond_lte?: Maybe<Scalars['String']>,\n  bond_not?: Maybe<Scalars['String']>,\n  bond_not_contains?: Maybe<Scalars['String']>,\n  bond_not_ends_with?: Maybe<Scalars['String']>,\n  bond_not_in?: Maybe<Array<Scalars['String']>>,\n  bond_not_starts_with?: Maybe<Scalars['String']>,\n  bond_starts_with?: Maybe<Scalars['String']>,\n  id?: Maybe<Scalars['Int']>,\n  id_gt?: Maybe<Scalars['Int']>,\n  id_gte?: Maybe<Scalars['Int']>,\n  id_in?: Maybe<Array<Scalars['Int']>>,\n  id_lt?: Maybe<Scalars['Int']>,\n  id_lte?: Maybe<Scalars['Int']>,\n  id_not?: Maybe<Scalars['Int']>,\n  id_not_in?: Maybe<Array<Scalars['Int']>>,\n  motion?: Maybe<MotionWhereInput>,\n  proposer?: Maybe<Scalars['String']>,\n  proposer_contains?: Maybe<Scalars['String']>,\n  proposer_ends_with?: Maybe<Scalars['String']>,\n  proposer_gt?: Maybe<Scalars['String']>,\n  proposer_gte?: Maybe<Scalars['String']>,\n  proposer_in?: Maybe<Array<Scalars['String']>>,\n  proposer_lt?: Maybe<Scalars['String']>,\n  proposer_lte?: Maybe<Scalars['String']>,\n  proposer_not?: Maybe<Scalars['String']>,\n  proposer_not_contains?: Maybe<Scalars['String']>,\n  proposer_not_ends_with?: Maybe<Scalars['String']>,\n  proposer_not_in?: Maybe<Array<Scalars['String']>>,\n  proposer_not_starts_with?: Maybe<Scalars['String']>,\n  proposer_starts_with?: Maybe<Scalars['String']>,\n  treasuryProposalId_gt?: Maybe<Scalars['Int']>,\n  treasuryProposalId_gte?: Maybe<Scalars['Int']>,\n  treasuryProposalId_in?: Maybe<Array<Scalars['Int']>>,\n  treasuryProposalId_lt?: Maybe<Scalars['Int']>,\n  treasuryProposalId_lte?: Maybe<Scalars['Int']>,\n  treasuryProposalId_not?: Maybe<Scalars['Int']>,\n  treasuryProposalId_not_in?: Maybe<Array<Scalars['Int']>>,\n  treasuryStatus_every?: Maybe<TreasuryStatusWhereInput>,\n  treasuryStatus_none?: Maybe<TreasuryStatusWhereInput>,\n  treasuryStatus_some?: Maybe<TreasuryStatusWhereInput>,\n  value?: Maybe<Scalars['String']>,\n  value_contains?: Maybe<Scalars['String']>,\n  value_ends_with?: Maybe<Scalars['String']>,\n  value_gt?: Maybe<Scalars['String']>,\n  value_gte?: Maybe<Scalars['String']>,\n  value_in?: Maybe<Array<Scalars['String']>>,\n  value_lt?: Maybe<Scalars['String']>,\n  value_lte?: Maybe<Scalars['String']>,\n  value_not?: Maybe<Scalars['String']>,\n  value_not_contains?: Maybe<Scalars['String']>,\n  value_not_ends_with?: Maybe<Scalars['String']>,\n  value_not_in?: Maybe<Array<Scalars['String']>>,\n  value_not_starts_with?: Maybe<Scalars['String']>,\n  value_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type TreasurySpendProposalWhereUniqueInput = {\n  id?: Maybe<Scalars['Int']>,\n  treasuryProposalId?: Maybe<Scalars['Int']>,\n};\n\nexport type TreasuryStatus = Node & {\n   __typename?: 'TreasuryStatus',\n  blockNumber: BlockNumber,\n  id: Scalars['ID'],\n  status: Scalars['String'],\n  treasurySpendProposal: TreasurySpendProposal,\n};\n\nexport type TreasuryStatusConnection = {\n   __typename?: 'TreasuryStatusConnection',\n  aggregate: AggregateTreasuryStatus,\n  edges: Array<Maybe<TreasuryStatusEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type TreasuryStatusCreateInput = {\n  blockNumber: BlockNumberCreateOneInput,\n  id?: Maybe<Scalars['ID']>,\n  status: Scalars['String'],\n  treasurySpendProposal: TreasurySpendProposalCreateOneWithoutTreasuryStatusInput,\n};\n\nexport type TreasuryStatusCreateManyWithoutTreasurySpendProposalInput = {\n  connect?: Maybe<Array<TreasuryStatusWhereUniqueInput>>,\n  create?: Maybe<Array<TreasuryStatusCreateWithoutTreasurySpendProposalInput>>,\n};\n\nexport type TreasuryStatusCreateWithoutTreasurySpendProposalInput = {\n  blockNumber: BlockNumberCreateOneInput,\n  id?: Maybe<Scalars['ID']>,\n  status: Scalars['String'],\n};\n\nexport type TreasuryStatusEdge = {\n   __typename?: 'TreasuryStatusEdge',\n  cursor: Scalars['String'],\n  node: TreasuryStatus,\n};\n\nexport enum TreasuryStatusOrderByInput {\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  StatusAsc = 'status_ASC',\n  StatusDesc = 'status_DESC'\n}\n\nexport type TreasuryStatusPreviousValues = {\n   __typename?: 'TreasuryStatusPreviousValues',\n  id: Scalars['ID'],\n  status: Scalars['String'],\n};\n\nexport type TreasuryStatusScalarWhereInput = {\n  AND?: Maybe<Array<TreasuryStatusScalarWhereInput>>,\n  NOT?: Maybe<Array<TreasuryStatusScalarWhereInput>>,\n  OR?: Maybe<Array<TreasuryStatusScalarWhereInput>>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  status?: Maybe<Scalars['String']>,\n  status_contains?: Maybe<Scalars['String']>,\n  status_ends_with?: Maybe<Scalars['String']>,\n  status_gt?: Maybe<Scalars['String']>,\n  status_gte?: Maybe<Scalars['String']>,\n  status_in?: Maybe<Array<Scalars['String']>>,\n  status_lt?: Maybe<Scalars['String']>,\n  status_lte?: Maybe<Scalars['String']>,\n  status_not?: Maybe<Scalars['String']>,\n  status_not_contains?: Maybe<Scalars['String']>,\n  status_not_ends_with?: Maybe<Scalars['String']>,\n  status_not_in?: Maybe<Array<Scalars['String']>>,\n  status_not_starts_with?: Maybe<Scalars['String']>,\n  status_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type TreasuryStatusSubscriptionPayload = {\n   __typename?: 'TreasuryStatusSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<TreasuryStatus>,\n  previousValues?: Maybe<TreasuryStatusPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type TreasuryStatusSubscriptionWhereInput = {\n  AND?: Maybe<Array<TreasuryStatusSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<TreasuryStatusSubscriptionWhereInput>>,\n  OR?: Maybe<Array<TreasuryStatusSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<TreasuryStatusWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type TreasuryStatusUpdateInput = {\n  blockNumber?: Maybe<BlockNumberUpdateOneRequiredInput>,\n  status?: Maybe<Scalars['String']>,\n  treasurySpendProposal?: Maybe<TreasurySpendProposalUpdateOneRequiredWithoutTreasuryStatusInput>,\n};\n\nexport type TreasuryStatusUpdateManyDataInput = {\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type TreasuryStatusUpdateManyMutationInput = {\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type TreasuryStatusUpdateManyWithoutTreasurySpendProposalInput = {\n  connect?: Maybe<Array<TreasuryStatusWhereUniqueInput>>,\n  create?: Maybe<Array<TreasuryStatusCreateWithoutTreasurySpendProposalInput>>,\n  delete?: Maybe<Array<TreasuryStatusWhereUniqueInput>>,\n  deleteMany?: Maybe<Array<TreasuryStatusScalarWhereInput>>,\n  disconnect?: Maybe<Array<TreasuryStatusWhereUniqueInput>>,\n  set?: Maybe<Array<TreasuryStatusWhereUniqueInput>>,\n  update?: Maybe<Array<TreasuryStatusUpdateWithWhereUniqueWithoutTreasurySpendProposalInput>>,\n  updateMany?: Maybe<Array<TreasuryStatusUpdateManyWithWhereNestedInput>>,\n  upsert?: Maybe<Array<TreasuryStatusUpsertWithWhereUniqueWithoutTreasurySpendProposalInput>>,\n};\n\nexport type TreasuryStatusUpdateManyWithWhereNestedInput = {\n  data: TreasuryStatusUpdateManyDataInput,\n  where: TreasuryStatusScalarWhereInput,\n};\n\nexport type TreasuryStatusUpdateWithoutTreasurySpendProposalDataInput = {\n  blockNumber?: Maybe<BlockNumberUpdateOneRequiredInput>,\n  status?: Maybe<Scalars['String']>,\n};\n\nexport type TreasuryStatusUpdateWithWhereUniqueWithoutTreasurySpendProposalInput = {\n  data: TreasuryStatusUpdateWithoutTreasurySpendProposalDataInput,\n  where: TreasuryStatusWhereUniqueInput,\n};\n\nexport type TreasuryStatusUpsertWithWhereUniqueWithoutTreasurySpendProposalInput = {\n  create: TreasuryStatusCreateWithoutTreasurySpendProposalInput,\n  update: TreasuryStatusUpdateWithoutTreasurySpendProposalDataInput,\n  where: TreasuryStatusWhereUniqueInput,\n};\n\nexport type TreasuryStatusWhereInput = {\n  AND?: Maybe<Array<TreasuryStatusWhereInput>>,\n  NOT?: Maybe<Array<TreasuryStatusWhereInput>>,\n  OR?: Maybe<Array<TreasuryStatusWhereInput>>,\n  blockNumber?: Maybe<BlockNumberWhereInput>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  status?: Maybe<Scalars['String']>,\n  status_contains?: Maybe<Scalars['String']>,\n  status_ends_with?: Maybe<Scalars['String']>,\n  status_gt?: Maybe<Scalars['String']>,\n  status_gte?: Maybe<Scalars['String']>,\n  status_in?: Maybe<Array<Scalars['String']>>,\n  status_lt?: Maybe<Scalars['String']>,\n  status_lte?: Maybe<Scalars['String']>,\n  status_not?: Maybe<Scalars['String']>,\n  status_not_contains?: Maybe<Scalars['String']>,\n  status_not_ends_with?: Maybe<Scalars['String']>,\n  status_not_in?: Maybe<Array<Scalars['String']>>,\n  status_not_starts_with?: Maybe<Scalars['String']>,\n  status_starts_with?: Maybe<Scalars['String']>,\n  treasurySpendProposal?: Maybe<TreasurySpendProposalWhereInput>,\n};\n\nexport type TreasuryStatusWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type UndoEmailChangeResponse = {\n   __typename?: 'UndoEmailChangeResponse',\n  email?: Maybe<Scalars['String']>,\n  message?: Maybe<Scalars['String']>,\n  token?: Maybe<Scalars['String']>,\n};\n\n\nexport type User = {\n   __typename?: 'User',\n  email?: Maybe<Scalars['String']>,\n  email_verified?: Maybe<Scalars['Boolean']>,\n  id?: Maybe<Scalars['Int']>,\n  name?: Maybe<Scalars['String']>,\n  username?: Maybe<Scalars['String']>,\n};\n\n\nexport type Uuid_Comparison_Exp = {\n  _eq?: Maybe<Scalars['uuid']>,\n  _gt?: Maybe<Scalars['uuid']>,\n  _gte?: Maybe<Scalars['uuid']>,\n  _in?: Maybe<Array<Scalars['uuid']>>,\n  _is_null?: Maybe<Scalars['Boolean']>,\n  _lt?: Maybe<Scalars['uuid']>,\n  _lte?: Maybe<Scalars['uuid']>,\n  _neq?: Maybe<Scalars['uuid']>,\n  _nin?: Maybe<Array<Scalars['uuid']>>,\n};\n\nexport type Validator = Node & {\n   __typename?: 'Validator',\n  controller: Scalars['String'],\n  id: Scalars['ID'],\n  preferences: Scalars['String'],\n  session: Session,\n  stash: Scalars['String'],\n};\n\nexport type ValidatorConnection = {\n   __typename?: 'ValidatorConnection',\n  aggregate: AggregateValidator,\n  edges: Array<Maybe<ValidatorEdge>>,\n  pageInfo: PageInfo,\n};\n\nexport type ValidatorCreateInput = {\n  controller: Scalars['String'],\n  id?: Maybe<Scalars['ID']>,\n  preferences: Scalars['String'],\n  session: SessionCreateOneInput,\n  stash: Scalars['String'],\n};\n\nexport type ValidatorEdge = {\n   __typename?: 'ValidatorEdge',\n  cursor: Scalars['String'],\n  node: Validator,\n};\n\nexport enum ValidatorOrderByInput {\n  ControllerAsc = 'controller_ASC',\n  ControllerDesc = 'controller_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  PreferencesAsc = 'preferences_ASC',\n  PreferencesDesc = 'preferences_DESC',\n  StashAsc = 'stash_ASC',\n  StashDesc = 'stash_DESC'\n}\n\nexport type ValidatorPreviousValues = {\n   __typename?: 'ValidatorPreviousValues',\n  controller: Scalars['String'],\n  id: Scalars['ID'],\n  preferences: Scalars['String'],\n  stash: Scalars['String'],\n};\n\nexport type ValidatorSubscriptionPayload = {\n   __typename?: 'ValidatorSubscriptionPayload',\n  mutation: MutationType,\n  node?: Maybe<Validator>,\n  previousValues?: Maybe<ValidatorPreviousValues>,\n  updatedFields?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type ValidatorSubscriptionWhereInput = {\n  AND?: Maybe<Array<ValidatorSubscriptionWhereInput>>,\n  NOT?: Maybe<Array<ValidatorSubscriptionWhereInput>>,\n  OR?: Maybe<Array<ValidatorSubscriptionWhereInput>>,\n  mutation_in?: Maybe<Array<MutationType>>,\n  node?: Maybe<ValidatorWhereInput>,\n  updatedFields_contains?: Maybe<Scalars['String']>,\n  updatedFields_contains_every?: Maybe<Array<Scalars['String']>>,\n  updatedFields_contains_some?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type ValidatorUpdateInput = {\n  controller?: Maybe<Scalars['String']>,\n  preferences?: Maybe<Scalars['String']>,\n  session?: Maybe<SessionUpdateOneRequiredInput>,\n  stash?: Maybe<Scalars['String']>,\n};\n\nexport type ValidatorUpdateManyMutationInput = {\n  controller?: Maybe<Scalars['String']>,\n  preferences?: Maybe<Scalars['String']>,\n  stash?: Maybe<Scalars['String']>,\n};\n\nexport type ValidatorWhereInput = {\n  AND?: Maybe<Array<ValidatorWhereInput>>,\n  NOT?: Maybe<Array<ValidatorWhereInput>>,\n  OR?: Maybe<Array<ValidatorWhereInput>>,\n  controller?: Maybe<Scalars['String']>,\n  controller_contains?: Maybe<Scalars['String']>,\n  controller_ends_with?: Maybe<Scalars['String']>,\n  controller_gt?: Maybe<Scalars['String']>,\n  controller_gte?: Maybe<Scalars['String']>,\n  controller_in?: Maybe<Array<Scalars['String']>>,\n  controller_lt?: Maybe<Scalars['String']>,\n  controller_lte?: Maybe<Scalars['String']>,\n  controller_not?: Maybe<Scalars['String']>,\n  controller_not_contains?: Maybe<Scalars['String']>,\n  controller_not_ends_with?: Maybe<Scalars['String']>,\n  controller_not_in?: Maybe<Array<Scalars['String']>>,\n  controller_not_starts_with?: Maybe<Scalars['String']>,\n  controller_starts_with?: Maybe<Scalars['String']>,\n  id?: Maybe<Scalars['ID']>,\n  id_contains?: Maybe<Scalars['ID']>,\n  id_ends_with?: Maybe<Scalars['ID']>,\n  id_gt?: Maybe<Scalars['ID']>,\n  id_gte?: Maybe<Scalars['ID']>,\n  id_in?: Maybe<Array<Scalars['ID']>>,\n  id_lt?: Maybe<Scalars['ID']>,\n  id_lte?: Maybe<Scalars['ID']>,\n  id_not?: Maybe<Scalars['ID']>,\n  id_not_contains?: Maybe<Scalars['ID']>,\n  id_not_ends_with?: Maybe<Scalars['ID']>,\n  id_not_in?: Maybe<Array<Scalars['ID']>>,\n  id_not_starts_with?: Maybe<Scalars['ID']>,\n  id_starts_with?: Maybe<Scalars['ID']>,\n  preferences?: Maybe<Scalars['String']>,\n  preferences_contains?: Maybe<Scalars['String']>,\n  preferences_ends_with?: Maybe<Scalars['String']>,\n  preferences_gt?: Maybe<Scalars['String']>,\n  preferences_gte?: Maybe<Scalars['String']>,\n  preferences_in?: Maybe<Array<Scalars['String']>>,\n  preferences_lt?: Maybe<Scalars['String']>,\n  preferences_lte?: Maybe<Scalars['String']>,\n  preferences_not?: Maybe<Scalars['String']>,\n  preferences_not_contains?: Maybe<Scalars['String']>,\n  preferences_not_ends_with?: Maybe<Scalars['String']>,\n  preferences_not_in?: Maybe<Array<Scalars['String']>>,\n  preferences_not_starts_with?: Maybe<Scalars['String']>,\n  preferences_starts_with?: Maybe<Scalars['String']>,\n  session?: Maybe<SessionWhereInput>,\n  stash?: Maybe<Scalars['String']>,\n  stash_contains?: Maybe<Scalars['String']>,\n  stash_ends_with?: Maybe<Scalars['String']>,\n  stash_gt?: Maybe<Scalars['String']>,\n  stash_gte?: Maybe<Scalars['String']>,\n  stash_in?: Maybe<Array<Scalars['String']>>,\n  stash_lt?: Maybe<Scalars['String']>,\n  stash_lte?: Maybe<Scalars['String']>,\n  stash_not?: Maybe<Scalars['String']>,\n  stash_not_contains?: Maybe<Scalars['String']>,\n  stash_not_ends_with?: Maybe<Scalars['String']>,\n  stash_not_in?: Maybe<Array<Scalars['String']>>,\n  stash_not_starts_with?: Maybe<Scalars['String']>,\n  stash_starts_with?: Maybe<Scalars['String']>,\n};\n\nexport type ValidatorWhereUniqueInput = {\n  id?: Maybe<Scalars['ID']>,\n};\n\nexport type EditCommentMutationVariables = {\n  id: Scalars['uuid'],\n  content: Scalars['String']\n};\n\n\nexport type EditCommentMutation = (\n  { __typename?: 'mutation_root' }\n  & { update_comments: Maybe<(\n    { __typename?: 'comments_mutation_response' }\n    & Pick<Comments_Mutation_Response, 'affected_rows'>\n  )> }\n);\n\nexport type LoginMutationVariables = {\n  password: Scalars['String'],\n  username: Scalars['String']\n};\n\n\nexport type LoginMutation = (\n  { __typename?: 'mutation_root' }\n  & { login: Maybe<(\n    { __typename?: 'LoginResponse' }\n    & Pick<LoginResponse, 'token'>\n    & { user: Maybe<(\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'name' | 'username' | 'email' | 'email_verified'>\n    )> }\n  )> }\n);\n\nexport type AddressLoginStartMutationVariables = {\n  address: Scalars['String']\n};\n\n\nexport type AddressLoginStartMutation = (\n  { __typename?: 'mutation_root' }\n  & { addressLoginStart: Maybe<(\n    { __typename?: 'AddressLoginType' }\n    & Pick<AddressLoginType, 'message' | 'signMessage'>\n  )> }\n);\n\nexport type AddressLoginMutationVariables = {\n  address: Scalars['String'],\n  signature: Scalars['String']\n};\n\n\nexport type AddressLoginMutation = (\n  { __typename?: 'mutation_root' }\n  & { addressLogin: Maybe<(\n    { __typename?: 'LoginResponse' }\n    & Pick<LoginResponse, 'token'>\n    & { user: Maybe<(\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'name' | 'username' | 'email' | 'email_verified'>\n    )> }\n  )> }\n);\n\nexport type LogoutMutationVariables = {};\n\n\nexport type LogoutMutation = (\n  { __typename?: 'mutation_root' }\n  & { logout: Maybe<(\n    { __typename?: 'Message' }\n    & Pick<Message, 'message'>\n  )> }\n);\n\nexport type GetCouncilMembersQueryVariables = {};\n\n\nexport type GetCouncilMembersQuery = (\n  { __typename?: 'query_root' }\n  & { councils: Array<Maybe<(\n    { __typename?: 'Council' }\n    & { members: Maybe<Array<(\n      { __typename?: 'CouncilMember' }\n      & Pick<CouncilMember, 'id' | 'address'>\n    )>> }\n  )>> }\n);\n\nexport type EditPostMutationVariables = {\n  id: Scalars['Int'],\n  content: Scalars['String'],\n  title: Scalars['String']\n};\n\n\nexport type EditPostMutation = (\n  { __typename?: 'mutation_root' }\n  & { update_posts: Maybe<(\n    { __typename?: 'posts_mutation_response' }\n    & Pick<Posts_Mutation_Response, 'affected_rows'>\n  )> }\n);\n\nexport type AddPostCommentMutationVariables = {\n  authorId: Scalars['Int'],\n  content: Scalars['String'],\n  postId: Scalars['Int']\n};\n\n\nexport type AddPostCommentMutation = (\n  { __typename: 'mutation_root' }\n  & { insert_comments: Maybe<(\n    { __typename?: 'comments_mutation_response' }\n    & Pick<Comments_Mutation_Response, 'affected_rows'>\n  )> }\n);\n\nexport type PostReactionFieldsFragment = (\n  { __typename?: 'post_reactions' }\n  & Pick<Post_Reactions, 'id' | 'reaction' | 'created_at' | 'updated_at'>\n  & { reacting_user: Maybe<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'username'>\n  )> }\n);\n\nexport type PostReactionsQueryVariables = {\n  postId: Scalars['Int']\n};\n\n\nexport type PostReactionsQuery = (\n  { __typename?: 'query_root' }\n  & { post_reactions: Array<(\n    { __typename?: 'post_reactions' }\n    & PostReactionFieldsFragment\n  )> }\n);\n\nexport type CommentReactionFieldsFragment = (\n  { __typename?: 'comment_reactions' }\n  & Pick<Comment_Reactions, 'id' | 'reaction' | 'created_at' | 'updated_at'>\n  & { reacting_user: Maybe<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'username'>\n  )> }\n);\n\nexport type CommentReactionsQueryVariables = {\n  commentId: Scalars['uuid']\n};\n\n\nexport type CommentReactionsQuery = (\n  { __typename?: 'query_root' }\n  & { comment_reactions: Array<(\n    { __typename?: 'comment_reactions' }\n    & CommentReactionFieldsFragment\n  )> }\n);\n\nexport type AddPostReactionMutationVariables = {\n  postId: Scalars['Int'],\n  userId: Scalars['Int'],\n  reaction: Scalars['bpchar']\n};\n\n\nexport type AddPostReactionMutation = (\n  { __typename: 'mutation_root' }\n  & { insert_post_reactions: Maybe<(\n    { __typename?: 'post_reactions_mutation_response' }\n    & Pick<Post_Reactions_Mutation_Response, 'affected_rows'>\n  )> }\n);\n\nexport type AddCommentReactionMutationVariables = {\n  commentId: Scalars['uuid'],\n  userId: Scalars['Int'],\n  reaction: Scalars['bpchar']\n};\n\n\nexport type AddCommentReactionMutation = (\n  { __typename: 'mutation_root' }\n  & { insert_comment_reactions: Maybe<(\n    { __typename?: 'comment_reactions_mutation_response' }\n    & Pick<Comment_Reactions_Mutation_Response, 'affected_rows'>\n  )> }\n);\n\nexport type DeletePostReactionMutationVariables = {\n  postId: Scalars['Int'],\n  userId: Scalars['Int'],\n  reaction: Scalars['bpchar']\n};\n\n\nexport type DeletePostReactionMutation = (\n  { __typename?: 'mutation_root' }\n  & { delete_post_reactions: Maybe<(\n    { __typename?: 'post_reactions_mutation_response' }\n    & Pick<Post_Reactions_Mutation_Response, 'affected_rows'>\n  )> }\n);\n\nexport type DeleteCommentReactionMutationVariables = {\n  commentId: Scalars['uuid'],\n  userId: Scalars['Int'],\n  reaction: Scalars['bpchar']\n};\n\n\nexport type DeleteCommentReactionMutation = (\n  { __typename?: 'mutation_root' }\n  & { delete_comment_reactions: Maybe<(\n    { __typename?: 'comment_reactions_mutation_response' }\n    & Pick<Comment_Reactions_Mutation_Response, 'affected_rows'>\n  )> }\n);\n\nexport type ReportContentMutationVariables = {\n  network: Scalars['String'],\n  type: Scalars['String'],\n  content_id: Scalars['String'],\n  reason: Scalars['String'],\n  comments: Scalars['String']\n};\n\n\nexport type ReportContentMutation = (\n  { __typename?: 'mutation_root' }\n  & { reportContent: Maybe<(\n    { __typename?: 'Message' }\n    & Pick<Message, 'message'>\n  )> }\n);\n\nexport type PostSubscribeMutationVariables = {\n  postId: Scalars['Int']\n};\n\n\nexport type PostSubscribeMutation = (\n  { __typename?: 'mutation_root' }\n  & { postSubscribe: Maybe<(\n    { __typename?: 'Message' }\n    & Pick<Message, 'message'>\n  )> }\n);\n\nexport type PostUnsubscribeMutationVariables = {\n  postId: Scalars['Int']\n};\n\n\nexport type PostUnsubscribeMutation = (\n  { __typename?: 'mutation_root' }\n  & { postUnsubscribe: Maybe<(\n    { __typename?: 'Message' }\n    & Pick<Message, 'message'>\n  )> }\n);\n\nexport type SubscriptionQueryVariables = {\n  postId: Scalars['Int']\n};\n\n\nexport type SubscriptionQuery = (\n  { __typename?: 'query_root' }\n  & { subscription: Maybe<(\n    { __typename?: 'Subscription' }\n    & Pick<Subscription, 'subscribed'>\n  )> }\n);\n\nexport type Get_Refresh_TokenQueryVariables = {};\n\n\nexport type Get_Refresh_TokenQuery = (\n  { __typename?: 'query_root' }\n  & { token: Maybe<(\n    { __typename?: 'Token' }\n    & Pick<Token, 'token'>\n  )> }\n);\n\nexport type CommentFieldsFragment = (\n  { __typename?: 'comments' }\n  & Pick<Comments, 'id' | 'content' | 'created_at' | 'updated_at'>\n  & { author: Maybe<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'name' | 'username'>\n  )> }\n);\n\nexport type CreatePostMutationVariables = {\n  userId: Scalars['Int'],\n  content: Scalars['String'],\n  topicId: Scalars['Int'],\n  title: Scalars['String']\n};\n\n\nexport type CreatePostMutation = (\n  { __typename: 'mutation_root' }\n  & { insert_posts: Maybe<(\n    { __typename?: 'posts_mutation_response' }\n    & Pick<Posts_Mutation_Response, 'affected_rows'>\n    & { returning: Array<(\n      { __typename?: 'posts' }\n      & Pick<Posts, 'id'>\n    )> }\n  )> }\n);\n\nexport type TopicFragment = (\n  { __typename?: 'post_topics' }\n  & Pick<Post_Topics, 'id' | 'name'>\n);\n\nexport type Post_TopicsQueryVariables = {};\n\n\nexport type Post_TopicsQuery = (\n  { __typename?: 'query_root' }\n  & { post_topics: Array<(\n    { __typename?: 'post_topics' }\n    & TopicFragment\n  )> }\n);\n\nexport type DiscussionPostFragment = (\n  { __typename?: 'posts' }\n  & Pick<Posts, 'content' | 'created_at' | 'id' | 'updated_at' | 'title'>\n  & { author: Maybe<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'name' | 'username'>\n  )>, comments: Array<(\n    { __typename?: 'comments' }\n    & CommentFieldsFragment\n  )>, topic: (\n    { __typename?: 'post_topics' }\n    & Pick<Post_Topics, 'id' | 'name'>\n  ), type: (\n    { __typename?: 'post_types' }\n    & Pick<Post_Types, 'id' | 'name'>\n  ) }\n);\n\nexport type DiscussionPostAndCommentsQueryVariables = {\n  id: Scalars['Int']\n};\n\n\nexport type DiscussionPostAndCommentsQuery = (\n  { __typename?: 'query_root' }\n  & { posts: Array<(\n    { __typename?: 'posts' }\n    & DiscussionPostFragment\n  )> }\n);\n\nexport type LatestDiscussionPostsQueryVariables = {\n  limit?: Scalars['Int']\n};\n\n\nexport type LatestDiscussionPostsQuery = (\n  { __typename?: 'query_root' }\n  & { posts: Array<(\n    { __typename?: 'posts' }\n    & Pick<Posts, 'id' | 'title' | 'created_at' | 'updated_at'>\n    & { author: Maybe<(\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'name' | 'username'>\n    )>, comments_aggregate: (\n      { __typename?: 'comments_aggregate' }\n      & { aggregate: Maybe<(\n        { __typename?: 'comments_aggregate_fields' }\n        & Pick<Comments_Aggregate_Fields, 'count'>\n      )> }\n    ), type: (\n      { __typename?: 'post_types' }\n      & Pick<Post_Types, 'name' | 'id'>\n    ) }\n  )> }\n);\n\nexport type OnchainLinkMotionPreimageFragment = (\n  { __typename?: 'Preimage' }\n  & Pick<Preimage, 'hash' | 'id' | 'metaDescription' | 'method'>\n  & { preimageArguments: Maybe<Array<(\n    { __typename?: 'PreimageArgument' }\n    & Pick<PreimageArgument, 'id' | 'name' | 'value'>\n  )>> }\n);\n\nexport type OnchainLinkMotionTreasuryFragment = (\n  { __typename?: 'TreasurySpendProposal' }\n  & Pick<TreasurySpendProposal, 'beneficiary' | 'bond' | 'value'>\n);\n\nexport type OnchainLinkMotionFragment = (\n  { __typename?: 'onchain_links' }\n  & Pick<Onchain_Links, 'id' | 'proposer_address' | 'onchain_referendum_id' | 'onchain_motion_id'>\n  & { onchain_motion: Array<Maybe<(\n    { __typename?: 'Motion' }\n    & Pick<Motion, 'id' | 'memberCount' | 'method' | 'motionProposalHash'>\n    & { motionStatus: Maybe<Array<(\n      { __typename?: 'MotionStatus' }\n      & Pick<MotionStatus, 'id' | 'status'>\n    )>>, motionProposalArguments: Maybe<Array<(\n      { __typename?: 'MotionProposalArgument' }\n      & Pick<MotionProposalArgument, 'name' | 'value'>\n    )>>, preimage: Maybe<(\n      { __typename?: 'Preimage' }\n      & OnchainLinkMotionPreimageFragment\n    )>, treasurySpendProposal: Maybe<(\n      { __typename?: 'TreasurySpendProposal' }\n      & OnchainLinkMotionTreasuryFragment\n    )> }\n  )>> }\n);\n\nexport type MotionPostFragment = (\n  { __typename?: 'posts' }\n  & Pick<Posts, 'content' | 'created_at' | 'id' | 'updated_at' | 'title'>\n  & { author: Maybe<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'name' | 'username'>\n  )>, comments: Array<(\n    { __typename?: 'comments' }\n    & CommentFieldsFragment\n  )>, onchain_link: Maybe<(\n    { __typename?: 'onchain_links' }\n    & OnchainLinkMotionFragment\n  )>, topic: (\n    { __typename?: 'post_topics' }\n    & Pick<Post_Topics, 'id' | 'name'>\n  ), type: (\n    { __typename?: 'post_types' }\n    & Pick<Post_Types, 'id' | 'name'>\n  ) }\n);\n\nexport type MotionPostAndCommentsQueryVariables = {\n  id: Scalars['Int']\n};\n\n\nexport type MotionPostAndCommentsQuery = (\n  { __typename?: 'query_root' }\n  & { posts: Array<(\n    { __typename?: 'posts' }\n    & MotionPostFragment\n  )> }\n);\n\nexport type ChangeNotificationPreferenceMutationVariables = {\n  postParticipated?: Maybe<Scalars['Boolean']>,\n  postCreated?: Maybe<Scalars['Boolean']>,\n  newProposal?: Maybe<Scalars['Boolean']>,\n  ownProposal?: Maybe<Scalars['Boolean']>\n};\n\n\nexport type ChangeNotificationPreferenceMutation = (\n  { __typename?: 'mutation_root' }\n  & { changeNotificationPreference: Maybe<(\n    { __typename?: 'ChangeResponse' }\n    & Pick<ChangeResponse, 'message' | 'token'>\n  )> }\n);\n\nexport type LatestMotionPostsQueryVariables = {\n  postType: Scalars['Int'],\n  limit?: Scalars['Int']\n};\n\n\nexport type LatestMotionPostsQuery = (\n  { __typename?: 'query_root' }\n  & { posts: Array<(\n    { __typename?: 'posts' }\n    & Pick<Posts, 'id' | 'title' | 'created_at' | 'updated_at'>\n    & { author: Maybe<(\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'username' | 'name'>\n    )>, comments_aggregate: (\n      { __typename?: 'comments_aggregate' }\n      & { aggregate: Maybe<(\n        { __typename?: 'comments_aggregate_fields' }\n        & Pick<Comments_Aggregate_Fields, 'count'>\n      )> }\n    ), type: (\n      { __typename?: 'post_types' }\n      & Pick<Post_Types, 'name' | 'id'>\n    ), topic: (\n      { __typename?: 'post_topics' }\n      & Pick<Post_Topics, 'id' | 'name'>\n    ), onchain_link: Maybe<(\n      { __typename?: 'onchain_links' }\n      & Pick<Onchain_Links, 'id' | 'onchain_motion_id' | 'proposer_address'>\n      & { onchain_motion: Array<Maybe<(\n        { __typename?: 'Motion' }\n        & Pick<Motion, 'id'>\n        & { motionStatus: Maybe<Array<(\n          { __typename?: 'MotionStatus' }\n          & Pick<MotionStatus, 'id' | 'status'>\n        )>>, preimage: Maybe<(\n          { __typename?: 'Preimage' }\n          & Pick<Preimage, 'id' | 'method'>\n        )> }\n      )>> }\n    )> }\n  )> }\n);\n\nexport type LatestDemocracyProposalPostsQueryVariables = {\n  postType: Scalars['Int'],\n  postTopic: Scalars['Int'],\n  limit?: Scalars['Int']\n};\n\n\nexport type LatestDemocracyProposalPostsQuery = (\n  { __typename?: 'query_root' }\n  & { posts: Array<(\n    { __typename?: 'posts' }\n    & Pick<Posts, 'id' | 'title' | 'created_at' | 'updated_at'>\n    & { author: Maybe<(\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'username' | 'name'>\n    )>, comments_aggregate: (\n      { __typename?: 'comments_aggregate' }\n      & { aggregate: Maybe<(\n        { __typename?: 'comments_aggregate_fields' }\n        & Pick<Comments_Aggregate_Fields, 'count'>\n      )> }\n    ), type: (\n      { __typename?: 'post_types' }\n      & Pick<Post_Types, 'name' | 'id'>\n    ), topic: (\n      { __typename?: 'post_topics' }\n      & Pick<Post_Topics, 'id' | 'name'>\n    ), onchain_link: Maybe<(\n      { __typename?: 'onchain_links' }\n      & Pick<Onchain_Links, 'id' | 'onchain_proposal_id' | 'proposer_address'>\n      & { onchain_proposal: Array<Maybe<(\n        { __typename?: 'Proposal' }\n        & Pick<Proposal, 'id'>\n        & { proposalStatus: Maybe<Array<(\n          { __typename?: 'ProposalStatus' }\n          & Pick<ProposalStatus, 'id' | 'status'>\n        )>>, preimage: Maybe<(\n          { __typename?: 'Preimage' }\n          & Pick<Preimage, 'id' | 'method'>\n        )> }\n      )>> }\n    )> }\n  )> }\n);\n\nexport type LatestReferendaPostsQueryVariables = {\n  postType: Scalars['Int'],\n  limit?: Scalars['Int']\n};\n\n\nexport type LatestReferendaPostsQuery = (\n  { __typename?: 'query_root' }\n  & { posts: Array<(\n    { __typename?: 'posts' }\n    & Pick<Posts, 'id' | 'title' | 'created_at' | 'updated_at'>\n    & { author: Maybe<(\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'username' | 'name'>\n    )>, comments_aggregate: (\n      { __typename?: 'comments_aggregate' }\n      & { aggregate: Maybe<(\n        { __typename?: 'comments_aggregate_fields' }\n        & Pick<Comments_Aggregate_Fields, 'count'>\n      )> }\n    ), type: (\n      { __typename?: 'post_types' }\n      & Pick<Post_Types, 'name' | 'id'>\n    ), topic: (\n      { __typename?: 'post_topics' }\n      & Pick<Post_Topics, 'id' | 'name'>\n    ), onchain_link: Maybe<(\n      { __typename?: 'onchain_links' }\n      & Pick<Onchain_Links, 'id' | 'onchain_referendum_id' | 'proposer_address'>\n      & { onchain_referendum: Array<Maybe<(\n        { __typename?: 'Referendum' }\n        & Pick<Referendum, 'id'>\n        & { referendumStatus: Maybe<Array<(\n          { __typename?: 'ReferendumStatus' }\n          & Pick<ReferendumStatus, 'id' | 'status'>\n        )>>, preimage: Maybe<(\n          { __typename?: 'Preimage' }\n          & Pick<Preimage, 'id' | 'method'>\n        )> }\n      )>> }\n    )> }\n  )> }\n);\n\nexport type LatestDemocracyTreasuryProposalPostsQueryVariables = {\n  postType: Scalars['Int'],\n  postTopic: Scalars['Int'],\n  limit?: Scalars['Int']\n};\n\n\nexport type LatestDemocracyTreasuryProposalPostsQuery = (\n  { __typename?: 'query_root' }\n  & { posts: Array<(\n    { __typename?: 'posts' }\n    & Pick<Posts, 'id' | 'title' | 'created_at' | 'updated_at'>\n    & { author: Maybe<(\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'username' | 'name'>\n    )>, comments_aggregate: (\n      { __typename?: 'comments_aggregate' }\n      & { aggregate: Maybe<(\n        { __typename?: 'comments_aggregate_fields' }\n        & Pick<Comments_Aggregate_Fields, 'count'>\n      )> }\n    ), type: (\n      { __typename?: 'post_types' }\n      & Pick<Post_Types, 'name' | 'id'>\n    ), topic: (\n      { __typename?: 'post_topics' }\n      & Pick<Post_Topics, 'id' | 'name'>\n    ), onchain_link: Maybe<(\n      { __typename?: 'onchain_links' }\n      & Pick<Onchain_Links, 'id' | 'onchain_treasury_proposal_id' | 'proposer_address'>\n      & { onchain_treasury_spend_proposal: Array<Maybe<(\n        { __typename?: 'TreasurySpendProposal' }\n        & Pick<TreasurySpendProposal, 'id'>\n        & { treasuryStatus: Maybe<Array<(\n          { __typename?: 'TreasuryStatus' }\n          & Pick<TreasuryStatus, 'id' | 'status'>\n        )>> }\n      )>> }\n    )> }\n  )> }\n);\n\nexport type OnchainLinkProposalFragment = (\n  { __typename?: 'onchain_links' }\n  & Pick<Onchain_Links, 'id' | 'proposer_address' | 'onchain_proposal_id' | 'onchain_referendum_id'>\n  & { onchain_proposal: Array<Maybe<(\n    { __typename?: 'Proposal' }\n    & Pick<Proposal, 'id' | 'depositAmount'>\n    & { proposalStatus: Maybe<Array<(\n      { __typename?: 'ProposalStatus' }\n      & Pick<ProposalStatus, 'id' | 'status'>\n    )>>, preimage: Maybe<(\n      { __typename?: 'Preimage' }\n      & Pick<Preimage, 'hash' | 'id' | 'metaDescription' | 'method'>\n      & { preimageArguments: Maybe<Array<(\n        { __typename?: 'PreimageArgument' }\n        & Pick<PreimageArgument, 'id' | 'name' | 'value'>\n      )>> }\n    )> }\n  )>> }\n);\n\nexport type ProposalPostFragment = (\n  { __typename?: 'posts' }\n  & Pick<Posts, 'content' | 'created_at' | 'id' | 'updated_at' | 'title'>\n  & { author: Maybe<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'name' | 'username'>\n  )>, comments: Array<(\n    { __typename?: 'comments' }\n    & CommentFieldsFragment\n  )>, onchain_link: Maybe<(\n    { __typename?: 'onchain_links' }\n    & OnchainLinkProposalFragment\n  )>, topic: (\n    { __typename?: 'post_topics' }\n    & Pick<Post_Topics, 'id' | 'name'>\n  ), type: (\n    { __typename?: 'post_types' }\n    & Pick<Post_Types, 'id' | 'name'>\n  ) }\n);\n\nexport type ProposalPostAndCommentsQueryVariables = {\n  id: Scalars['Int']\n};\n\n\nexport type ProposalPostAndCommentsQuery = (\n  { __typename?: 'query_root' }\n  & { posts: Array<(\n    { __typename?: 'posts' }\n    & ProposalPostFragment\n  )> }\n);\n\nexport type OnchainLinkReferendumFragment = (\n  { __typename?: 'onchain_links' }\n  & Pick<Onchain_Links, 'id' | 'proposer_address' | 'onchain_referendum_id'>\n  & { onchain_referendum: Array<Maybe<(\n    { __typename?: 'Referendum' }\n    & Pick<Referendum, 'id' | 'delay' | 'end' | 'voteThreshold'>\n    & { referendumStatus: Maybe<Array<(\n      { __typename?: 'ReferendumStatus' }\n      & Pick<ReferendumStatus, 'status' | 'id'>\n    )>>, preimage: Maybe<(\n      { __typename?: 'Preimage' }\n      & Pick<Preimage, 'hash' | 'id' | 'metaDescription' | 'method'>\n      & { preimageArguments: Maybe<Array<(\n        { __typename?: 'PreimageArgument' }\n        & Pick<PreimageArgument, 'id' | 'name' | 'value'>\n      )>> }\n    )> }\n  )>> }\n);\n\nexport type ReferendumPostFragment = (\n  { __typename?: 'posts' }\n  & Pick<Posts, 'content' | 'created_at' | 'id' | 'updated_at' | 'title'>\n  & { author: Maybe<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'name' | 'username'>\n  )>, comments: Array<(\n    { __typename?: 'comments' }\n    & CommentFieldsFragment\n  )>, onchain_link: Maybe<(\n    { __typename?: 'onchain_links' }\n    & OnchainLinkReferendumFragment\n  )>, topic: (\n    { __typename?: 'post_topics' }\n    & Pick<Post_Topics, 'id' | 'name'>\n  ), type: (\n    { __typename?: 'post_types' }\n    & Pick<Post_Types, 'id' | 'name'>\n  ) }\n);\n\nexport type ReferendumPostAndCommentsQueryVariables = {\n  id: Scalars['Int']\n};\n\n\nexport type ReferendumPostAndCommentsQuery = (\n  { __typename?: 'query_root' }\n  & { posts: Array<(\n    { __typename?: 'posts' }\n    & ReferendumPostFragment\n  )> }\n);\n\nexport type ResetPasswordMutationVariables = {\n  newPassword: Scalars['String'],\n  token: Scalars['String']\n};\n\n\nexport type ResetPasswordMutation = (\n  { __typename?: 'mutation_root' }\n  & { resetPassword: Maybe<(\n    { __typename?: 'Message' }\n    & Pick<Message, 'message'>\n  )> }\n);\n\nexport type RequestResetPasswordMutationVariables = {\n  email: Scalars['String']\n};\n\n\nexport type RequestResetPasswordMutation = (\n  { __typename?: 'mutation_root' }\n  & { requestResetPassword: Maybe<(\n    { __typename?: 'Message' }\n    & Pick<Message, 'message'>\n  )> }\n);\n\nexport type ChangeNameMutationVariables = {\n  newName: Scalars['String']\n};\n\n\nexport type ChangeNameMutation = (\n  { __typename?: 'mutation_root' }\n  & { changeName: Maybe<(\n    { __typename?: 'ChangeResponse' }\n    & Pick<ChangeResponse, 'message' | 'token'>\n  )> }\n);\n\nexport type ChangeUsernameMutationVariables = {\n  username: Scalars['String']\n};\n\n\nexport type ChangeUsernameMutation = (\n  { __typename?: 'mutation_root' }\n  & { changeUsername: Maybe<(\n    { __typename?: 'ChangeResponse' }\n    & Pick<ChangeResponse, 'message' | 'token'>\n  )> }\n);\n\nexport type ChangeEmailMutationVariables = {\n  email: Scalars['String']\n};\n\n\nexport type ChangeEmailMutation = (\n  { __typename?: 'mutation_root' }\n  & { changeEmail: Maybe<(\n    { __typename?: 'ChangeResponse' }\n    & Pick<ChangeResponse, 'message' | 'token'>\n  )> }\n);\n\nexport type ChangePasswordMutationVariables = {\n  oldPassword: Scalars['String'],\n  newPassword: Scalars['String']\n};\n\n\nexport type ChangePasswordMutation = (\n  { __typename?: 'mutation_root' }\n  & { changePassword: Maybe<(\n    { __typename?: 'Message' }\n    & Pick<Message, 'message'>\n  )> }\n);\n\nexport type AddressLinkStartMutationVariables = {\n  network: Scalars['String'],\n  address: Scalars['String']\n};\n\n\nexport type AddressLinkStartMutation = (\n  { __typename?: 'mutation_root' }\n  & { addressLinkStart: Maybe<(\n    { __typename?: 'AddressLinkType' }\n    & Pick<AddressLinkType, 'sign_message' | 'message' | 'address_id'>\n  )> }\n);\n\nexport type AddressLinkConfirmMutationVariables = {\n  address_id: Scalars['Int'],\n  signature: Scalars['String']\n};\n\n\nexport type AddressLinkConfirmMutation = (\n  { __typename?: 'mutation_root' }\n  & { addressLinkConfirm: Maybe<(\n    { __typename?: 'ChangeResponse' }\n    & Pick<ChangeResponse, 'message' | 'token'>\n  )> }\n);\n\nexport type AddressUnlinkMutationVariables = {\n  address: Scalars['String']\n};\n\n\nexport type AddressUnlinkMutation = (\n  { __typename?: 'mutation_root' }\n  & { addressUnlink: Maybe<(\n    { __typename?: 'ChangeResponse' }\n    & Pick<ChangeResponse, 'message' | 'token'>\n  )> }\n);\n\nexport type ResendVerifyEmailTokenMutationVariables = {};\n\n\nexport type ResendVerifyEmailTokenMutation = (\n  { __typename?: 'mutation_root' }\n  & { resendVerifyEmailToken: Maybe<(\n    { __typename?: 'Message' }\n    & Pick<Message, 'message'>\n  )> }\n);\n\nexport type SignupMutationVariables = {\n  email?: Maybe<Scalars['String']>,\n  password: Scalars['String'],\n  username: Scalars['String'],\n  name?: Maybe<Scalars['String']>\n};\n\n\nexport type SignupMutation = (\n  { __typename?: 'mutation_root' }\n  & { signup: Maybe<(\n    { __typename?: 'LoginResponse' }\n    & Pick<LoginResponse, 'token'>\n    & { user: Maybe<(\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'name' | 'username' | 'email' | 'email_verified'>\n    )> }\n  )> }\n);\n\nexport type OnchainLinkTreasuryProposalFragment = (\n  { __typename?: 'onchain_links' }\n  & Pick<Onchain_Links, 'id' | 'proposer_address' | 'onchain_treasury_proposal_id' | 'onchain_motion_id'>\n  & { onchain_treasury_spend_proposal: Array<Maybe<(\n    { __typename?: 'TreasurySpendProposal' }\n    & Pick<TreasurySpendProposal, 'id' | 'beneficiary' | 'value' | 'bond'>\n    & { treasuryStatus: Maybe<Array<(\n      { __typename?: 'TreasuryStatus' }\n      & Pick<TreasuryStatus, 'id' | 'status'>\n    )>> }\n  )>> }\n);\n\nexport type TreasuryProposalPostFragment = (\n  { __typename?: 'posts' }\n  & Pick<Posts, 'content' | 'created_at' | 'id' | 'updated_at' | 'title'>\n  & { author: Maybe<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'name' | 'username'>\n  )>, comments: Array<(\n    { __typename?: 'comments' }\n    & CommentFieldsFragment\n  )>, onchain_link: Maybe<(\n    { __typename?: 'onchain_links' }\n    & OnchainLinkTreasuryProposalFragment\n  )>, topic: (\n    { __typename?: 'post_topics' }\n    & Pick<Post_Topics, 'id' | 'name'>\n  ), type: (\n    { __typename?: 'post_types' }\n    & Pick<Post_Types, 'id' | 'name'>\n  ) }\n);\n\nexport type TreasuryProposalPostAndCommentsQueryVariables = {\n  id: Scalars['Int']\n};\n\n\nexport type TreasuryProposalPostAndCommentsQuery = (\n  { __typename?: 'query_root' }\n  & { posts: Array<(\n    { __typename?: 'posts' }\n    & TreasuryProposalPostFragment\n  )> }\n);\n\nexport type UndoEmailChangeMutationVariables = {\n  token: Scalars['String']\n};\n\n\nexport type UndoEmailChangeMutation = (\n  { __typename?: 'mutation_root' }\n  & { undoEmailChange: Maybe<(\n    { __typename?: 'UndoEmailChangeResponse' }\n    & Pick<UndoEmailChangeResponse, 'message' | 'token' | 'email'>\n  )> }\n);\n\nexport type VerifyEmailMutationVariables = {\n  token: Scalars['String']\n};\n\n\nexport type VerifyEmailMutation = (\n  { __typename?: 'mutation_root' }\n  & { verifyEmail: Maybe<(\n    { __typename?: 'ChangeResponse' }\n    & Pick<ChangeResponse, 'message' | 'token'>\n  )> }\n);\n\nexport const PostReactionFieldsFragmentDoc = gql`\n    fragment postReactionFields on post_reactions {\n  id\n  reacting_user {\n    id\n    username\n  }\n  reaction\n  created_at\n  updated_at\n}\n    `;\nexport const CommentReactionFieldsFragmentDoc = gql`\n    fragment commentReactionFields on comment_reactions {\n  id\n  reacting_user {\n    id\n    username\n  }\n  reaction\n  created_at\n  updated_at\n}\n    `;\nexport const TopicFragmentDoc = gql`\n    fragment topic on post_topics {\n  id\n  name\n}\n    `;\nexport const CommentFieldsFragmentDoc = gql`\n    fragment commentFields on comments {\n  id\n  author {\n    id\n    name\n    username\n  }\n  content\n  created_at\n  updated_at\n}\n    `;\nexport const DiscussionPostFragmentDoc = gql`\n    fragment discussionPost on posts {\n  author {\n    id\n    name\n    username\n  }\n  content\n  created_at\n  id\n  updated_at\n  comments(order_by: {created_at: asc}) {\n    ...commentFields\n  }\n  title\n  topic {\n    id\n    name\n  }\n  type {\n    id\n    name\n  }\n}\n    ${CommentFieldsFragmentDoc}`;\nexport const OnchainLinkMotionPreimageFragmentDoc = gql`\n    fragment onchainLinkMotionPreimage on Preimage {\n  hash\n  id\n  metaDescription\n  method\n  preimageArguments {\n    id\n    name\n    value\n  }\n}\n    `;\nexport const OnchainLinkMotionTreasuryFragmentDoc = gql`\n    fragment onchainLinkMotionTreasury on TreasurySpendProposal {\n  beneficiary\n  bond\n  value\n}\n    `;\nexport const OnchainLinkMotionFragmentDoc = gql`\n    fragment onchainLinkMotion on onchain_links {\n  id\n  proposer_address\n  onchain_referendum_id\n  onchain_motion_id\n  onchain_motion(where: {}) {\n    id\n    motionStatus(last: 1) {\n      id\n      status\n    }\n    memberCount\n    method\n    motionProposalHash\n    motionProposalArguments {\n      name\n      value\n    }\n    preimage {\n      ...onchainLinkMotionPreimage\n    }\n    treasurySpendProposal {\n      ...onchainLinkMotionTreasury\n    }\n  }\n}\n    ${OnchainLinkMotionPreimageFragmentDoc}\n${OnchainLinkMotionTreasuryFragmentDoc}`;\nexport const MotionPostFragmentDoc = gql`\n    fragment motionPost on posts {\n  author {\n    id\n    name\n    username\n  }\n  content\n  created_at\n  id\n  updated_at\n  comments(order_by: {created_at: asc}) {\n    ...commentFields\n  }\n  onchain_link {\n    ...onchainLinkMotion\n  }\n  title\n  topic {\n    id\n    name\n  }\n  type {\n    id\n    name\n  }\n}\n    ${CommentFieldsFragmentDoc}\n${OnchainLinkMotionFragmentDoc}`;\nexport const OnchainLinkProposalFragmentDoc = gql`\n    fragment onchainLinkProposal on onchain_links {\n  id\n  proposer_address\n  onchain_proposal_id\n  onchain_referendum_id\n  onchain_proposal(where: {}) {\n    id\n    depositAmount\n    proposalStatus(last: 1) {\n      id\n      status\n    }\n    preimage {\n      hash\n      id\n      metaDescription\n      method\n      preimageArguments {\n        id\n        name\n        value\n      }\n    }\n  }\n}\n    `;\nexport const ProposalPostFragmentDoc = gql`\n    fragment proposalPost on posts {\n  author {\n    id\n    name\n    username\n  }\n  content\n  created_at\n  id\n  updated_at\n  comments(order_by: {created_at: asc}) {\n    ...commentFields\n  }\n  onchain_link {\n    ...onchainLinkProposal\n  }\n  title\n  topic {\n    id\n    name\n  }\n  type {\n    id\n    name\n  }\n}\n    ${CommentFieldsFragmentDoc}\n${OnchainLinkProposalFragmentDoc}`;\nexport const OnchainLinkReferendumFragmentDoc = gql`\n    fragment onchainLinkReferendum on onchain_links {\n  id\n  proposer_address\n  onchain_referendum_id\n  onchain_referendum(where: {}) {\n    id\n    delay\n    end\n    voteThreshold\n    referendumStatus(last: 1) {\n      status\n      id\n    }\n    preimage {\n      hash\n      id\n      metaDescription\n      method\n      preimageArguments {\n        id\n        name\n        value\n      }\n    }\n  }\n}\n    `;\nexport const ReferendumPostFragmentDoc = gql`\n    fragment referendumPost on posts {\n  author {\n    id\n    name\n    username\n  }\n  content\n  created_at\n  id\n  updated_at\n  comments(order_by: {created_at: asc}) {\n    ...commentFields\n  }\n  onchain_link {\n    ...onchainLinkReferendum\n  }\n  title\n  topic {\n    id\n    name\n  }\n  type {\n    id\n    name\n  }\n}\n    ${CommentFieldsFragmentDoc}\n${OnchainLinkReferendumFragmentDoc}`;\nexport const OnchainLinkTreasuryProposalFragmentDoc = gql`\n    fragment onchainLinkTreasuryProposal on onchain_links {\n  id\n  proposer_address\n  onchain_treasury_proposal_id\n  onchain_motion_id\n  onchain_treasury_spend_proposal(where: {}) {\n    id\n    beneficiary\n    value\n    bond\n    treasuryStatus(last: 1) {\n      id\n      status\n    }\n  }\n}\n    `;\nexport const TreasuryProposalPostFragmentDoc = gql`\n    fragment treasuryProposalPost on posts {\n  author {\n    id\n    name\n    username\n  }\n  content\n  created_at\n  id\n  updated_at\n  comments(order_by: {created_at: asc}) {\n    ...commentFields\n  }\n  onchain_link {\n    ...onchainLinkTreasuryProposal\n  }\n  title\n  topic {\n    id\n    name\n  }\n  type {\n    id\n    name\n  }\n}\n    ${CommentFieldsFragmentDoc}\n${OnchainLinkTreasuryProposalFragmentDoc}`;\nexport const EditCommentDocument = gql`\n    mutation EditComment($id: uuid!, $content: String!) {\n  update_comments(where: {id: {_eq: $id}}, _set: {content: $content}) {\n    affected_rows\n  }\n}\n    `;\nexport type EditCommentMutationFn = ApolloReactCommon.MutationFunction<EditCommentMutation, EditCommentMutationVariables>;\n\n/**\n * __useEditCommentMutation__\n *\n * To run a mutation, you first call `useEditCommentMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useEditCommentMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [editCommentMutation, { data, loading, error }] = useEditCommentMutation({\n *   variables: {\n *      id: // value for 'id'\n *      content: // value for 'content'\n *   },\n * });\n */\nexport function useEditCommentMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<EditCommentMutation, EditCommentMutationVariables>) {\n        return ApolloReactHooks.useMutation<EditCommentMutation, EditCommentMutationVariables>(EditCommentDocument, baseOptions);\n      }\nexport type EditCommentMutationHookResult = ReturnType<typeof useEditCommentMutation>;\nexport type EditCommentMutationResult = ApolloReactCommon.MutationResult<EditCommentMutation>;\nexport type EditCommentMutationOptions = ApolloReactCommon.BaseMutationOptions<EditCommentMutation, EditCommentMutationVariables>;\nexport const LoginDocument = gql`\n    mutation LOGIN($password: String!, $username: String!) {\n  login(password: $password, username: $username) {\n    user {\n      id\n      name\n      username\n      email\n      email_verified\n    }\n    token\n  }\n}\n    `;\nexport type LoginMutationFn = ApolloReactCommon.MutationFunction<LoginMutation, LoginMutationVariables>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      password: // value for 'password'\n *      username: // value for 'username'\n *   },\n * });\n */\nexport function useLoginMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<LoginMutation, LoginMutationVariables>) {\n        return ApolloReactHooks.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument, baseOptions);\n      }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = ApolloReactCommon.MutationResult<LoginMutation>;\nexport type LoginMutationOptions = ApolloReactCommon.BaseMutationOptions<LoginMutation, LoginMutationVariables>;\nexport const AddressLoginStartDocument = gql`\n    mutation AddressLoginStart($address: String!) {\n  addressLoginStart(address: $address) {\n    message\n    signMessage\n  }\n}\n    `;\nexport type AddressLoginStartMutationFn = ApolloReactCommon.MutationFunction<AddressLoginStartMutation, AddressLoginStartMutationVariables>;\n\n/**\n * __useAddressLoginStartMutation__\n *\n * To run a mutation, you first call `useAddressLoginStartMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAddressLoginStartMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [addressLoginStartMutation, { data, loading, error }] = useAddressLoginStartMutation({\n *   variables: {\n *      address: // value for 'address'\n *   },\n * });\n */\nexport function useAddressLoginStartMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<AddressLoginStartMutation, AddressLoginStartMutationVariables>) {\n        return ApolloReactHooks.useMutation<AddressLoginStartMutation, AddressLoginStartMutationVariables>(AddressLoginStartDocument, baseOptions);\n      }\nexport type AddressLoginStartMutationHookResult = ReturnType<typeof useAddressLoginStartMutation>;\nexport type AddressLoginStartMutationResult = ApolloReactCommon.MutationResult<AddressLoginStartMutation>;\nexport type AddressLoginStartMutationOptions = ApolloReactCommon.BaseMutationOptions<AddressLoginStartMutation, AddressLoginStartMutationVariables>;\nexport const AddressLoginDocument = gql`\n    mutation AddressLogin($address: String!, $signature: String!) {\n  addressLogin(address: $address, signature: $signature) {\n    user {\n      id\n      name\n      username\n      email\n      email_verified\n    }\n    token\n  }\n}\n    `;\nexport type AddressLoginMutationFn = ApolloReactCommon.MutationFunction<AddressLoginMutation, AddressLoginMutationVariables>;\n\n/**\n * __useAddressLoginMutation__\n *\n * To run a mutation, you first call `useAddressLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAddressLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [addressLoginMutation, { data, loading, error }] = useAddressLoginMutation({\n *   variables: {\n *      address: // value for 'address'\n *      signature: // value for 'signature'\n *   },\n * });\n */\nexport function useAddressLoginMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<AddressLoginMutation, AddressLoginMutationVariables>) {\n        return ApolloReactHooks.useMutation<AddressLoginMutation, AddressLoginMutationVariables>(AddressLoginDocument, baseOptions);\n      }\nexport type AddressLoginMutationHookResult = ReturnType<typeof useAddressLoginMutation>;\nexport type AddressLoginMutationResult = ApolloReactCommon.MutationResult<AddressLoginMutation>;\nexport type AddressLoginMutationOptions = ApolloReactCommon.BaseMutationOptions<AddressLoginMutation, AddressLoginMutationVariables>;\nexport const LogoutDocument = gql`\n    mutation LOGOUT {\n  logout {\n    message\n  }\n}\n    `;\nexport type LogoutMutationFn = ApolloReactCommon.MutationFunction<LogoutMutation, LogoutMutationVariables>;\n\n/**\n * __useLogoutMutation__\n *\n * To run a mutation, you first call `useLogoutMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLogoutMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [logoutMutation, { data, loading, error }] = useLogoutMutation({\n *   variables: {\n *   },\n * });\n */\nexport function useLogoutMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<LogoutMutation, LogoutMutationVariables>) {\n        return ApolloReactHooks.useMutation<LogoutMutation, LogoutMutationVariables>(LogoutDocument, baseOptions);\n      }\nexport type LogoutMutationHookResult = ReturnType<typeof useLogoutMutation>;\nexport type LogoutMutationResult = ApolloReactCommon.MutationResult<LogoutMutation>;\nexport type LogoutMutationOptions = ApolloReactCommon.BaseMutationOptions<LogoutMutation, LogoutMutationVariables>;\nexport const GetCouncilMembersDocument = gql`\n    query getCouncilMembers {\n  councils(last: 1) {\n    members {\n      id\n      address\n    }\n  }\n}\n    `;\n\n/**\n * __useGetCouncilMembersQuery__\n *\n * To run a query within a React component, call `useGetCouncilMembersQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetCouncilMembersQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetCouncilMembersQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetCouncilMembersQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<GetCouncilMembersQuery, GetCouncilMembersQueryVariables>) {\n        return ApolloReactHooks.useQuery<GetCouncilMembersQuery, GetCouncilMembersQueryVariables>(GetCouncilMembersDocument, baseOptions);\n      }\nexport function useGetCouncilMembersLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<GetCouncilMembersQuery, GetCouncilMembersQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<GetCouncilMembersQuery, GetCouncilMembersQueryVariables>(GetCouncilMembersDocument, baseOptions);\n        }\nexport type GetCouncilMembersQueryHookResult = ReturnType<typeof useGetCouncilMembersQuery>;\nexport type GetCouncilMembersLazyQueryHookResult = ReturnType<typeof useGetCouncilMembersLazyQuery>;\nexport type GetCouncilMembersQueryResult = ApolloReactCommon.QueryResult<GetCouncilMembersQuery, GetCouncilMembersQueryVariables>;\nexport const EditPostDocument = gql`\n    mutation EditPost($id: Int!, $content: String!, $title: String!) {\n  update_posts(where: {id: {_eq: $id}}, _set: {content: $content, title: $title}) {\n    affected_rows\n  }\n}\n    `;\nexport type EditPostMutationFn = ApolloReactCommon.MutationFunction<EditPostMutation, EditPostMutationVariables>;\n\n/**\n * __useEditPostMutation__\n *\n * To run a mutation, you first call `useEditPostMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useEditPostMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [editPostMutation, { data, loading, error }] = useEditPostMutation({\n *   variables: {\n *      id: // value for 'id'\n *      content: // value for 'content'\n *      title: // value for 'title'\n *   },\n * });\n */\nexport function useEditPostMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<EditPostMutation, EditPostMutationVariables>) {\n        return ApolloReactHooks.useMutation<EditPostMutation, EditPostMutationVariables>(EditPostDocument, baseOptions);\n      }\nexport type EditPostMutationHookResult = ReturnType<typeof useEditPostMutation>;\nexport type EditPostMutationResult = ApolloReactCommon.MutationResult<EditPostMutation>;\nexport type EditPostMutationOptions = ApolloReactCommon.BaseMutationOptions<EditPostMutation, EditPostMutationVariables>;\nexport const AddPostCommentDocument = gql`\n    mutation AddPostComment($authorId: Int!, $content: String!, $postId: Int!) {\n  __typename\n  insert_comments(objects: {author_id: $authorId, content: $content, post_id: $postId}) {\n    affected_rows\n  }\n}\n    `;\nexport type AddPostCommentMutationFn = ApolloReactCommon.MutationFunction<AddPostCommentMutation, AddPostCommentMutationVariables>;\n\n/**\n * __useAddPostCommentMutation__\n *\n * To run a mutation, you first call `useAddPostCommentMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAddPostCommentMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [addPostCommentMutation, { data, loading, error }] = useAddPostCommentMutation({\n *   variables: {\n *      authorId: // value for 'authorId'\n *      content: // value for 'content'\n *      postId: // value for 'postId'\n *   },\n * });\n */\nexport function useAddPostCommentMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<AddPostCommentMutation, AddPostCommentMutationVariables>) {\n        return ApolloReactHooks.useMutation<AddPostCommentMutation, AddPostCommentMutationVariables>(AddPostCommentDocument, baseOptions);\n      }\nexport type AddPostCommentMutationHookResult = ReturnType<typeof useAddPostCommentMutation>;\nexport type AddPostCommentMutationResult = ApolloReactCommon.MutationResult<AddPostCommentMutation>;\nexport type AddPostCommentMutationOptions = ApolloReactCommon.BaseMutationOptions<AddPostCommentMutation, AddPostCommentMutationVariables>;\nexport const PostReactionsDocument = gql`\n    query PostReactions($postId: Int!) {\n  post_reactions(where: {post_id: {_eq: $postId}}) {\n    ...postReactionFields\n  }\n}\n    ${PostReactionFieldsFragmentDoc}`;\n\n/**\n * __usePostReactionsQuery__\n *\n * To run a query within a React component, call `usePostReactionsQuery` and pass it any options that fit your needs.\n * When your component renders, `usePostReactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePostReactionsQuery({\n *   variables: {\n *      postId: // value for 'postId'\n *   },\n * });\n */\nexport function usePostReactionsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<PostReactionsQuery, PostReactionsQueryVariables>) {\n        return ApolloReactHooks.useQuery<PostReactionsQuery, PostReactionsQueryVariables>(PostReactionsDocument, baseOptions);\n      }\nexport function usePostReactionsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<PostReactionsQuery, PostReactionsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<PostReactionsQuery, PostReactionsQueryVariables>(PostReactionsDocument, baseOptions);\n        }\nexport type PostReactionsQueryHookResult = ReturnType<typeof usePostReactionsQuery>;\nexport type PostReactionsLazyQueryHookResult = ReturnType<typeof usePostReactionsLazyQuery>;\nexport type PostReactionsQueryResult = ApolloReactCommon.QueryResult<PostReactionsQuery, PostReactionsQueryVariables>;\nexport const CommentReactionsDocument = gql`\n    query CommentReactions($commentId: uuid!) {\n  comment_reactions(where: {comment_id: {_eq: $commentId}}) {\n    ...commentReactionFields\n  }\n}\n    ${CommentReactionFieldsFragmentDoc}`;\n\n/**\n * __useCommentReactionsQuery__\n *\n * To run a query within a React component, call `useCommentReactionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useCommentReactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCommentReactionsQuery({\n *   variables: {\n *      commentId: // value for 'commentId'\n *   },\n * });\n */\nexport function useCommentReactionsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<CommentReactionsQuery, CommentReactionsQueryVariables>) {\n        return ApolloReactHooks.useQuery<CommentReactionsQuery, CommentReactionsQueryVariables>(CommentReactionsDocument, baseOptions);\n      }\nexport function useCommentReactionsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<CommentReactionsQuery, CommentReactionsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<CommentReactionsQuery, CommentReactionsQueryVariables>(CommentReactionsDocument, baseOptions);\n        }\nexport type CommentReactionsQueryHookResult = ReturnType<typeof useCommentReactionsQuery>;\nexport type CommentReactionsLazyQueryHookResult = ReturnType<typeof useCommentReactionsLazyQuery>;\nexport type CommentReactionsQueryResult = ApolloReactCommon.QueryResult<CommentReactionsQuery, CommentReactionsQueryVariables>;\nexport const AddPostReactionDocument = gql`\n    mutation AddPostReaction($postId: Int!, $userId: Int!, $reaction: bpchar!) {\n  __typename\n  insert_post_reactions(objects: {post_id: $postId, user_id: $userId, reaction: $reaction}) {\n    affected_rows\n  }\n}\n    `;\nexport type AddPostReactionMutationFn = ApolloReactCommon.MutationFunction<AddPostReactionMutation, AddPostReactionMutationVariables>;\n\n/**\n * __useAddPostReactionMutation__\n *\n * To run a mutation, you first call `useAddPostReactionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAddPostReactionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [addPostReactionMutation, { data, loading, error }] = useAddPostReactionMutation({\n *   variables: {\n *      postId: // value for 'postId'\n *      userId: // value for 'userId'\n *      reaction: // value for 'reaction'\n *   },\n * });\n */\nexport function useAddPostReactionMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<AddPostReactionMutation, AddPostReactionMutationVariables>) {\n        return ApolloReactHooks.useMutation<AddPostReactionMutation, AddPostReactionMutationVariables>(AddPostReactionDocument, baseOptions);\n      }\nexport type AddPostReactionMutationHookResult = ReturnType<typeof useAddPostReactionMutation>;\nexport type AddPostReactionMutationResult = ApolloReactCommon.MutationResult<AddPostReactionMutation>;\nexport type AddPostReactionMutationOptions = ApolloReactCommon.BaseMutationOptions<AddPostReactionMutation, AddPostReactionMutationVariables>;\nexport const AddCommentReactionDocument = gql`\n    mutation AddCommentReaction($commentId: uuid!, $userId: Int!, $reaction: bpchar!) {\n  __typename\n  insert_comment_reactions(objects: {comment_id: $commentId, user_id: $userId, reaction: $reaction}) {\n    affected_rows\n  }\n}\n    `;\nexport type AddCommentReactionMutationFn = ApolloReactCommon.MutationFunction<AddCommentReactionMutation, AddCommentReactionMutationVariables>;\n\n/**\n * __useAddCommentReactionMutation__\n *\n * To run a mutation, you first call `useAddCommentReactionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAddCommentReactionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [addCommentReactionMutation, { data, loading, error }] = useAddCommentReactionMutation({\n *   variables: {\n *      commentId: // value for 'commentId'\n *      userId: // value for 'userId'\n *      reaction: // value for 'reaction'\n *   },\n * });\n */\nexport function useAddCommentReactionMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<AddCommentReactionMutation, AddCommentReactionMutationVariables>) {\n        return ApolloReactHooks.useMutation<AddCommentReactionMutation, AddCommentReactionMutationVariables>(AddCommentReactionDocument, baseOptions);\n      }\nexport type AddCommentReactionMutationHookResult = ReturnType<typeof useAddCommentReactionMutation>;\nexport type AddCommentReactionMutationResult = ApolloReactCommon.MutationResult<AddCommentReactionMutation>;\nexport type AddCommentReactionMutationOptions = ApolloReactCommon.BaseMutationOptions<AddCommentReactionMutation, AddCommentReactionMutationVariables>;\nexport const DeletePostReactionDocument = gql`\n    mutation DeletePostReaction($postId: Int!, $userId: Int!, $reaction: bpchar!) {\n  delete_post_reactions(where: {_and: [{post_id: {_eq: $postId}}, {user_id: {_eq: $userId}}, {reaction: {_eq: $reaction}}]}) {\n    affected_rows\n  }\n}\n    `;\nexport type DeletePostReactionMutationFn = ApolloReactCommon.MutationFunction<DeletePostReactionMutation, DeletePostReactionMutationVariables>;\n\n/**\n * __useDeletePostReactionMutation__\n *\n * To run a mutation, you first call `useDeletePostReactionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDeletePostReactionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [deletePostReactionMutation, { data, loading, error }] = useDeletePostReactionMutation({\n *   variables: {\n *      postId: // value for 'postId'\n *      userId: // value for 'userId'\n *      reaction: // value for 'reaction'\n *   },\n * });\n */\nexport function useDeletePostReactionMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<DeletePostReactionMutation, DeletePostReactionMutationVariables>) {\n        return ApolloReactHooks.useMutation<DeletePostReactionMutation, DeletePostReactionMutationVariables>(DeletePostReactionDocument, baseOptions);\n      }\nexport type DeletePostReactionMutationHookResult = ReturnType<typeof useDeletePostReactionMutation>;\nexport type DeletePostReactionMutationResult = ApolloReactCommon.MutationResult<DeletePostReactionMutation>;\nexport type DeletePostReactionMutationOptions = ApolloReactCommon.BaseMutationOptions<DeletePostReactionMutation, DeletePostReactionMutationVariables>;\nexport const DeleteCommentReactionDocument = gql`\n    mutation DeleteCommentReaction($commentId: uuid!, $userId: Int!, $reaction: bpchar!) {\n  delete_comment_reactions(where: {_and: [{comment_id: {_eq: $commentId}}, {user_id: {_eq: $userId}}, {reaction: {_eq: $reaction}}]}) {\n    affected_rows\n  }\n}\n    `;\nexport type DeleteCommentReactionMutationFn = ApolloReactCommon.MutationFunction<DeleteCommentReactionMutation, DeleteCommentReactionMutationVariables>;\n\n/**\n * __useDeleteCommentReactionMutation__\n *\n * To run a mutation, you first call `useDeleteCommentReactionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDeleteCommentReactionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [deleteCommentReactionMutation, { data, loading, error }] = useDeleteCommentReactionMutation({\n *   variables: {\n *      commentId: // value for 'commentId'\n *      userId: // value for 'userId'\n *      reaction: // value for 'reaction'\n *   },\n * });\n */\nexport function useDeleteCommentReactionMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<DeleteCommentReactionMutation, DeleteCommentReactionMutationVariables>) {\n        return ApolloReactHooks.useMutation<DeleteCommentReactionMutation, DeleteCommentReactionMutationVariables>(DeleteCommentReactionDocument, baseOptions);\n      }\nexport type DeleteCommentReactionMutationHookResult = ReturnType<typeof useDeleteCommentReactionMutation>;\nexport type DeleteCommentReactionMutationResult = ApolloReactCommon.MutationResult<DeleteCommentReactionMutation>;\nexport type DeleteCommentReactionMutationOptions = ApolloReactCommon.BaseMutationOptions<DeleteCommentReactionMutation, DeleteCommentReactionMutationVariables>;\nexport const ReportContentDocument = gql`\n    mutation ReportContent($network: String!, $type: String!, $content_id: String!, $reason: String!, $comments: String!) {\n  reportContent(network: $network, type: $type, content_id: $content_id, reason: $reason, comments: $comments) {\n    message\n  }\n}\n    `;\nexport type ReportContentMutationFn = ApolloReactCommon.MutationFunction<ReportContentMutation, ReportContentMutationVariables>;\n\n/**\n * __useReportContentMutation__\n *\n * To run a mutation, you first call `useReportContentMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReportContentMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reportContentMutation, { data, loading, error }] = useReportContentMutation({\n *   variables: {\n *      network: // value for 'network'\n *      type: // value for 'type'\n *      content_id: // value for 'content_id'\n *      reason: // value for 'reason'\n *      comments: // value for 'comments'\n *   },\n * });\n */\nexport function useReportContentMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<ReportContentMutation, ReportContentMutationVariables>) {\n        return ApolloReactHooks.useMutation<ReportContentMutation, ReportContentMutationVariables>(ReportContentDocument, baseOptions);\n      }\nexport type ReportContentMutationHookResult = ReturnType<typeof useReportContentMutation>;\nexport type ReportContentMutationResult = ApolloReactCommon.MutationResult<ReportContentMutation>;\nexport type ReportContentMutationOptions = ApolloReactCommon.BaseMutationOptions<ReportContentMutation, ReportContentMutationVariables>;\nexport const PostSubscribeDocument = gql`\n    mutation PostSubscribe($postId: Int!) {\n  postSubscribe(post_id: $postId) {\n    message\n  }\n}\n    `;\nexport type PostSubscribeMutationFn = ApolloReactCommon.MutationFunction<PostSubscribeMutation, PostSubscribeMutationVariables>;\n\n/**\n * __usePostSubscribeMutation__\n *\n * To run a mutation, you first call `usePostSubscribeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `usePostSubscribeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [postSubscribeMutation, { data, loading, error }] = usePostSubscribeMutation({\n *   variables: {\n *      postId: // value for 'postId'\n *   },\n * });\n */\nexport function usePostSubscribeMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<PostSubscribeMutation, PostSubscribeMutationVariables>) {\n        return ApolloReactHooks.useMutation<PostSubscribeMutation, PostSubscribeMutationVariables>(PostSubscribeDocument, baseOptions);\n      }\nexport type PostSubscribeMutationHookResult = ReturnType<typeof usePostSubscribeMutation>;\nexport type PostSubscribeMutationResult = ApolloReactCommon.MutationResult<PostSubscribeMutation>;\nexport type PostSubscribeMutationOptions = ApolloReactCommon.BaseMutationOptions<PostSubscribeMutation, PostSubscribeMutationVariables>;\nexport const PostUnsubscribeDocument = gql`\n    mutation PostUnsubscribe($postId: Int!) {\n  postUnsubscribe(post_id: $postId) {\n    message\n  }\n}\n    `;\nexport type PostUnsubscribeMutationFn = ApolloReactCommon.MutationFunction<PostUnsubscribeMutation, PostUnsubscribeMutationVariables>;\n\n/**\n * __usePostUnsubscribeMutation__\n *\n * To run a mutation, you first call `usePostUnsubscribeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `usePostUnsubscribeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [postUnsubscribeMutation, { data, loading, error }] = usePostUnsubscribeMutation({\n *   variables: {\n *      postId: // value for 'postId'\n *   },\n * });\n */\nexport function usePostUnsubscribeMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<PostUnsubscribeMutation, PostUnsubscribeMutationVariables>) {\n        return ApolloReactHooks.useMutation<PostUnsubscribeMutation, PostUnsubscribeMutationVariables>(PostUnsubscribeDocument, baseOptions);\n      }\nexport type PostUnsubscribeMutationHookResult = ReturnType<typeof usePostUnsubscribeMutation>;\nexport type PostUnsubscribeMutationResult = ApolloReactCommon.MutationResult<PostUnsubscribeMutation>;\nexport type PostUnsubscribeMutationOptions = ApolloReactCommon.BaseMutationOptions<PostUnsubscribeMutation, PostUnsubscribeMutationVariables>;\nexport const SubscriptionDocument = gql`\n    query Subscription($postId: Int!) {\n  subscription(post_id: $postId) {\n    subscribed\n  }\n}\n    `;\n\n/**\n * __useSubscriptionQuery__\n *\n * To run a query within a React component, call `useSubscriptionQuery` and pass it any options that fit your needs.\n * When your component renders, `useSubscriptionQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useSubscriptionQuery({\n *   variables: {\n *      postId: // value for 'postId'\n *   },\n * });\n */\nexport function useSubscriptionQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<SubscriptionQuery, SubscriptionQueryVariables>) {\n        return ApolloReactHooks.useQuery<SubscriptionQuery, SubscriptionQueryVariables>(SubscriptionDocument, baseOptions);\n      }\nexport function useSubscriptionLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<SubscriptionQuery, SubscriptionQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<SubscriptionQuery, SubscriptionQueryVariables>(SubscriptionDocument, baseOptions);\n        }\nexport type SubscriptionQueryHookResult = ReturnType<typeof useSubscriptionQuery>;\nexport type SubscriptionLazyQueryHookResult = ReturnType<typeof useSubscriptionLazyQuery>;\nexport type SubscriptionQueryResult = ApolloReactCommon.QueryResult<SubscriptionQuery, SubscriptionQueryVariables>;\nexport const Get_Refresh_TokenDocument = gql`\n    query GET_REFRESH_TOKEN {\n  token {\n    token\n  }\n}\n    `;\n\n/**\n * __useGet_Refresh_TokenQuery__\n *\n * To run a query within a React component, call `useGet_Refresh_TokenQuery` and pass it any options that fit your needs.\n * When your component renders, `useGet_Refresh_TokenQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGet_Refresh_TokenQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGet_Refresh_TokenQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<Get_Refresh_TokenQuery, Get_Refresh_TokenQueryVariables>) {\n        return ApolloReactHooks.useQuery<Get_Refresh_TokenQuery, Get_Refresh_TokenQueryVariables>(Get_Refresh_TokenDocument, baseOptions);\n      }\nexport function useGet_Refresh_TokenLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<Get_Refresh_TokenQuery, Get_Refresh_TokenQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<Get_Refresh_TokenQuery, Get_Refresh_TokenQueryVariables>(Get_Refresh_TokenDocument, baseOptions);\n        }\nexport type Get_Refresh_TokenQueryHookResult = ReturnType<typeof useGet_Refresh_TokenQuery>;\nexport type Get_Refresh_TokenLazyQueryHookResult = ReturnType<typeof useGet_Refresh_TokenLazyQuery>;\nexport type Get_Refresh_TokenQueryResult = ApolloReactCommon.QueryResult<Get_Refresh_TokenQuery, Get_Refresh_TokenQueryVariables>;\nexport const CreatePostDocument = gql`\n    mutation createPost($userId: Int!, $content: String!, $topicId: Int!, $title: String!) {\n  __typename\n  insert_posts(objects: {author_id: $userId, content: $content, title: $title, topic_id: $topicId}) {\n    affected_rows\n    returning {\n      id\n    }\n  }\n}\n    `;\nexport type CreatePostMutationFn = ApolloReactCommon.MutationFunction<CreatePostMutation, CreatePostMutationVariables>;\n\n/**\n * __useCreatePostMutation__\n *\n * To run a mutation, you first call `useCreatePostMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreatePostMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createPostMutation, { data, loading, error }] = useCreatePostMutation({\n *   variables: {\n *      userId: // value for 'userId'\n *      content: // value for 'content'\n *      topicId: // value for 'topicId'\n *      title: // value for 'title'\n *   },\n * });\n */\nexport function useCreatePostMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<CreatePostMutation, CreatePostMutationVariables>) {\n        return ApolloReactHooks.useMutation<CreatePostMutation, CreatePostMutationVariables>(CreatePostDocument, baseOptions);\n      }\nexport type CreatePostMutationHookResult = ReturnType<typeof useCreatePostMutation>;\nexport type CreatePostMutationResult = ApolloReactCommon.MutationResult<CreatePostMutation>;\nexport type CreatePostMutationOptions = ApolloReactCommon.BaseMutationOptions<CreatePostMutation, CreatePostMutationVariables>;\nexport const Post_TopicsDocument = gql`\n    query Post_topics {\n  post_topics {\n    ...topic\n  }\n}\n    ${TopicFragmentDoc}`;\n\n/**\n * __usePost_TopicsQuery__\n *\n * To run a query within a React component, call `usePost_TopicsQuery` and pass it any options that fit your needs.\n * When your component renders, `usePost_TopicsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePost_TopicsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function usePost_TopicsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<Post_TopicsQuery, Post_TopicsQueryVariables>) {\n        return ApolloReactHooks.useQuery<Post_TopicsQuery, Post_TopicsQueryVariables>(Post_TopicsDocument, baseOptions);\n      }\nexport function usePost_TopicsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<Post_TopicsQuery, Post_TopicsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<Post_TopicsQuery, Post_TopicsQueryVariables>(Post_TopicsDocument, baseOptions);\n        }\nexport type Post_TopicsQueryHookResult = ReturnType<typeof usePost_TopicsQuery>;\nexport type Post_TopicsLazyQueryHookResult = ReturnType<typeof usePost_TopicsLazyQuery>;\nexport type Post_TopicsQueryResult = ApolloReactCommon.QueryResult<Post_TopicsQuery, Post_TopicsQueryVariables>;\nexport const DiscussionPostAndCommentsDocument = gql`\n    query DiscussionPostAndComments($id: Int!) {\n  posts(where: {id: {_eq: $id}}) {\n    ...discussionPost\n  }\n}\n    ${DiscussionPostFragmentDoc}`;\n\n/**\n * __useDiscussionPostAndCommentsQuery__\n *\n * To run a query within a React component, call `useDiscussionPostAndCommentsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDiscussionPostAndCommentsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDiscussionPostAndCommentsQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDiscussionPostAndCommentsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<DiscussionPostAndCommentsQuery, DiscussionPostAndCommentsQueryVariables>) {\n        return ApolloReactHooks.useQuery<DiscussionPostAndCommentsQuery, DiscussionPostAndCommentsQueryVariables>(DiscussionPostAndCommentsDocument, baseOptions);\n      }\nexport function useDiscussionPostAndCommentsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<DiscussionPostAndCommentsQuery, DiscussionPostAndCommentsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<DiscussionPostAndCommentsQuery, DiscussionPostAndCommentsQueryVariables>(DiscussionPostAndCommentsDocument, baseOptions);\n        }\nexport type DiscussionPostAndCommentsQueryHookResult = ReturnType<typeof useDiscussionPostAndCommentsQuery>;\nexport type DiscussionPostAndCommentsLazyQueryHookResult = ReturnType<typeof useDiscussionPostAndCommentsLazyQuery>;\nexport type DiscussionPostAndCommentsQueryResult = ApolloReactCommon.QueryResult<DiscussionPostAndCommentsQuery, DiscussionPostAndCommentsQueryVariables>;\nexport const LatestDiscussionPostsDocument = gql`\n    query LatestDiscussionPosts($limit: Int! = 20) {\n  posts(order_by: {created_at: desc}, limit: $limit, where: {type: {id: {_eq: 1}}}) {\n    id\n    title\n    author {\n      id\n      name\n      username\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n  }\n}\n    `;\n\n/**\n * __useLatestDiscussionPostsQuery__\n *\n * To run a query within a React component, call `useLatestDiscussionPostsQuery` and pass it any options that fit your needs.\n * When your component renders, `useLatestDiscussionPostsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLatestDiscussionPostsQuery({\n *   variables: {\n *      limit: // value for 'limit'\n *   },\n * });\n */\nexport function useLatestDiscussionPostsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<LatestDiscussionPostsQuery, LatestDiscussionPostsQueryVariables>) {\n        return ApolloReactHooks.useQuery<LatestDiscussionPostsQuery, LatestDiscussionPostsQueryVariables>(LatestDiscussionPostsDocument, baseOptions);\n      }\nexport function useLatestDiscussionPostsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<LatestDiscussionPostsQuery, LatestDiscussionPostsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<LatestDiscussionPostsQuery, LatestDiscussionPostsQueryVariables>(LatestDiscussionPostsDocument, baseOptions);\n        }\nexport type LatestDiscussionPostsQueryHookResult = ReturnType<typeof useLatestDiscussionPostsQuery>;\nexport type LatestDiscussionPostsLazyQueryHookResult = ReturnType<typeof useLatestDiscussionPostsLazyQuery>;\nexport type LatestDiscussionPostsQueryResult = ApolloReactCommon.QueryResult<LatestDiscussionPostsQuery, LatestDiscussionPostsQueryVariables>;\nexport const MotionPostAndCommentsDocument = gql`\n    query MotionPostAndComments($id: Int!) {\n  posts(where: {onchain_link: {onchain_motion_id: {_eq: $id}}}) {\n    ...motionPost\n  }\n}\n    ${MotionPostFragmentDoc}`;\n\n/**\n * __useMotionPostAndCommentsQuery__\n *\n * To run a query within a React component, call `useMotionPostAndCommentsQuery` and pass it any options that fit your needs.\n * When your component renders, `useMotionPostAndCommentsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMotionPostAndCommentsQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useMotionPostAndCommentsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<MotionPostAndCommentsQuery, MotionPostAndCommentsQueryVariables>) {\n        return ApolloReactHooks.useQuery<MotionPostAndCommentsQuery, MotionPostAndCommentsQueryVariables>(MotionPostAndCommentsDocument, baseOptions);\n      }\nexport function useMotionPostAndCommentsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<MotionPostAndCommentsQuery, MotionPostAndCommentsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<MotionPostAndCommentsQuery, MotionPostAndCommentsQueryVariables>(MotionPostAndCommentsDocument, baseOptions);\n        }\nexport type MotionPostAndCommentsQueryHookResult = ReturnType<typeof useMotionPostAndCommentsQuery>;\nexport type MotionPostAndCommentsLazyQueryHookResult = ReturnType<typeof useMotionPostAndCommentsLazyQuery>;\nexport type MotionPostAndCommentsQueryResult = ApolloReactCommon.QueryResult<MotionPostAndCommentsQuery, MotionPostAndCommentsQueryVariables>;\nexport const ChangeNotificationPreferenceDocument = gql`\n    mutation changeNotificationPreference($postParticipated: Boolean, $postCreated: Boolean, $newProposal: Boolean, $ownProposal: Boolean) {\n  changeNotificationPreference(notificationPreferences: {postParticipated: $postParticipated, postCreated: $postCreated, newProposal: $newProposal, ownProposal: $ownProposal}) {\n    message\n    token\n  }\n}\n    `;\nexport type ChangeNotificationPreferenceMutationFn = ApolloReactCommon.MutationFunction<ChangeNotificationPreferenceMutation, ChangeNotificationPreferenceMutationVariables>;\n\n/**\n * __useChangeNotificationPreferenceMutation__\n *\n * To run a mutation, you first call `useChangeNotificationPreferenceMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useChangeNotificationPreferenceMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [changeNotificationPreferenceMutation, { data, loading, error }] = useChangeNotificationPreferenceMutation({\n *   variables: {\n *      postParticipated: // value for 'postParticipated'\n *      postCreated: // value for 'postCreated'\n *      newProposal: // value for 'newProposal'\n *      ownProposal: // value for 'ownProposal'\n *   },\n * });\n */\nexport function useChangeNotificationPreferenceMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<ChangeNotificationPreferenceMutation, ChangeNotificationPreferenceMutationVariables>) {\n        return ApolloReactHooks.useMutation<ChangeNotificationPreferenceMutation, ChangeNotificationPreferenceMutationVariables>(ChangeNotificationPreferenceDocument, baseOptions);\n      }\nexport type ChangeNotificationPreferenceMutationHookResult = ReturnType<typeof useChangeNotificationPreferenceMutation>;\nexport type ChangeNotificationPreferenceMutationResult = ApolloReactCommon.MutationResult<ChangeNotificationPreferenceMutation>;\nexport type ChangeNotificationPreferenceMutationOptions = ApolloReactCommon.BaseMutationOptions<ChangeNotificationPreferenceMutation, ChangeNotificationPreferenceMutationVariables>;\nexport const LatestMotionPostsDocument = gql`\n    query LatestMotionPosts($postType: Int!, $limit: Int! = 5) {\n  posts(limit: $limit, where: {type: {id: {_eq: $postType}}, onchain_link: {onchain_motion_id: {_is_null: false}, onchain_referendum_id: {_is_null: true}}}, order_by: {onchain_link: {onchain_motion_id: desc}}) {\n    id\n    title\n    author {\n      id\n      username\n      name\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_motion_id\n      onchain_motion(where: {}) {\n        id\n        motionStatus(last: 1) {\n          id\n          status\n        }\n        preimage {\n          id\n          method\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    `;\n\n/**\n * __useLatestMotionPostsQuery__\n *\n * To run a query within a React component, call `useLatestMotionPostsQuery` and pass it any options that fit your needs.\n * When your component renders, `useLatestMotionPostsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLatestMotionPostsQuery({\n *   variables: {\n *      postType: // value for 'postType'\n *      limit: // value for 'limit'\n *   },\n * });\n */\nexport function useLatestMotionPostsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<LatestMotionPostsQuery, LatestMotionPostsQueryVariables>) {\n        return ApolloReactHooks.useQuery<LatestMotionPostsQuery, LatestMotionPostsQueryVariables>(LatestMotionPostsDocument, baseOptions);\n      }\nexport function useLatestMotionPostsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<LatestMotionPostsQuery, LatestMotionPostsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<LatestMotionPostsQuery, LatestMotionPostsQueryVariables>(LatestMotionPostsDocument, baseOptions);\n        }\nexport type LatestMotionPostsQueryHookResult = ReturnType<typeof useLatestMotionPostsQuery>;\nexport type LatestMotionPostsLazyQueryHookResult = ReturnType<typeof useLatestMotionPostsLazyQuery>;\nexport type LatestMotionPostsQueryResult = ApolloReactCommon.QueryResult<LatestMotionPostsQuery, LatestMotionPostsQueryVariables>;\nexport const LatestDemocracyProposalPostsDocument = gql`\n    query LatestDemocracyProposalPosts($postType: Int!, $postTopic: Int!, $limit: Int! = 5) {\n  posts(limit: $limit, where: {type: {id: {_eq: $postType}}, topic: {id: {_eq: $postTopic}}, onchain_link: {onchain_proposal_id: {_is_null: false}, onchain_referendum_id: {_is_null: true}}}, order_by: {onchain_link: {onchain_proposal_id: desc}}) {\n    id\n    title\n    author {\n      id\n      username\n      name\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_proposal_id\n      onchain_proposal(where: {}) {\n        id\n        proposalStatus(last: 1) {\n          id\n          status\n        }\n        preimage {\n          id\n          method\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    `;\n\n/**\n * __useLatestDemocracyProposalPostsQuery__\n *\n * To run a query within a React component, call `useLatestDemocracyProposalPostsQuery` and pass it any options that fit your needs.\n * When your component renders, `useLatestDemocracyProposalPostsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLatestDemocracyProposalPostsQuery({\n *   variables: {\n *      postType: // value for 'postType'\n *      postTopic: // value for 'postTopic'\n *      limit: // value for 'limit'\n *   },\n * });\n */\nexport function useLatestDemocracyProposalPostsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<LatestDemocracyProposalPostsQuery, LatestDemocracyProposalPostsQueryVariables>) {\n        return ApolloReactHooks.useQuery<LatestDemocracyProposalPostsQuery, LatestDemocracyProposalPostsQueryVariables>(LatestDemocracyProposalPostsDocument, baseOptions);\n      }\nexport function useLatestDemocracyProposalPostsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<LatestDemocracyProposalPostsQuery, LatestDemocracyProposalPostsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<LatestDemocracyProposalPostsQuery, LatestDemocracyProposalPostsQueryVariables>(LatestDemocracyProposalPostsDocument, baseOptions);\n        }\nexport type LatestDemocracyProposalPostsQueryHookResult = ReturnType<typeof useLatestDemocracyProposalPostsQuery>;\nexport type LatestDemocracyProposalPostsLazyQueryHookResult = ReturnType<typeof useLatestDemocracyProposalPostsLazyQuery>;\nexport type LatestDemocracyProposalPostsQueryResult = ApolloReactCommon.QueryResult<LatestDemocracyProposalPostsQuery, LatestDemocracyProposalPostsQueryVariables>;\nexport const LatestReferendaPostsDocument = gql`\n    query LatestReferendaPosts($postType: Int!, $limit: Int! = 5) {\n  posts(limit: $limit, where: {type: {id: {_eq: $postType}}, onchain_link: {onchain_referendum_id: {_is_null: false}}}, order_by: {onchain_link: {onchain_referendum_id: desc}}) {\n    id\n    title\n    author {\n      id\n      username\n      name\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_referendum_id\n      onchain_referendum(where: {}) {\n        id\n        referendumStatus(last: 1) {\n          id\n          status\n        }\n        preimage {\n          id\n          method\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    `;\n\n/**\n * __useLatestReferendaPostsQuery__\n *\n * To run a query within a React component, call `useLatestReferendaPostsQuery` and pass it any options that fit your needs.\n * When your component renders, `useLatestReferendaPostsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLatestReferendaPostsQuery({\n *   variables: {\n *      postType: // value for 'postType'\n *      limit: // value for 'limit'\n *   },\n * });\n */\nexport function useLatestReferendaPostsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<LatestReferendaPostsQuery, LatestReferendaPostsQueryVariables>) {\n        return ApolloReactHooks.useQuery<LatestReferendaPostsQuery, LatestReferendaPostsQueryVariables>(LatestReferendaPostsDocument, baseOptions);\n      }\nexport function useLatestReferendaPostsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<LatestReferendaPostsQuery, LatestReferendaPostsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<LatestReferendaPostsQuery, LatestReferendaPostsQueryVariables>(LatestReferendaPostsDocument, baseOptions);\n        }\nexport type LatestReferendaPostsQueryHookResult = ReturnType<typeof useLatestReferendaPostsQuery>;\nexport type LatestReferendaPostsLazyQueryHookResult = ReturnType<typeof useLatestReferendaPostsLazyQuery>;\nexport type LatestReferendaPostsQueryResult = ApolloReactCommon.QueryResult<LatestReferendaPostsQuery, LatestReferendaPostsQueryVariables>;\nexport const LatestDemocracyTreasuryProposalPostsDocument = gql`\n    query LatestDemocracyTreasuryProposalPosts($postType: Int!, $postTopic: Int!, $limit: Int! = 5) {\n  posts(limit: $limit, where: {type: {id: {_eq: $postType}}, topic: {id: {_eq: $postTopic}}, onchain_link: {onchain_treasury_proposal_id: {_is_null: false}, onchain_motion_id: {_is_null: true}}}, order_by: {onchain_link: {onchain_treasury_proposal_id: desc}}) {\n    id\n    title\n    author {\n      id\n      username\n      name\n    }\n    created_at\n    updated_at\n    comments_aggregate {\n      aggregate {\n        count\n      }\n    }\n    type {\n      name\n      id\n    }\n    topic {\n      id\n      name\n    }\n    onchain_link {\n      id\n      onchain_treasury_proposal_id\n      onchain_treasury_spend_proposal(where: {}) {\n        id\n        treasuryStatus(last: 1) {\n          id\n          status\n        }\n      }\n      proposer_address\n    }\n  }\n}\n    `;\n\n/**\n * __useLatestDemocracyTreasuryProposalPostsQuery__\n *\n * To run a query within a React component, call `useLatestDemocracyTreasuryProposalPostsQuery` and pass it any options that fit your needs.\n * When your component renders, `useLatestDemocracyTreasuryProposalPostsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLatestDemocracyTreasuryProposalPostsQuery({\n *   variables: {\n *      postType: // value for 'postType'\n *      postTopic: // value for 'postTopic'\n *      limit: // value for 'limit'\n *   },\n * });\n */\nexport function useLatestDemocracyTreasuryProposalPostsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<LatestDemocracyTreasuryProposalPostsQuery, LatestDemocracyTreasuryProposalPostsQueryVariables>) {\n        return ApolloReactHooks.useQuery<LatestDemocracyTreasuryProposalPostsQuery, LatestDemocracyTreasuryProposalPostsQueryVariables>(LatestDemocracyTreasuryProposalPostsDocument, baseOptions);\n      }\nexport function useLatestDemocracyTreasuryProposalPostsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<LatestDemocracyTreasuryProposalPostsQuery, LatestDemocracyTreasuryProposalPostsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<LatestDemocracyTreasuryProposalPostsQuery, LatestDemocracyTreasuryProposalPostsQueryVariables>(LatestDemocracyTreasuryProposalPostsDocument, baseOptions);\n        }\nexport type LatestDemocracyTreasuryProposalPostsQueryHookResult = ReturnType<typeof useLatestDemocracyTreasuryProposalPostsQuery>;\nexport type LatestDemocracyTreasuryProposalPostsLazyQueryHookResult = ReturnType<typeof useLatestDemocracyTreasuryProposalPostsLazyQuery>;\nexport type LatestDemocracyTreasuryProposalPostsQueryResult = ApolloReactCommon.QueryResult<LatestDemocracyTreasuryProposalPostsQuery, LatestDemocracyTreasuryProposalPostsQueryVariables>;\nexport const ProposalPostAndCommentsDocument = gql`\n    query ProposalPostAndComments($id: Int!) {\n  posts(where: {onchain_link: {onchain_proposal_id: {_eq: $id}}}) {\n    ...proposalPost\n  }\n}\n    ${ProposalPostFragmentDoc}`;\n\n/**\n * __useProposalPostAndCommentsQuery__\n *\n * To run a query within a React component, call `useProposalPostAndCommentsQuery` and pass it any options that fit your needs.\n * When your component renders, `useProposalPostAndCommentsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useProposalPostAndCommentsQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useProposalPostAndCommentsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<ProposalPostAndCommentsQuery, ProposalPostAndCommentsQueryVariables>) {\n        return ApolloReactHooks.useQuery<ProposalPostAndCommentsQuery, ProposalPostAndCommentsQueryVariables>(ProposalPostAndCommentsDocument, baseOptions);\n      }\nexport function useProposalPostAndCommentsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<ProposalPostAndCommentsQuery, ProposalPostAndCommentsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<ProposalPostAndCommentsQuery, ProposalPostAndCommentsQueryVariables>(ProposalPostAndCommentsDocument, baseOptions);\n        }\nexport type ProposalPostAndCommentsQueryHookResult = ReturnType<typeof useProposalPostAndCommentsQuery>;\nexport type ProposalPostAndCommentsLazyQueryHookResult = ReturnType<typeof useProposalPostAndCommentsLazyQuery>;\nexport type ProposalPostAndCommentsQueryResult = ApolloReactCommon.QueryResult<ProposalPostAndCommentsQuery, ProposalPostAndCommentsQueryVariables>;\nexport const ReferendumPostAndCommentsDocument = gql`\n    query ReferendumPostAndComments($id: Int!) {\n  posts(where: {onchain_link: {onchain_referendum_id: {_eq: $id}}}) {\n    ...referendumPost\n  }\n}\n    ${ReferendumPostFragmentDoc}`;\n\n/**\n * __useReferendumPostAndCommentsQuery__\n *\n * To run a query within a React component, call `useReferendumPostAndCommentsQuery` and pass it any options that fit your needs.\n * When your component renders, `useReferendumPostAndCommentsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useReferendumPostAndCommentsQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useReferendumPostAndCommentsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<ReferendumPostAndCommentsQuery, ReferendumPostAndCommentsQueryVariables>) {\n        return ApolloReactHooks.useQuery<ReferendumPostAndCommentsQuery, ReferendumPostAndCommentsQueryVariables>(ReferendumPostAndCommentsDocument, baseOptions);\n      }\nexport function useReferendumPostAndCommentsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<ReferendumPostAndCommentsQuery, ReferendumPostAndCommentsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<ReferendumPostAndCommentsQuery, ReferendumPostAndCommentsQueryVariables>(ReferendumPostAndCommentsDocument, baseOptions);\n        }\nexport type ReferendumPostAndCommentsQueryHookResult = ReturnType<typeof useReferendumPostAndCommentsQuery>;\nexport type ReferendumPostAndCommentsLazyQueryHookResult = ReturnType<typeof useReferendumPostAndCommentsLazyQuery>;\nexport type ReferendumPostAndCommentsQueryResult = ApolloReactCommon.QueryResult<ReferendumPostAndCommentsQuery, ReferendumPostAndCommentsQueryVariables>;\nexport const ResetPasswordDocument = gql`\n    mutation resetPassword($newPassword: String!, $token: String!) {\n  resetPassword(newPassword: $newPassword, token: $token) {\n    message\n  }\n}\n    `;\nexport type ResetPasswordMutationFn = ApolloReactCommon.MutationFunction<ResetPasswordMutation, ResetPasswordMutationVariables>;\n\n/**\n * __useResetPasswordMutation__\n *\n * To run a mutation, you first call `useResetPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useResetPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [resetPasswordMutation, { data, loading, error }] = useResetPasswordMutation({\n *   variables: {\n *      newPassword: // value for 'newPassword'\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useResetPasswordMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<ResetPasswordMutation, ResetPasswordMutationVariables>) {\n        return ApolloReactHooks.useMutation<ResetPasswordMutation, ResetPasswordMutationVariables>(ResetPasswordDocument, baseOptions);\n      }\nexport type ResetPasswordMutationHookResult = ReturnType<typeof useResetPasswordMutation>;\nexport type ResetPasswordMutationResult = ApolloReactCommon.MutationResult<ResetPasswordMutation>;\nexport type ResetPasswordMutationOptions = ApolloReactCommon.BaseMutationOptions<ResetPasswordMutation, ResetPasswordMutationVariables>;\nexport const RequestResetPasswordDocument = gql`\n    mutation requestResetPassword($email: String!) {\n  requestResetPassword(email: $email) {\n    message\n  }\n}\n    `;\nexport type RequestResetPasswordMutationFn = ApolloReactCommon.MutationFunction<RequestResetPasswordMutation, RequestResetPasswordMutationVariables>;\n\n/**\n * __useRequestResetPasswordMutation__\n *\n * To run a mutation, you first call `useRequestResetPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRequestResetPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [requestResetPasswordMutation, { data, loading, error }] = useRequestResetPasswordMutation({\n *   variables: {\n *      email: // value for 'email'\n *   },\n * });\n */\nexport function useRequestResetPasswordMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<RequestResetPasswordMutation, RequestResetPasswordMutationVariables>) {\n        return ApolloReactHooks.useMutation<RequestResetPasswordMutation, RequestResetPasswordMutationVariables>(RequestResetPasswordDocument, baseOptions);\n      }\nexport type RequestResetPasswordMutationHookResult = ReturnType<typeof useRequestResetPasswordMutation>;\nexport type RequestResetPasswordMutationResult = ApolloReactCommon.MutationResult<RequestResetPasswordMutation>;\nexport type RequestResetPasswordMutationOptions = ApolloReactCommon.BaseMutationOptions<RequestResetPasswordMutation, RequestResetPasswordMutationVariables>;\nexport const ChangeNameDocument = gql`\n    mutation changeName($newName: String!) {\n  changeName(newName: $newName) {\n    message\n    token\n  }\n}\n    `;\nexport type ChangeNameMutationFn = ApolloReactCommon.MutationFunction<ChangeNameMutation, ChangeNameMutationVariables>;\n\n/**\n * __useChangeNameMutation__\n *\n * To run a mutation, you first call `useChangeNameMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useChangeNameMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [changeNameMutation, { data, loading, error }] = useChangeNameMutation({\n *   variables: {\n *      newName: // value for 'newName'\n *   },\n * });\n */\nexport function useChangeNameMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<ChangeNameMutation, ChangeNameMutationVariables>) {\n        return ApolloReactHooks.useMutation<ChangeNameMutation, ChangeNameMutationVariables>(ChangeNameDocument, baseOptions);\n      }\nexport type ChangeNameMutationHookResult = ReturnType<typeof useChangeNameMutation>;\nexport type ChangeNameMutationResult = ApolloReactCommon.MutationResult<ChangeNameMutation>;\nexport type ChangeNameMutationOptions = ApolloReactCommon.BaseMutationOptions<ChangeNameMutation, ChangeNameMutationVariables>;\nexport const ChangeUsernameDocument = gql`\n    mutation changeUsername($username: String!) {\n  changeUsername(username: $username) {\n    message\n    token\n  }\n}\n    `;\nexport type ChangeUsernameMutationFn = ApolloReactCommon.MutationFunction<ChangeUsernameMutation, ChangeUsernameMutationVariables>;\n\n/**\n * __useChangeUsernameMutation__\n *\n * To run a mutation, you first call `useChangeUsernameMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useChangeUsernameMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [changeUsernameMutation, { data, loading, error }] = useChangeUsernameMutation({\n *   variables: {\n *      username: // value for 'username'\n *   },\n * });\n */\nexport function useChangeUsernameMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<ChangeUsernameMutation, ChangeUsernameMutationVariables>) {\n        return ApolloReactHooks.useMutation<ChangeUsernameMutation, ChangeUsernameMutationVariables>(ChangeUsernameDocument, baseOptions);\n      }\nexport type ChangeUsernameMutationHookResult = ReturnType<typeof useChangeUsernameMutation>;\nexport type ChangeUsernameMutationResult = ApolloReactCommon.MutationResult<ChangeUsernameMutation>;\nexport type ChangeUsernameMutationOptions = ApolloReactCommon.BaseMutationOptions<ChangeUsernameMutation, ChangeUsernameMutationVariables>;\nexport const ChangeEmailDocument = gql`\n    mutation changeEmail($email: String!) {\n  changeEmail(email: $email) {\n    message\n    token\n  }\n}\n    `;\nexport type ChangeEmailMutationFn = ApolloReactCommon.MutationFunction<ChangeEmailMutation, ChangeEmailMutationVariables>;\n\n/**\n * __useChangeEmailMutation__\n *\n * To run a mutation, you first call `useChangeEmailMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useChangeEmailMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [changeEmailMutation, { data, loading, error }] = useChangeEmailMutation({\n *   variables: {\n *      email: // value for 'email'\n *   },\n * });\n */\nexport function useChangeEmailMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<ChangeEmailMutation, ChangeEmailMutationVariables>) {\n        return ApolloReactHooks.useMutation<ChangeEmailMutation, ChangeEmailMutationVariables>(ChangeEmailDocument, baseOptions);\n      }\nexport type ChangeEmailMutationHookResult = ReturnType<typeof useChangeEmailMutation>;\nexport type ChangeEmailMutationResult = ApolloReactCommon.MutationResult<ChangeEmailMutation>;\nexport type ChangeEmailMutationOptions = ApolloReactCommon.BaseMutationOptions<ChangeEmailMutation, ChangeEmailMutationVariables>;\nexport const ChangePasswordDocument = gql`\n    mutation changePassword($oldPassword: String!, $newPassword: String!) {\n  changePassword(oldPassword: $oldPassword, newPassword: $newPassword) {\n    message\n  }\n}\n    `;\nexport type ChangePasswordMutationFn = ApolloReactCommon.MutationFunction<ChangePasswordMutation, ChangePasswordMutationVariables>;\n\n/**\n * __useChangePasswordMutation__\n *\n * To run a mutation, you first call `useChangePasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useChangePasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [changePasswordMutation, { data, loading, error }] = useChangePasswordMutation({\n *   variables: {\n *      oldPassword: // value for 'oldPassword'\n *      newPassword: // value for 'newPassword'\n *   },\n * });\n */\nexport function useChangePasswordMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<ChangePasswordMutation, ChangePasswordMutationVariables>) {\n        return ApolloReactHooks.useMutation<ChangePasswordMutation, ChangePasswordMutationVariables>(ChangePasswordDocument, baseOptions);\n      }\nexport type ChangePasswordMutationHookResult = ReturnType<typeof useChangePasswordMutation>;\nexport type ChangePasswordMutationResult = ApolloReactCommon.MutationResult<ChangePasswordMutation>;\nexport type ChangePasswordMutationOptions = ApolloReactCommon.BaseMutationOptions<ChangePasswordMutation, ChangePasswordMutationVariables>;\nexport const AddressLinkStartDocument = gql`\n    mutation addressLinkStart($network: String!, $address: String!) {\n  addressLinkStart(network: $network, address: $address) {\n    sign_message\n    message\n    address_id\n  }\n}\n    `;\nexport type AddressLinkStartMutationFn = ApolloReactCommon.MutationFunction<AddressLinkStartMutation, AddressLinkStartMutationVariables>;\n\n/**\n * __useAddressLinkStartMutation__\n *\n * To run a mutation, you first call `useAddressLinkStartMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAddressLinkStartMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [addressLinkStartMutation, { data, loading, error }] = useAddressLinkStartMutation({\n *   variables: {\n *      network: // value for 'network'\n *      address: // value for 'address'\n *   },\n * });\n */\nexport function useAddressLinkStartMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<AddressLinkStartMutation, AddressLinkStartMutationVariables>) {\n        return ApolloReactHooks.useMutation<AddressLinkStartMutation, AddressLinkStartMutationVariables>(AddressLinkStartDocument, baseOptions);\n      }\nexport type AddressLinkStartMutationHookResult = ReturnType<typeof useAddressLinkStartMutation>;\nexport type AddressLinkStartMutationResult = ApolloReactCommon.MutationResult<AddressLinkStartMutation>;\nexport type AddressLinkStartMutationOptions = ApolloReactCommon.BaseMutationOptions<AddressLinkStartMutation, AddressLinkStartMutationVariables>;\nexport const AddressLinkConfirmDocument = gql`\n    mutation addressLinkConfirm($address_id: Int!, $signature: String!) {\n  addressLinkConfirm(address_id: $address_id, signature: $signature) {\n    message\n    token\n  }\n}\n    `;\nexport type AddressLinkConfirmMutationFn = ApolloReactCommon.MutationFunction<AddressLinkConfirmMutation, AddressLinkConfirmMutationVariables>;\n\n/**\n * __useAddressLinkConfirmMutation__\n *\n * To run a mutation, you first call `useAddressLinkConfirmMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAddressLinkConfirmMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [addressLinkConfirmMutation, { data, loading, error }] = useAddressLinkConfirmMutation({\n *   variables: {\n *      address_id: // value for 'address_id'\n *      signature: // value for 'signature'\n *   },\n * });\n */\nexport function useAddressLinkConfirmMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<AddressLinkConfirmMutation, AddressLinkConfirmMutationVariables>) {\n        return ApolloReactHooks.useMutation<AddressLinkConfirmMutation, AddressLinkConfirmMutationVariables>(AddressLinkConfirmDocument, baseOptions);\n      }\nexport type AddressLinkConfirmMutationHookResult = ReturnType<typeof useAddressLinkConfirmMutation>;\nexport type AddressLinkConfirmMutationResult = ApolloReactCommon.MutationResult<AddressLinkConfirmMutation>;\nexport type AddressLinkConfirmMutationOptions = ApolloReactCommon.BaseMutationOptions<AddressLinkConfirmMutation, AddressLinkConfirmMutationVariables>;\nexport const AddressUnlinkDocument = gql`\n    mutation addressUnlink($address: String!) {\n  addressUnlink(address: $address) {\n    message\n    token\n  }\n}\n    `;\nexport type AddressUnlinkMutationFn = ApolloReactCommon.MutationFunction<AddressUnlinkMutation, AddressUnlinkMutationVariables>;\n\n/**\n * __useAddressUnlinkMutation__\n *\n * To run a mutation, you first call `useAddressUnlinkMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAddressUnlinkMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [addressUnlinkMutation, { data, loading, error }] = useAddressUnlinkMutation({\n *   variables: {\n *      address: // value for 'address'\n *   },\n * });\n */\nexport function useAddressUnlinkMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<AddressUnlinkMutation, AddressUnlinkMutationVariables>) {\n        return ApolloReactHooks.useMutation<AddressUnlinkMutation, AddressUnlinkMutationVariables>(AddressUnlinkDocument, baseOptions);\n      }\nexport type AddressUnlinkMutationHookResult = ReturnType<typeof useAddressUnlinkMutation>;\nexport type AddressUnlinkMutationResult = ApolloReactCommon.MutationResult<AddressUnlinkMutation>;\nexport type AddressUnlinkMutationOptions = ApolloReactCommon.BaseMutationOptions<AddressUnlinkMutation, AddressUnlinkMutationVariables>;\nexport const ResendVerifyEmailTokenDocument = gql`\n    mutation resendVerifyEmailToken {\n  resendVerifyEmailToken {\n    message\n  }\n}\n    `;\nexport type ResendVerifyEmailTokenMutationFn = ApolloReactCommon.MutationFunction<ResendVerifyEmailTokenMutation, ResendVerifyEmailTokenMutationVariables>;\n\n/**\n * __useResendVerifyEmailTokenMutation__\n *\n * To run a mutation, you first call `useResendVerifyEmailTokenMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useResendVerifyEmailTokenMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [resendVerifyEmailTokenMutation, { data, loading, error }] = useResendVerifyEmailTokenMutation({\n *   variables: {\n *   },\n * });\n */\nexport function useResendVerifyEmailTokenMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<ResendVerifyEmailTokenMutation, ResendVerifyEmailTokenMutationVariables>) {\n        return ApolloReactHooks.useMutation<ResendVerifyEmailTokenMutation, ResendVerifyEmailTokenMutationVariables>(ResendVerifyEmailTokenDocument, baseOptions);\n      }\nexport type ResendVerifyEmailTokenMutationHookResult = ReturnType<typeof useResendVerifyEmailTokenMutation>;\nexport type ResendVerifyEmailTokenMutationResult = ApolloReactCommon.MutationResult<ResendVerifyEmailTokenMutation>;\nexport type ResendVerifyEmailTokenMutationOptions = ApolloReactCommon.BaseMutationOptions<ResendVerifyEmailTokenMutation, ResendVerifyEmailTokenMutationVariables>;\nexport const SignupDocument = gql`\n    mutation SIGNUP($email: String, $password: String!, $username: String!, $name: String) {\n  signup(email: $email, password: $password, username: $username, name: $name) {\n    user {\n      id\n      name\n      username\n      email\n      email_verified\n    }\n    token\n  }\n}\n    `;\nexport type SignupMutationFn = ApolloReactCommon.MutationFunction<SignupMutation, SignupMutationVariables>;\n\n/**\n * __useSignupMutation__\n *\n * To run a mutation, you first call `useSignupMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSignupMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [signupMutation, { data, loading, error }] = useSignupMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *      username: // value for 'username'\n *      name: // value for 'name'\n *   },\n * });\n */\nexport function useSignupMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<SignupMutation, SignupMutationVariables>) {\n        return ApolloReactHooks.useMutation<SignupMutation, SignupMutationVariables>(SignupDocument, baseOptions);\n      }\nexport type SignupMutationHookResult = ReturnType<typeof useSignupMutation>;\nexport type SignupMutationResult = ApolloReactCommon.MutationResult<SignupMutation>;\nexport type SignupMutationOptions = ApolloReactCommon.BaseMutationOptions<SignupMutation, SignupMutationVariables>;\nexport const TreasuryProposalPostAndCommentsDocument = gql`\n    query TreasuryProposalPostAndComments($id: Int!) {\n  posts(where: {onchain_link: {onchain_treasury_proposal_id: {_eq: $id}}}) {\n    ...treasuryProposalPost\n  }\n}\n    ${TreasuryProposalPostFragmentDoc}`;\n\n/**\n * __useTreasuryProposalPostAndCommentsQuery__\n *\n * To run a query within a React component, call `useTreasuryProposalPostAndCommentsQuery` and pass it any options that fit your needs.\n * When your component renders, `useTreasuryProposalPostAndCommentsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTreasuryProposalPostAndCommentsQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useTreasuryProposalPostAndCommentsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<TreasuryProposalPostAndCommentsQuery, TreasuryProposalPostAndCommentsQueryVariables>) {\n        return ApolloReactHooks.useQuery<TreasuryProposalPostAndCommentsQuery, TreasuryProposalPostAndCommentsQueryVariables>(TreasuryProposalPostAndCommentsDocument, baseOptions);\n      }\nexport function useTreasuryProposalPostAndCommentsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<TreasuryProposalPostAndCommentsQuery, TreasuryProposalPostAndCommentsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<TreasuryProposalPostAndCommentsQuery, TreasuryProposalPostAndCommentsQueryVariables>(TreasuryProposalPostAndCommentsDocument, baseOptions);\n        }\nexport type TreasuryProposalPostAndCommentsQueryHookResult = ReturnType<typeof useTreasuryProposalPostAndCommentsQuery>;\nexport type TreasuryProposalPostAndCommentsLazyQueryHookResult = ReturnType<typeof useTreasuryProposalPostAndCommentsLazyQuery>;\nexport type TreasuryProposalPostAndCommentsQueryResult = ApolloReactCommon.QueryResult<TreasuryProposalPostAndCommentsQuery, TreasuryProposalPostAndCommentsQueryVariables>;\nexport const UndoEmailChangeDocument = gql`\n    mutation undoEmailChange($token: String!) {\n  undoEmailChange(token: $token) {\n    message\n    token\n    email\n  }\n}\n    `;\nexport type UndoEmailChangeMutationFn = ApolloReactCommon.MutationFunction<UndoEmailChangeMutation, UndoEmailChangeMutationVariables>;\n\n/**\n * __useUndoEmailChangeMutation__\n *\n * To run a mutation, you first call `useUndoEmailChangeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUndoEmailChangeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [undoEmailChangeMutation, { data, loading, error }] = useUndoEmailChangeMutation({\n *   variables: {\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useUndoEmailChangeMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<UndoEmailChangeMutation, UndoEmailChangeMutationVariables>) {\n        return ApolloReactHooks.useMutation<UndoEmailChangeMutation, UndoEmailChangeMutationVariables>(UndoEmailChangeDocument, baseOptions);\n      }\nexport type UndoEmailChangeMutationHookResult = ReturnType<typeof useUndoEmailChangeMutation>;\nexport type UndoEmailChangeMutationResult = ApolloReactCommon.MutationResult<UndoEmailChangeMutation>;\nexport type UndoEmailChangeMutationOptions = ApolloReactCommon.BaseMutationOptions<UndoEmailChangeMutation, UndoEmailChangeMutationVariables>;\nexport const VerifyEmailDocument = gql`\n    mutation verifyEmail($token: String!) {\n  verifyEmail(token: $token) {\n    message\n    token\n  }\n}\n    `;\nexport type VerifyEmailMutationFn = ApolloReactCommon.MutationFunction<VerifyEmailMutation, VerifyEmailMutationVariables>;\n\n/**\n * __useVerifyEmailMutation__\n *\n * To run a mutation, you first call `useVerifyEmailMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useVerifyEmailMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [verifyEmailMutation, { data, loading, error }] = useVerifyEmailMutation({\n *   variables: {\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useVerifyEmailMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<VerifyEmailMutation, VerifyEmailMutationVariables>) {\n        return ApolloReactHooks.useMutation<VerifyEmailMutation, VerifyEmailMutationVariables>(VerifyEmailDocument, baseOptions);\n      }\nexport type VerifyEmailMutationHookResult = ReturnType<typeof useVerifyEmailMutation>;\nexport type VerifyEmailMutationResult = ApolloReactCommon.MutationResult<VerifyEmailMutation>;\nexport type VerifyEmailMutationOptions = ApolloReactCommon.BaseMutationOptions<VerifyEmailMutation, VerifyEmailMutationVariables>;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport queryString from 'query-string';\nimport { useMemo } from 'react';\nimport { useHistory, useLocation, useParams, useRouteMatch } from 'react-router-dom';\n\nexport default function () {\n\n\tconst params = useParams();\n\tconst location = useLocation();\n\tconst history = useHistory();\n\tconst match = useRouteMatch();\n\n\t// Return a custom router object\n\t// Memoize so that a new object is only returned if something changes\n\treturn useMemo(() => {\n\t\t// Merge params and parsed query string into single \"query\" object\n\t\t// so that they can be used interchangeably.\n\t\t// Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\n\t\tconst query: {[index: string]:any} = {\n\t\t\t...queryString.parse(location.search), // Convert string to object\n\t\t\t...params\n\t\t};\n\n\t\treturn {\n\t\t\thistory,\n\t\t\tlocation,\n\t\t\tmatch,\n\t\t\tpathname: location.pathname,\n\t\t\tquery\n\t\t};\n\t}, [params, match, location, history]);\n}","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { useEffect } from 'react';\n\nimport useRouter from './useRouter';\n\nexport default function (refId?: number | null) {\n\n\tconst { history } = useRouter();\n\n\tuseEffect(( ) => {\n\t\tif (refId || refId === 0) {\n\t\t\thistory.push(`/referendum/${refId}`);\n\t\t}\n\t});\n}","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { ReactNode, useContext, useState } from 'react';\nimport { MdClose } from 'react-icons/md';\nimport { NavLink } from 'react-router-dom';\nimport { Dropdown, Icon, Menu, Responsive, Sidebar, SidebarPusher } from 'semantic-ui-react';\n\nimport logo from '../../assets/polkassembly-logo.png';\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport { useLogoutMutation } from '../../generated/graphql';\nimport { useRouter } from '../../hooks';\nimport { logout } from '../../services/auth.service';\n\ninterface Props {\n\tchildren?: ReactNode,\n\tclassName?: string,\n\tvisible?: boolean\n}\n\nconst MenuBar = ({ className } : Props): JSX.Element => {\n\tconst currentUser = useContext(UserDetailsContext);\n\tconst [logoutMutation] = useLogoutMutation();\n\tconst { history } = useRouter();\n\tconst { setUserDetailsContextState, username } = currentUser;\n\n\tconst handleLogout = async () => {\n\t\ttry {\n\t\t\tawait logoutMutation();\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t\tlogout(setUserDetailsContextState);\n\t\thistory.push('/');\n\t};\n\n\t// Menu Items\n\tconst contentItems = [\n\t\t{ content:'Discussions', icon:'comments', key:'discussions', to:'/discussions' },\n\t\t{ content: 'On chain', icon:'file alternate', key:'proposals', to:'/onchain' }\n\t];\n\n\tconst loggedOutItems = [\n\t\t{ content:'Login', icon:'sign in', key:'login', to:'/login' },\n\t\t{ content: 'Sign-up', icon:'plus circle', key:'signup', to:'/signup' }\n\t];\n\n\tconst loggedInItems = [\n\t\t{ content:'Notifications', icon:'bell', key:'notification', to:'/notification-settings' },\n\t\t{ content:'Settings', icon:'cog', key:'settings', to:'/settings' },\n\t\t{ content: 'Logout', icon:'sign-out', key:'signout', onClick: handleLogout, to:'/' }\n\t];\n\n\tconst userMenu = <><Icon name='user circle' inverted />{username}</>;\n\tconst caretIcon = <Icon name='caret down' inverted />;\n\n\t// Mobile Sidebar\n\tconst [menuVisible, setMenuVisible] = useState(false);\n\tconst [pushableHeight, setPushableHeight] = useState('0rem');\n\n\tconst handleToggle = () => {\n\t\tmenuVisible ? setMenuVisible(false) : setMenuVisible(true);\n\t\tmenuVisible ? setPushableHeight('0rem'): setPushableHeight('100%');\n\t};\n\n\tconst handleClose = () => {\n\t\tsetMenuVisible(false);\n\t\tsetPushableHeight('0rem');\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Responsive maxWidth={Responsive.onlyTablet.maxWidth}>\n\t\t\t\t<Menu className={className} inverted widths={2} id='menubar'>\n\t\t\t\t\t<Menu.Item as={NavLink} to=\"/\" className='logo' id='title' onClick={handleClose}><img alt='Polkassembly Logo' src={logo} /></Menu.Item>\n\t\t\t\t\t<Menu.Item onClick={handleToggle} id='rightmenu'>\n\t\t\t\t\t\t{!menuVisible ? <Icon name=\"sidebar\" /> : <MdClose />}\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t</Menu>\n\t\t\t\t<Sidebar.Pushable className={className} style={{ height:pushableHeight }}>\n\t\t\t\t\t<Sidebar\n\t\t\t\t\t\tas={Menu}\n\t\t\t\t\t\tdirection='top'\n\t\t\t\t\t\ticon=\"labeled\"\n\t\t\t\t\t\tinverted\n\t\t\t\t\t\tstackable\n\t\t\t\t\t\tvertical\n\t\t\t\t\t\tvisible={menuVisible}\n\t\t\t\t\t>\n\t\t\t\t\t\t{contentItems.map(item => <Menu.Item as={NavLink} key={item.key} onClick={handleClose} {...item} />)}\n\t\t\t\t\t\t{username\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{loggedInItems.map(item => <Menu.Item as={NavLink} key={item.key} {...item}/>)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{loggedOutItems.map(item => <Menu.Item as={NavLink} key={item.key} onClick={handleClose} {...item} />)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Sidebar>\n\t\t\t\t\t<SidebarPusher />\n\t\t\t\t</Sidebar.Pushable>\n\t\t\t</Responsive>\n\t\t\t<Responsive minWidth={Responsive.onlyComputer.minWidth}>\n\t\t\t\t<Menu className={className} stackable inverted borderless>\n\t\t\t\t\t<Menu.Item as={NavLink} to=\"/\" className='logo' id='title'><img alt='Polkassembly Logo' src={logo} /></Menu.Item>\n\t\t\t\t\t{contentItems.map(item => <Menu.Item as={NavLink} className='desktop_items' key={item.key} {...item} />)}\n\t\t\t\t\t<Menu.Menu position=\"right\">\n\t\t\t\t\t\t{username\n\t\t\t\t\t\t\t? <>\n\t\t\t\t\t\t\t\t<Dropdown trigger={userMenu} icon={caretIcon} item={true}>\n\t\t\t\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t\t\t\t{loggedInItems.map(item => <Menu.Item as={NavLink} key={item.key} {...item}/>)}\n\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t: <>\n\t\t\t\t\t\t\t\t{loggedOutItems.map(item => <Menu.Item as={NavLink} className='user_items' key={item.key} {...item} />)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Menu.Menu>\n\t\t\t\t</Menu>\n\t\t\t</Responsive>\n\t\t</>\n\t);\n};\n\nexport default styled(MenuBar)`\n\t&.ui.menu, .ui.inverted.menu {\n\t\tfont-family: font_default;\n\t\tbackground-color: black_full;\n\t\tborder-radius: 0rem;\n\t\tletter-spacing: 0.2px;\n\n\t\t& a.active {\n\t\t\toutline: none;\n\t\t\tbackground-color: black_full !important;\n\t\t}\n\t\t.item {\n\t\t\tcolor: grey_secondary;\n\t\t\tfont-weight: 500;\n\t\t\t&:hover {\n\t\t\t\tcolor: white;\n\t\t\t}\n\t\t}\n\n\t\t.desktop_items, #title {\n\t\t\ttext-transform: capitalize;\n\t\t}\n\n\t\ti.icon {\n\t\t\tcolor: grey_secondary;\n\t\t}\n\n\t\t.logo {\n\t\t\timg {\n\t\t\t\twidth: 16rem;\n\n\t\t\t\t@media only screen and (max-width: 992px) {\n\t\t\t\t\twidth: 10rem;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbackground-color: black_full !important;\n\t\t}\n\t}\n\n\t@media only screen and (max-width: 992px) {\n\n\t\t&.pushable {\n\t\t\tposition: relative;\n\t\t}\n\n\t\t&.ui.menu, .ui.inverted.menu {\n\t\t\tmin-height: 5rem;\n\t\t\tborder-bottom-style: solid;\n\t\t\tborder-bottom-width: 1px;\n\t\t\tborder-bottom-color: grey_primary;\n\t\t\tmargin: 0rem!important;\n\n\t\t\t.desktop_items, #title, #rightmenu {\n\t\t\t\tposition: absolute;\n\t\t\t}\n\n\t\t\t.desktop_items, #title {\n\t\t\t\ttext-align: left;\n\t\t\t\tmargin: auto 0;\n\t\t\t\tleft: 2rem;\n\t\t\t\ttop: 0.3rem;\n\t\t\t\tpadding-top: 1rem;\n\t\t\t\tpadding-bottom: 0;\n\t\t\t\tborder-radius: 0.8rem!important;\n\t\t\t}\n\n\t\t\t#rightmenu {\n\t\t\t\tright: 2rem;\n\t\t\t\tfont-size: 1.8rem;\n\t\t\t\tmax-width: 2rem;\n\t\t\t}\n\n\t\t\t.item {\n\t\t\t\tfont-size: md;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\t&:before {\n\t\t\t\t\twidth: 0rem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ta.item:hover {\n\t\t\t\tbackground: none;\n\t\t\t\tcolor: grey_secondary;\n\t\t\t}\n\t\t}\n\n\t\t.ui.top.sidebar {\n\t\t\tpadding: 1rem;\n\t\t\tborder-radius: 0rem!important;\n\t\t\tposition: relative;\n\t\t\t.item {\n\t\t\t\tfloat: left;\n\t\t\t\tclear: both;\n\t\t\t\ttext-align: left;\n\t\t\t\tborder-radius: 0.8rem!important;\n\t\t\t}\n\t\t}\n\n\t\t.ui.icon.menu .item {\n\t\t\ttext-align: left;\n\t\t\tpadding: 1.5rem 1rem;\n\t\t\t&>.icon:not(.dropdown) {\n\t\t\t\tfont-size: 1.6rem!important;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tmargin: 0 1.2rem auto 0!important;\n\t\t\t}\n\t\t}\n\t}\n\n\t@media only screen and (min-width: 992px) {\n\t\t&.ui.menu {\n\t\t\tpadding: 0.5rem 2rem;\n\t\t\tfont-size: md;\n\t\t\t.item {\n\t\t\t\tpadding: 0.5rem 0.5rem;\n\t\t\t\tmargin: 0 1.2rem;\n\t\t\t\t:hover {\n\t\t\t\t\tbackground-color: black_full !important;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.ui.dropdown .menu>.item,\n\t\t\t.ui.dropdown .menu>.active.item {\n\t\t\t\tfont-size: md!important;\n\t\t\t\tfont-weight: 400 !important;\n\t\t\t}\n\t\t}\n\n\t\t.desktop_items, .user_items, #title {\n\t\t\ti.icon {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\n\t\t.user_items {\n\t\t\ttext-transform: capitalize;\n\n\t\t}\n\t}\n\n\t&.ui.inverted.menu a.item:hover, &.ui.inverted.menu .dropdown.item:hover {\n\t\tborder-radius: 0.5rem;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React, { createContext, useState } from 'react';\n\nimport { ModalContextType, ModalType } from '../types';\n\nconst initialModalContext : ModalContextType = {\n\tdismissModal: () => {\n\t\tthrow new Error('dismissModal function must be overridden');\n\t},\n\tmodal : {},\n\tsetModal: () => {\n\t\tthrow new Error('setModal function must be overridden');\n\t}\n};\n\nexport const ModalContext = createContext(initialModalContext);\n\nexport const ModalProvider = ({ children }: React.PropsWithChildren<{}>) => {\n\tconst [modal, setModal] = useState<ModalType>({});\n\n\tconst dismissModal = () => setModal({});\n\n\treturn (\n\t\t<ModalContext.Provider value={{ dismissModal, modal, setModal }}>\n\t\t\t{children}\n\t\t</ModalContext.Provider>\n\t);\n};","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Button as SUIButton, ButtonProps } from 'semantic-ui-react';\n\nconst Button = (props : ButtonProps) => {\n\treturn <SUIButton {...props} />;\n};\n\nexport default styled(Button)`\n\t&.ui.button, &.active, &:active  {   \n\t\tfont-family: font_default;\n\t\tfont-size: md;\n\t\tfont-weight: 500;\n\t\ttext-transform: capitalize;\n\t\tletter-spacing: 0.06rem;\n\t\tline-height: 1.6rem;\n\t\tborder-radius: button_radius;\n\t\tborder: none;\n\t\tpadding: 0.8rem 1.6rem;\n\t\ttransition-property: background-color;\n\t\ttransition-duration: 0.2s;\n\t\t&.ui.tiny.button {\n\t\t\tfont-size: sm;\n\t\t\tpadding: 0.6rem 1.2rem;\n\t\t}\n\t\t&.ui.small.button {\n\t\t\tfont-size: md;\n\t\t\tpadding: 0.6rem 1.2rem;\n\t\t}\n\t\t&.ui.medium.button {\n\t\t\tfont-size: md;\n\t\t\tpadding: 0.8rem 1.6rem;\n\t\t}\n\t\t&.ui.primary.button {\n\t\t\tbackground-color: pink_primary;\n\t\t\tcolor: white;\n\t\t\t&:hover, &:focus {\n\t\t\t\tbackground-color: pink_secondary;\n\t\t\t\toutline: none;\n\t\t\t}\n\t\t}\n\t\t&.ui.primary.positive.button {\n\t\t\tbackground-color: green_primary !important;\n\t\t\tcolor: white!important;\n\t\t\t&:hover, &:focus {\n\t\t\t\tbackground-color: green_secondary !important;\n\t\t\t\tcolor: white !important;\n\t\t\t\tbox-shadow: none !important;\n\t\t\t\toutline: none;\n\t\t\t}\n\t\t}\n\t\t&.ui.primary.negative.button {\n\t\t\tbackground-color: red_primary !important;\n\t\t\tcolor: white!important;\n\t\t\tbox-shadow: none !important;\n\t\t\t&:hover, &:focus {\n\t\t\t\tbackground-color: red_secondary !important;\n\t\t\t\tcolor: white !important;\n\t\t\t\tbox-shadow: none !important;\n\t\t\t\toutline: none;\n\t\t\t}\n\t\t}\n\t\t&.ui.secondary.button{\n\t\t\tbackground-color: white;\n\t\t\tcolor: grey_primary;\n\t\t\tbox-shadow: 0 0 0 1px inset !important;\n\t\t\t&:hover, &:focus {\n\t\t\t\tcolor: black_text;\n\t\t\t\tbackground-color: grey_light;\n\t\t\t\tbox-shadow: box_shadow_secondary_grey !important;\n\t\t\t\toutline: none;\n\t\t\t}\n\t\t}\n\t\t&.ui.secondary.negative.button {\n\t\t\tbackground-color: white;\n\t\t\tcolor: grey_primary;\n\t\t\tbox-shadow: 0 0 0 1px inset !important;\n\t\t\t&:hover, &:focus {\n\t\t\t\tbackground-color: red_secondary;\n\t\t\t\tcolor: white;\n\t\t\t\tbox-shadow: box_shadow_secondary_red;\n\t\t\t\toutline: none;\n\t\t\t}\n\t\t}\n\t\t&.ui.social.button {\n\t\t\tbackground-color: white;\n\t\t\tcolor: grey_primary;\n\t\t\tfont-size: sm;\n\t\t\tborder: none;\n\t\t\tpadding: 0.7rem 0.7rem;\n\t\t\tmargin: 0 0.4rem 0 0;\n\t\t\ttext-transform: none;\n\t\t\tletter-spacing: 0rem;\n\t\t\tborder-radius: 0.2rem;\n\t\t\t&:hover{\n\t\t\t\tbackground-color: grey_light;\n\t\t\t\tborder: none;\n\t\t\t}\n\t\t}\n\t\t&.ui.button>.icon:not(.button) {\n\t\t\topacity: 1;\n\t\t}\n\t\t&.ui.social.negative.button {\n\t\t\tbackground-color: white;\n\t\t\tcolor: red_primary;\n\t\t\tfont-size: sm;\n\t\t\tborder: none;\n\t\t\tpadding: 0.7rem 0.7rem;\n\t\t\ttext-transform: none;\n\t\t\tletter-spacing: 0rem;\n\t\t\t&:hover {\n\t\t\t\tbackground-color: red_light;\n\t\t\t\tborder: none;\n\t\t\t}\n\t\t}\n\t}\n\n\t&.ui.button>.icon:not(.button), &.ui.button:not(.icon)>.icon:not(.button):not(.dropdown) {\n\t\tmargin: 0 0.4rem 0 0;\n\t\theight: 1.6rem;\n\t}\n\n\t.icon {\n\t\tvertical-align: middle;\n\t\tfont-size: md;\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Modal as SUIModal, ModalProps } from 'semantic-ui-react';\n\ntype Props = ModalProps & {\n\tbuttons: React.ReactNode\n\tcontent?: string\n\tchildren?: React.ReactNode\n\tclassName?: string\n\tdismissModal?: () => void\n\ttitle?: string\n}\n\nconst Modal = (props : Props) => {\n\tconst { buttons, children, className, title, ...otherProps } = props;\n\n\treturn (\n\t\t<SUIModal className={className} centered dimmer='inverted' open size='tiny' {...otherProps}>\n\t\t\t<SUIModal.Header>{title}</SUIModal.Header>\n\t\t\t<SUIModal.Content>\n\t\t\t\t<SUIModal.Description>\n\t\t\t\t\t<div>{children}</div>\n\t\t\t\t</SUIModal.Description>\n\t\t\t</SUIModal.Content>\n\t\t\t<SUIModal.Actions>\n\t\t\t\t{buttons}\n\t\t\t</SUIModal.Actions>\n\t\t</SUIModal>\n\t);\n};\n\nexport default styled(Modal)`\n&.ui.modal {\n\tleft: auto;\n\theight: auto;\n\ttop: 25%;\n\tfont-size: 1.2rem;\n\tborder-radius: 0rem;\n\n\t> .actions {\n\t\tborder-top: 0px!important;\n\t\tbackground-color: white !important;\n\t\tpadding: 0 3rem 3rem 3rem;\n\t\tmargin-top: 2rem;\n\t\talign-items: center;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t}\n\n\t> .header {\n\t\tborder-bottom:0px!important;\n\t\tfont-family: font_mono;\n\t\tfont-weight: 500!important;\n\t\tfont-size: 1.8rem!important;\n\t\tpadding: 2rem 3rem 0 3rem!important;\n\t}\n\n\t> .content {\n\t\tpadding: 0 3rem;\n\t\tmargin-top: 2rem;\n\t}\n}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { Dispatch, SetStateAction } from 'react';\n\nimport { network, tokenSymbol } from './global/networkConstants';\n\nexport interface UserDetailsContextType {\n    id?: number | null,\n    picture?: string | null,\n    name?: string | null,\n    username?: string | null,\n    email?: string | null,\n    email_verified?: boolean | null,\n    addresses?: string[] | null,\n    notification: {\n\t\tpostParticipated: boolean,\n\t\tpostCreated: boolean,\n\t\tnewProposal: boolean,\n\t\townProposal: boolean\n\t} | null,\n    setUserDetailsContextState: Dispatch<SetStateAction<UserDetailsContextType>>;\n}\n\nexport enum Role {\n    ANONYMOUS = 'anonymous',\n    ADMIN = 'admin',\n    PROPOSAL_BOT = 'proposal_bot',\n    USER = 'user',\n}\n\n// these are enforced by Hasura\nexport interface HasuraClaimPayload {\n    'x-hasura-allowed-roles': Role[]\n    'x-hasura-default-role': Role\n    'x-hasura-user-email': string\n    'x-hasura-user-id': string\n    'x-hasura-kusama': string\n}\n\nexport interface JWTPayploadType {\n    exp: number\n    sub: string\n    name: string\n    username: string\n    email: string\n    email_verified: boolean\n    iat: string\n    notification: {\n        postParticipated: boolean,\n\t\tpostCreated: boolean,\n\t\tnewProposal: boolean,\n\t\townProposal: boolean\n    }\n    'https://hasura.io/jwt/claims': HasuraClaimPayload\n}\n\nexport interface NotificationContextType {\n    deQueueNotification: (id: number) => void;\n    notificationsQueue: Map<number, NotificationType>\n    queueNotification: (notification: NotificationType) => void;\n}\n\nexport enum NotificationStatus {\n    SUCCESS,\n    ERROR,\n    WARNING\n}\n\nexport interface NotificationType {\n    header: string\n    message: string\n    status: NotificationStatus\n}\n\nexport interface ModalType {\n    content?: string,\n    title?: string\n}\n\nexport interface ModalContextType {\n    dismissModal: () => void,\n    modal: ModalType,\n    setModal: (modal: ModalType) => void;\n}\n\nexport interface AccountMeta {\n    genesisHash: string | undefined\n    name: string\n    source: string\n}\n\nexport interface Account {\n    address: string\n    meta: AccountMeta\n}\n\nexport type Network = typeof network[keyof typeof network];\nexport type TokenSymbol = typeof tokenSymbol[keyof typeof tokenSymbol];\n\nexport type ChainPropType = {\n    [index: string]: ChainProps;\n};\n\nexport interface ChainProps {\n\t'ss58Format': number;\n\t'tokenDecimals': number;\n\t'tokenSymbol': TokenSymbol;\n}\n\nexport interface LoadingStatusType {\n    isLoading: boolean;\n    message: string;\n}\n\nexport interface ReactionMapFields {\n\tcount: number\n\tuserNames: string[]\n}\n\nexport enum VoteThresholdEnum {\n    Supermajorityapproval = 'Supermajorityapproval',\n    Supermajorityrejection = 'Supermajorityrejection',\n    Simplemajority = 'Simplemajority'\n}\n\nexport type VoteThreshold = keyof typeof VoteThresholdEnum;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React, { useContext } from 'react';\n\nimport { ModalContext } from '../context/ModalContext';\nimport Button from '../ui-components/Button';\nimport Modal from '../ui-components/Modal';\n\ninterface Props{\n    className?: string\n}\n\nconst MyModal = ({ className }: Props) => {\n\tconst { modal, dismissModal } = useContext(ModalContext);\n\tconst { content, title } = modal;\n\n\tif (!modal.content) return null;\n\n\tconst renderModal = () => {\n\t\tif (!content) return null;\n\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tbuttons={<Button\n\t\t\t\t\tcontent='Got it'\n\t\t\t\t\ticon='check'\n\t\t\t\t\tprimary\n\t\t\t\t\tonClick={dismissModal}\n\t\t\t\t/>}\n\t\t\t\tclassName={className}\n\t\t\t\tcentered\n\t\t\t\tdimmer='inverted'\n\t\t\t\topen\n\t\t\t\tonClose={dismissModal}\n\t\t\t\tsize='tiny'\n\t\t\t\ttitle={title}\n\t\t\t>{content}</Modal>\n\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{renderModal()}\n\t\t</div>\n\t);\n};\n\nexport default MyModal;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React, { createContext, useRef,useState } from 'react';\n\nimport { NotificationContextType, NotificationType } from '../types';\n\nconst initialNotificationContext : NotificationContextType = {\n\tdeQueueNotification: () => {\n\t\tthrow new Error('setNotificationContextState function must be overridden');\n\t},\n\tnotificationsQueue : new Map(),\n\tqueueNotification: () => {\n\t\tthrow new Error('setNotificationContextState function must be overridden');\n\t}\n};\n\nexport const NotificationContext = createContext(initialNotificationContext);\n\nexport const NotificationProvider = ({ children }: React.PropsWithChildren<{}>) => {\n\tconst [globalIndex, setGlobalIndex] = useState(0);\n\tconst [notificationsQueue, setNotificationsQueue] = useState<NotificationContextType['notificationsQueue']>(new Map());\n\tconst queue = useRef(new Map());\n\n\tconst queueNotification = (notification : NotificationType) => {\n\t\tqueue.current.set(globalIndex, notification);\n\t\tsetNotificationsQueue(new Map(queue.current));\n\t\tsetTimeout(() => deQueueNotification(globalIndex), 5000);\n\t\tsetGlobalIndex(globalIndex+1);\n\t};\n\n\tconst deQueueNotification = ( removeKey: number ) => {\n\t\tif (queue.current.has(removeKey)){\n\t\t\tqueue.current.delete(removeKey);\n\t\t\tsetNotificationsQueue(new Map(queue.current));\n\t\t}\n\t};\n\n\treturn (\n\t\t<NotificationContext.Provider value={{ deQueueNotification, notificationsQueue, queueNotification }}>\n\t\t\t{children}\n\t\t</NotificationContext.Provider>\n\t);\n};","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Message, SemanticCOLORS, SemanticICONS } from 'semantic-ui-react';\n\nimport { NotificationStatus, NotificationType } from '../types';\n\ninterface Props{\n\tclassName?: string\n\tnotification: NotificationType\n\tonDismiss: () => void\n}\n\nconst DismissableNotification = ({ className, notification, onDismiss }: Props) => {\n\tconst { ERROR, SUCCESS, WARNING } = NotificationStatus;\n\tconst { header,message,status } = notification;\n\n\tlet color: SemanticCOLORS  = 'green';\n\tlet icon: SemanticICONS = 'check';\n\n\tswitch (status){\n\tcase ERROR:\n\t\tcolor = 'red';\n\t\ticon = 'times circle';\n\t\tbreak;\n\tcase WARNING:\n\t\tcolor = 'orange';\n\t\ticon = 'warning circle';\n\t\tbreak;\n\tcase SUCCESS:\n\t\tcolor = 'green';\n\t\ticon = 'check circle';\n\t\tbreak;\n\t}\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t<Message\n\t\t\t\tcolor={color}\n\t\t\t\ticon={icon}\n\t\t\t\tcontent={message}\n\t\t\t\theader={header}\n\t\t\t\tonClick={onDismiss}\n\t\t\t\tonDismiss={onDismiss}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default styled(DismissableNotification)`\n\tmargin: 1rem 0;\n\tcursor: pointer;\n\n\t.ui.message {\n\t\tfont-family: font_default;\n\t\tbackground-color: white;\n\t\tborder: none;\n\t\toutline: none;\n\t\tbox-shadow: 0px 0.2rem 0.2rem rgba(0,0,0,0.05);\n\t\t.header {\n\t\t\tfont-family: font_default;\n\t\t\tfont-weight: 500;\n\t\t\tfont-size: md;\n\t\t\tcolor: black_text;\n\t\t}\n\t\tp {\n\t\t\topacity: 1;\n\t\t\tfont-size: sm;\n\t\t\tcolor: black_text;\n\t\t}\n\t\t.close {\n\t\t\ttext-shadow: none;\n\t\t\tfont-size: 1.8rem;\n\t\t\tmargin-right: 1rem!important;\n\t\t\tcolor: grey_secondary;\n\t\t}\n\t}\n\n\t.ui.icon.message>.icon:not(.close) {\n\t\topacity: 1;\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { useContext } from 'react';\n\nimport { NotificationContext } from '../context/NotificationContext';\nimport DismissableNotification from '../ui-components/DismissableNotification';\n\ninterface Props{\n    className?: string\n}\n\nconst Notifications = ({ className }: Props) => {\n\tconst { deQueueNotification, notificationsQueue } = useContext(NotificationContext);\n\n\tconst renderNotifications = () => {\n\t\tif (!notificationsQueue.size) return null;\n\n\t\treturn Array.from(notificationsQueue).map(([key, notification]) =>\n\t\t\t<DismissableNotification key={key} notification={notification} onDismiss={() => deQueueNotification(key)}/>);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{renderNotifications()}\n\t\t</div>\n\t);\n};\n\nexport default styled(Notifications)`\n    position: fixed;\n    z-index: 1;\n\n    @media only screen and (max-width: 576px) {\n        width: 100%;\n        padding-left: 1rem;\n        padding-right: 1rem;\n    }\n    @media only screen and (min-width: 576px) {\n        right: 1rem;\n        width: 40rem;\n    }\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { ApiPromise, WsProvider } from '@polkadot/api';\nimport React, { useEffect, useState } from 'react';\n\nexport interface ApiContextType {\n\tapi: ApiPromise | undefined;\n\tapiReady: boolean;\n}\n\nexport const ApiContext: React.Context<ApiContextType> = React.createContext(\n\t{} as ApiContextType\n);\n\nexport interface ApiContextProviderProps {\n\tchildren?: React.ReactElement;\n}\n\nconst WS_PROVIDER = process.env.REACT_APP_WS_PROVIDER || 'wss://kusama-rpc.polkadot.io';\n\nexport function ApiContextProvider(\n\tprops: ApiContextProviderProps\n): React.ReactElement {\n\tconst { children = null } = props;\n\tconst [api, setApi] = useState<ApiPromise>();\n\tconst [apiReady, setApiReady] = useState(false);\n\n\tuseEffect(() => {\n\t\tasync function connect() {\n\t\t\tconst provider = new WsProvider(WS_PROVIDER);\n\t\t\tconst apiResult = await ApiPromise.create({ provider });\n\n\t\t\tsetApi(apiResult);\n\t\t\tapiResult.isReady.then(() => {\n\t\t\t\tsetApiReady(true);\n\t\t\t\tconsole.log('API ready');\n\t\t\t});\n\t\t}\n\n\t\tconnect().catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<ApiContext.Provider value={{ api, apiReady }}>\n\t\t\t{children}\n\t\t</ApiContext.Provider>\n\t);\n}\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Form as SUIForm, FormFieldProps as SUIFormFieldProps } from 'semantic-ui-react';\n\nfunction Field (props : SUIFormFieldProps){\n\treturn <SUIForm.Field {...props}/>;\n}\n\nexport default styled(Field)`\n    margin-bottom: 1.2rem;\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Form as SUIForm, FormGroupProps as SUIFormGroupProps } from 'semantic-ui-react';\n\nfunction Group (props : SUIFormGroupProps){\n\treturn <SUIForm.Group {...props}/>;\n}\n\nexport default styled(Group)`\n    margin-bottom: 1.25rem;\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Form as SUIForm, FormInputProps as SUIFormInputProps } from 'semantic-ui-react';\n\ntype Props = SUIFormInputProps & {\n    invalid?: boolean\n}\n\nfunction Input ({ className, invalid = false, ...props } : Props){\n\treturn <SUIForm.Input className={invalid ? className : `${className} invalid`} { ...props}/>;\n}\n\nexport default styled(Input)`\n    font-family: font_default;\n    font-size: input_text;\n\n    &.invalid > .ui.input > input {\n        color: red_primary !important;\n        border-color: red_primary !important;\n    }\n    /* color: black_primary;\n    border-style: solid;\n    border-width: 1px;\n    border-color: grey_light;\n    border-radius: 0rem;\n    padding: 0.625rem 0 0.5rem 0;\n    &:focus {\n        outline: 0;\n        border-color: grey_light;\n    }*/\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Form as SUIForm, FormProps as SUIFormProps } from 'semantic-ui-react';\n\nimport Field from './Field';\nimport Group from './Group';\nimport Input from './Input';\n\ntype FormProps = SUIFormProps & {\n    className? : string,\n    standalone? : boolean\n};\n\nForm.Input = Input;\nForm.Field = Field;\nForm.Group = Group;\n\nexport function Form({ className, standalone=true, ...props } : FormProps): React.ReactElement{\n\treturn <StyledForm className={standalone ? `${className} standalone`  : className } {...props} />;\n}\n\nconst StyledForm = styled(SUIForm)`\n\t&.standalone {\n\t\tbackground-color: white;\n\t\tmargin-top: 2rem;\n\t\tpadding: 2rem 3rem 3rem 3rem;\n\t\tborder-style: solid;\n\t\tborder-width: 1px;\n\t\tborder-color: grey_border;\n\t\tborder-radius: 3px;\n\t}\n\n\th3 {\n\t\tfont-size: 2.4rem;\n\t\tmargin-bottom: 3rem;\n\t}\n\n\t.field {\n\t\tlabel {\n\t\t\tfont-weight: 500;\n\t\t}\n\t}\n\n\t.text-muted {\n\t\tfont-size: sm;\n\t\tcolor: grey_primary;\n\t\tmargin-bottom: 1.2rem;\n\n\t\ta {\n\t\t\tcolor: grey_primary;\n\t\t\tborder-bottom-style: solid;\n\t\t\tborder-bottom-width: 1px;\n\t\t\tborder-bottom-color: grey_primary;\n\t\t}\n\t}\n\n\t&.ui.form {\n\n\t\tfont-size: sm;\n\t\t\n\t\t.field {\n\t\t\t> label {\n\t\t\t\tfont-size: input_text_size;\n\t\t\t\tfont-weight: 500;\n\t\t\t\tcolor: black_primary;\n\t\t\t\tmargin-bottom: 0.6rem;\n\t\t\t}\n\t\t}\n\n\t\t.fields {\n\t\t\tmargin-bottom: 1.2rem;\n\n\t\t\t@media only screen and (max-width: 767px) {\n\t\t\t\tmargin-bottom: 1.25rem;\n\t\t\t}\n\t\t}\n\n\t\tinput:not([type]), input[type=date], input[type=datetime-local], input[type=email], \n\t\tinput[type=file], input[type=number], input[type=password], input[type=search], input[type=tel], \n\t\tinput[type=text], input[type=time], input[type=url] {\n\t\t\tfont-family: font_default;\n\t\t\tfont-size: 1.3rem;\n\t\t\tcolor: black_primary;\n\t\t\tborder-style: solid;\n\t\t\tborder-width: 1px;\n\t\t\tborder-color: grey_light;\n\t\t\tborder-radius: 0rem;\n\t\t\ttext-indent: 0rem;\n\t\t\tpadding: 1rem;\n\t\t\tmargin-bottom: 1.2rem;\n\t\t\t&:focus {\n\t\t\t\tfont-family: font_default;\n\t\t\t\tfont-size: 1.3rem;\n\t\t\t\tcolor: black_text;\n\t\t\t\tborder-color: grey_primary;\n\t\t\t\tborder-radius: 0rem;\n\t\t\t}\n\t\t\t&:hover {\n\t\t\t\tborder-color: grey_secondary;\n\t\t\t}\n\t\t}\n\n\t\tinput::selection, textarea::selection {\n\t\t\tcolor: black_text;\n\t\t\tbackground-color: grey_light;\n\t\t}\n\n\t\t@media only screen and (max-width: 576px) {\n\t\t\tmargin-top: 0rem;\n\t\t\tpadding: 2rem;\n\t\t}\n\t}\n\n\t.ui.toggle.checkbox {\n\t\tlabel {\n\t\t\tfont-size: sm;\n\t\t\tfont-weight: 400;\n\t\t\tcolor: black_text !important;\n\t\t}\n\n\t\tinput:checked~label:before {\n\t\t\tbackground-color: pink_primary !important;\n\t\t}\n\t}\n\n\t.ui.dropdown,\n\t.ui.selection.dropdown {\n\t\tmargin-bottom: 1.2rem;\n\t\tborder-radius: 0rem;\n\n\t\t.menu .active.item {\n\t\t\tfont-weight: 500;\n\t\t}\n\n\t\t.menu>.item:hover {\n\t\t\tbackground-color: grey_light;\n\t\t}\n\t}\n\n\t.ui.selection.dropdown:focus,\n\t.ui.selection.active.dropdown,\n\t.ui.selection.active.dropdown:hover,\n\t.ui.selection.active.dropdown .menu {\n\t\tborder-color: grey_light;\n\t}\n\n\t.ui.horizontal.divider  {\n\t\tcolor: black_text !important;\n\t\tmargin: 3rem 0;\n\t\tfont-weight: 400;\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\n\ninterface Props {\n\tclassName?: string\n\tisPreview?: boolean\n\tmd: string\n}\n\nconst Markdown = ({ className, isPreview=false, md }: Props) => {\n\treturn <ReactMarkdown className={isPreview ? `${className} mde-preview-content` : className} source={md}/>;\n};\n\nexport default styled(Markdown)`\n\n\t&, &.mde-preview-content {\n\t\tfont-size: md;\n\t\tmargin-bottom: 2rem;\n\t\toverflow-wrap: break-word;\n\n\t\tp, blockquote, ul, ol, dl, table {\n\t\t\tline-height: 150%;\n\t\t\tmargin: 0 0 1.5rem 0;\n\t\t}\n\n\t\th1 {\n\t\t\tfont-size: 3rem;\n\t\t\tmargin-bottom: 3rem;\n\t\t} \n\t\t\n\t\th2 {\n\t\t\tfont-size: 2.4rem;\n\t\t\tmargin: 3rem 0 2rem 0;\n\t\t}\n\n\t\th3, h4 {\n\t\t\tfont-size: lg;\n\t\t\tmargin-bottom: 0.8rem;\n\t\t}\n\n\t\tul, ol {\n\t\t\tpadding-left: 2rem;\n\n\t\t\tli {\n\t\t\t\tpadding-left: 0.8rem;\n\t\t\t\tmargin-bottom: 1.2rem;\n\t\t\t}\n\n\t\t\tli > input {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\n\t\ta {\n\t\t\tcolor: pink_primary;\n\n\t\t\t&:hover {\n\t\t\t\ttext-decoration: none;\n\t\t\t\tcolor: pink_secondary;\n\t\t\t}\n\t\t}\n\n\t\tblockquote {\n\t\t\tmargin-left: 0;\n\t\t\tpadding: 0 1em;\n\t\t\tcolor: grey_primary;\n\t\t\tborder-left-style: solid;\n\t\t\tborder-left-width: 0.25rem;\n\t\t\tborder-left-color: grey_primary;\n\t\t\tfont-size: 1.6rem;\n\t\t\t\t& > :first-child {\n\t\t\t\t\tmargin-top: 0;\n\t\t\t\t}\n\t\t\t\t& > :last-child {\n\t\t\t\t\tmargin-bottom: 0;\n\t\t\t\t}\n\t\t}\n\n\t\timg {\n\t\t\tmax-width: 100%;\n\t\t\tmargin: 2rem 0;\n\t\t}\n\n\t\tcode {\n\t\t\tpadding: 0.4rem;\n\t\t\tmargin: 0;\n\t\t\tfont-size: sm;\n\t\t\tbackground-color: rgba(0, 0, 0, 0.04);\n\t\t\tborder-radius: 3px;\n\t\t\tcolor: black_text;\n\t\t\t&::before, &::after {\n\t\t\tletter-spacing: -0.2em;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t&.mde-preview-content {\n\n\t\th1, h2, h3, h4 {\n\t\t\tborder-bottom: none;\n\t\t}\n\n\t\th1, h2 {\n\t\t\tfont-size: lg;\n\t\t\tfont-weight: 400;\n\t\t}\n\n\t\th3, h4 {\n\t\t\tfont-size: md;\n\t\t\tfont-weight: 500;\n\t\t}\n\n\t\th3 {\n\t\t\tfont-family: font_default !important;\n\t\t}\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport 'react-mde/lib/styles/css/react-mde-all.css';\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport ReactMde, { commands }  from 'react-mde';\n\nimport Markdown from './Markdown';\n\nconst StyledTextArea = styled.div`\n\n    textarea {\n\t\tborder-radius: 0rem;\n\t\tborder: none!important;\n\t\tcolor: black_text !important;\n\t\tpadding: 1rem 1.2rem!important;\n\t\tline-height: 1.4!important;\n\t}\n\n\t@media only screen and (max-width: 768px) {\n\t\t.react-mde {\n\t\t\t.mde-header {\n\t\t\t\t.mde-header-group {\n\t\t\t\t\tmargin-left: 0!important;\n\t\t\t\t\tpadding: 1rem 0.5rem;\n\t\t\t\t\tbackground-color: white;\n\t\t\t\t\twidth: 100%;\n\n\t\t\t\t\t&.hidden {\n\t\t\t\t\t\tvisibility: hidden;\n\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t  }\n\n\t\t\t\t\t.mde-header-item {\n\t\t\t\t\t\tbutton {\n\t\t\t\t\t\t\tfont-size: 1.3rem!important;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.mde-tabs {\n\t\t\t\t\tmargin: 0rem 0rem!important;\n\t\t\t\t\twidth: 100%;\n\n\t\t\t\t\tbutton {\n\t\t\t\t\t\tmargin: 0 auto;\n\t\t\t\t\t\twidth: 48%;\n\t\t\t\t\t\tborder-bottom-right-radius: 0!important;\n\t\t\t\t\t\tborder-bottom-left-radius: 0!important;\n\n\t\t\t\t\t\t&.selected {\n\t\t\t\t\t\t\tborder-bottom-color: white !important;\n\t\t\t\t\t\t\tz-index: 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t.react-mde  {\n\t\tborder-color: grey_light;\n\t\tfont-size: 1.4rem;\n\n\t\t.grip {\n\t\t\tborder-top: none;\n\t\t\tcolor: grey_secondary;\n\n\t\t\t.icon {\n\t\t\t\tmargin-bottom: 1rem;\n\t\t\t}\n\t\t}\n\n\t\t.mde-header {\n\t\t\tbackground-color: grey_app_background;\n\t\t\tborder-bottom-style: solid;\n\t\t\tborder-bottom-width: 1px;\n\t\t\tborder-bottom-color: grey_light;\n\n\t\t\t.mde-tabs {\n\t\t\t\tmargin: 0rem 0.5rem;\n\n\t\t\t\tbutton {\n\t\t\t\t\tfont-family: font_default;\n\t\t\t\t\tfont-size: sm;\n\t\t\t\t\tfont-weight: 500;\n\t\t\t\t\tpadding: 0.8rem 1.6rem;\n\t\t\t\t\tcolor: black_text;\n\t\t\t\t\tbackground: grey_app_background;\n\t\t\t\t\tborder-radius: 0.3em;\n\t\t\t\t\tborder-bottom-color: grey_light;\n\t\t\t\t\tmargin-bottom: -1px;\n\t\t\t\t\tmargin-top: 1rem;\n\n\t\t\t\t\t&.selected, &:focus {\n\t\t\t\t\t\tbackground: white;\n\t\t\t\t\t\tcolor: black_primary;\n\t\t\t\t\t\tborder-style: solid;\n\t\t\t\t\t\tborder-width: 1px;\n\t\t\t\t\t\tborder-color: grey_light;\n\t\t\t\t\t\toutline: none;\n\t\t\t\t\t\tborder-bottom-color: white;\n\t\t\t\t\t\tmargin-bottom: -1px;\n\t\t\t\t\t\tborder-bottom-right-radius: 0;\n\t\t\t\t\t\tborder-bottom-left-radius: 0;\n\t\t\t\t\t\tmargin-top: 1rem;\n\t\t\t\t\t}\n\n\t\t\t\t\t&:hover {\n\t\t\t\t\t\tcolor: black_primary;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.mde-header-group {\n\t\t\t\tmargin-left: auto;\n\n\t\t\t\t.mde-header-item {\n\t\t\t\t\tbutton {\n\t\t\t\t\t\tcolor: grey_primary;\n\t\t\t\t\t\tfont-size: 1.4rem;\n\n\t\t\t\t\t\t&:hover, &:active, &:focus {\n\t\t\t\t\t\t\tcolor: black_primary;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t.react-mde-dropdown {\n\t\t\t\t\t\tborder-style: solid;\n\t\t\t\t\t\tborder-width: 1px;\n\t\t\t\t\t\tborder-color: grey_light;\n\t\t\t\t\t\tborder-radius: 0.5rem;\n\n\t\t\t\t\t\t.mde-header-item {\n\n\t\t\t\t\t\t\tbutton {\n\t\t\t\t\t\t\t\tp {\n\t\t\t\t\t\t\t\t\tcolor: grey_primary;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tp:hover {\n\t\t\t\t\t\t\t\t\tcolor: black_primary;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\ninterface Props {\n\tclassName?: string\n\theight?: number\n\tname?: string\n\tonChange:  ((value: string) => void) | undefined\n    value: string\n}\n\nexport function MarkdownEditor(props: Props): React.ReactElement {\n\tconst listCommands = [\n\t\t{\n\t\t\tcommands: [\n\t\t\t\tcommands.boldCommand,\n\t\t\t\tcommands.italicCommand,\n\t\t\t\tcommands.headerCommand,\n\t\t\t\tcommands.linkCommand,\n\t\t\t\tcommands.quoteCommand,\n\t\t\t\tcommands.strikeThroughCommand,\n\t\t\t\tcommands.codeCommand,\n\t\t\t\tcommands.imageCommand,\n\t\t\t\tcommands.orderedListCommand,\n\t\t\t\tcommands.unorderedListCommand\n\t\t\t]\n\t\t}\n\t];\n\tconst [selectedTab, setSelectedTab] = React.useState<'write' | 'preview'>('write');\n\n\treturn (\n\t\t<StyledTextArea className=\"container\">\n\t\t\t<ReactMde\n\t\t\t\tcommands={listCommands}\n\t\t\t\tgenerateMarkdownPreview={markdown => Promise.resolve(<Markdown isPreview={true} md={markdown} />) }\n\t\t\t\tminEditorHeight={props.height}\n\t\t\t\tminPreviewHeight={props.height}\n\t\t\t\tname={props.name}\n\t\t\t\tonChange={props.onChange}\n\t\t\t\tonTabChange={setSelectedTab}\n\t\t\t\tselectedTab={selectedTab}\n\t\t\t\tvalue={props.value}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t</StyledTextArea>\n\t);\n}","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nexport default {\n\tVALIDATION_CONTENT_ERROR: 'Did you forget to add content?',\n\tVALIDATION_EMAIL_ERROR: 'You need to provide a valid email!',\n\tVALIDATION_NAME_MAXLENGTH_ERROR: 'Display name cannot be larger than 30 characters.',\n\tVALIDATION_NAME_MINLENGTH_ERROR: 'Name should be at least 3 characters long.',\n\tVALIDATION_PASSWORD_ERROR: 'You need to specify a password with at least 6 characters!',\n\tVALIDATION_TITLE_ERROR: 'Did you forget to add a title?',\n\tVALIDATION_USERNAME_MAXLENGTH_ERROR: 'Username cannot be larger than 30 characters.',\n\tVALIDATION_USERNAME_MINLENGTH_ERROR: 'Username should be at least 3 characters long.',\n\tVALIDATION_USERNAME_PATTERN_ERROR: 'Invalid character found, you can use letters, numbers and the following characters ._-',\n\tVALIDATION_USERNAME_REQUIRED_ERROR: 'Username is mandatory.'\n};\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { FieldError, NestDataObject } from 'react-hook-form/dist/types';\n\nimport { Form } from '../ui-components/Form';\nimport { MarkdownEditor } from '../ui-components/MarkdownEditor';\nimport messages from '../util/messages';\n\ninterface Props {\n\tclassName?: string\n\terrorContent?: FieldError | NestDataObject<any> | NestDataObject<any>[] | FieldError[] | undefined\n\theight?: number\n\tonChange?: (content: string) => void\n\tvalue?: string\n}\n\nconst ContentForm = ({ className, errorContent, height, onChange, value }: Props): JSX.Element => {\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t<Form.Group className={errorContent? 'error':''}>\n\t\t\t\t<MarkdownEditor\n\t\t\t\t\tclassName={ errorContent? 'error':''}\n\t\t\t\t\theight={height}\n\t\t\t\t\tname={'content'}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tvalue={value || ''}\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t{errorContent && <div className={'errorText'}>{messages.VALIDATION_CONTENT_ERROR}</div>}\n\t\t</div>\n\t);\n};\n\nexport default styled(ContentForm)`\n\t.fields {\n\t\tpadding: 0;\n\n\t\t&.error {\n\t\t\tmargin-bottom: 0 !important;\n\t\t}\n\t}\n\n\t.errorText {\n\t\tcolor: red_secondary;\n\t\tmargin-bottom: 1rem;\n\t\tpadding-left: 0.5rem;\n\t}\n\n\ttextarea {\n\t\tfont-size: 1.4rem;\n\t}\n\n\t.react-mde.error > .mde-textarea-wrapper > textarea {\n\t\tborder-style: solid !important;\n\t\tborder-width: 1px !important;\n\t\tborder-color: red_secondary !important;\n\t}\n\n\t.container {\n\t\tmax-width: 100%;\n\t\tmin-width: 100%;\n\t\tpadding: 0 0.5rem;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { ChangeEvent } from 'react';\nimport { FieldError, NestDataObject } from 'react-hook-form/dist/types';\n\nimport { Form } from '../ui-components/Form';\nimport messages from '../util/messages';\n\ninterface Props {\n\tclassName?: string\n\terrorTitle?: FieldError | NestDataObject<any> | NestDataObject<any>[] | FieldError[]\n\tonChange?: (event: ChangeEvent<HTMLInputElement>) => void\n\tvalue?: string\n}\n\nconst TitleForm = ({ className, errorTitle, onChange, value = '' }:Props): JSX.Element => {\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Field width={16}>\n\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName={errorTitle ? 'error title' : 'title'}\n\t\t\t\t\t\tname={'title'}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\tplaceholder='Your title...'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t/>\n\t\t\t\t\t{errorTitle && <span className={'errorText'}>{messages.VALIDATION_TITLE_ERROR}</span>}\n\t\t\t\t</Form.Field>\n\t\t\t</Form.Group>\n\t\t</div>\n\t);\n};\n\nexport default styled(TitleForm)`\n\t.fields {\n\t\tpadding: 0;\n\t}\n\n\tinput.title {\n\t\tfont-size: 1.4rem !important;\n\t}\n\n\tinput.error {\n\t\tborder-color: red_secondary !important;\n\t}\n\n\t.errorText {\n\t\tcolor: red_secondary;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nexport default function (text:string): string {\n\treturn text.replace(/Network error: |GraphQL error: /g,'');\n}\n\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport cleanError from 'src/util/cleanError';\n\ninterface ErrorProps{\n\tclassName?: string,\n\ttext: string\n}\n\nconst FilteredError = ({ className, text } : ErrorProps) => {\n\treturn <div className={className}>\n\t\t{cleanError(text)}\n\t</div>;\n};\n\nexport default styled(FilteredError)`\n\tcolor: red_secondary;\n\tfont-size: sm;\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { useState } from 'react';\nimport { CheckboxProps,Radio } from 'semantic-ui-react';\n\nimport { usePost_TopicsQuery } from '../../generated/graphql';\nimport FilteredError from '../../ui-components/FilteredError';\nimport { Form } from '../../ui-components/Form';\n\ninterface Props {\n    className?: string\n    onTopicSelection: (id: number)=> void\n}\n\nconst TopicsRadio = ({ className, onTopicSelection }: Props) => {\n\n\tconst [selectedTopic, setSelectedTopic] = useState(1);\n\tconst { data, error } = usePost_TopicsQuery();\n\tconst handleTopicSelection = (event: React.FormEvent<HTMLInputElement>, { value }: CheckboxProps) => {\n\t\tconst topicId = Number(value);\n\t\tonTopicSelection(topicId);\n\t\tsetSelectedTopic(topicId);\n\t};\n\n\tif (!data || !data.post_topics) return null;\n\n\tif (error) {\n\t\tconsole.error('Topic retrieval error', error);\n\t\treturn <FilteredError text={error.message}/>;\n\t}\n\n\treturn (\n\t\t<Form.Field className={className}>\n\t\t\t<label>Topic</label>\n\t\t\t<div className='topic-container'>\n\t\t\t\t{ data.post_topics.length\n\t\t\t\t\t? data.post_topics.map(({ id, name } : {name: string, id:number}) => {\n\t\t\t\t\t\treturn <Radio\n\t\t\t\t\t\t\tchecked = {id === selectedTopic ? true : false}\n\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\tlabel={name}\n\t\t\t\t\t\t\tonChange={handleTopicSelection}\n\t\t\t\t\t\t\tvalue={id}\n\t\t\t\t\t\t/>;\n\t\t\t\t\t})\n\t\t\t\t\t: 'No topic found'}\n\t\t\t</div>\n\t\t</Form.Field>\n\t);\n};\n\nexport default styled(TopicsRadio)`\n\t.topic-container {\n\t\tdisplay: flex;\n\t}\n\n    .ui.checkbox {\n\t\tdisplay: block;\n\n\t\t& label:before, & label:after {\n\t\t\topacity: 0;\n\t\t\tposition: fixed;\n\t\t\twidth: 0;\n\t\t}\n\n\t\t& label {\n\t\t\tdisplay: inline-block;\n\t\t\tbackground-color: grey_light;\n\t\t\tcolor: black_text;\n\t\t\tpadding: 0.5rem 0.8rem;\n\t\t\tfont-family: font_default;\n\t\t\tfont-size: 1rem;\n\t\t\tline-height: 1;\n\t\t\tborder-radius: 0.2rem;\n\t\t\tletter-spacing: 0.05rem;\n\t\t\tmargin-right: 0.8rem;\n\t\t\t&:hover {\n\t\t\t\tbackground-color: grey_primary;\n\t\t\t\tcolor: white;\n\t\t\t}\n\t\t}\n\t}\n\n\t.ui.checked.radio.checkbox label {\n\t\tbackground-color: grey_primary;\n\t\tcolor: white;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { useContext,useState } from 'react';\nimport { Controller,useForm } from 'react-hook-form';\nimport { Grid } from 'semantic-ui-react';\n\nimport ContentForm from '../../components/ContentForm';\nimport TitleForm from '../../components/TitleForm';\nimport { NotificationContext } from '../../context/NotificationContext';\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport { useCreatePostMutation, usePostSubscribeMutation } from '../../generated/graphql';\nimport { useRouter } from '../../hooks';\nimport { NotificationStatus } from '../../types';\nimport Button from '../../ui-components/Button';\nimport FilteredError from '../../ui-components/FilteredError';\nimport { Form } from '../../ui-components/Form';\nimport TopicsRadio from './TopicsRadio';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst CreatePost = ({ className }:Props): JSX.Element => {\n\tconst [title, setTitle] = useState('');\n\tconst [content, setContent] = useState('');\n\tconst { queueNotification } = useContext(NotificationContext);\n\tconst [selectedTopic, setSetlectedTopic] = useState(1);\n\tconst currentUser = useContext(UserDetailsContext);\n\tconst { control, errors, handleSubmit } = useForm();\n\n\tconst [createPostMutation, { loading, error }] = useCreatePostMutation();\n\tconst [postSubscribeMutation] = usePostSubscribeMutation();\n\tconst [isSending, setIsSending] = useState(false);\n\tconst { history } = useRouter();\n\n\tconst createSubscription = (postId: number) => {\n\t\tif (!currentUser?.notification?.postCreated) {\n\t\t\treturn;\n\t\t}\n\n\t\tpostSubscribeMutation({\n\t\t\tvariables: {\n\t\t\t\tpostId\n\t\t\t}\n\t\t})\n\t\t\t.then(({ data }) => {\n\t\t\t\tif (data && data.postSubscribe && data.postSubscribe.message) {\n\t\t\t\t\tconsole.log(data.postSubscribe.message);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((e) => console.error('Error subscribing to post',e));\n\t};\n\n\tconst handleSend = () => {\n\t\tif (currentUser.id && title && content && selectedTopic){\n\t\t\tsetIsSending(true);\n\t\t\tcreatePostMutation({ variables: {\n\t\t\t\tcontent,\n\t\t\t\ttitle,\n\t\t\t\ttopicId: selectedTopic,\n\t\t\t\tuserId: currentUser.id\n\t\t\t} }).then(({ data }) => {\n\t\t\t\tif (data && data.insert_posts &&  data.insert_posts.affected_rows > 0 && data.insert_posts.returning.length && data.insert_posts.returning[0].id) {\n\t\t\t\t\tconst postId = data.insert_posts.returning.length && data.insert_posts.returning[0].id;\n\t\t\t\t\thistory.push(`/post/${postId}`);\n\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\theader: 'Thanks for sharing!',\n\t\t\t\t\t\tmessage: 'Post created successfully.',\n\t\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t\t});\n\t\t\t\t\tcreateSubscription(postId);\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error('Error in post creation');\n\t\t\t\t}\n\t\t\t}).catch( e => console.error(e));\n\t\t} else {\n\t\t\tconsole.error('Current userid, title, content or selected topic missing',currentUser.id,title, content, selectedTopic);\n\t\t}\n\t};\n\n\tconst onTitleChange = (event: React.ChangeEvent<HTMLInputElement>[]) => {setTitle(event[0].currentTarget.value); return event[0].currentTarget.value;};\n\tconst onContentChange = (data: Array<string>) => {setContent(data[0]); return data[0].length ? data[0] : null;};\n\n\treturn (\n\t\t<Grid>\n\t\t\t<Grid.Column mobile={16} tablet={16} computer={12} largeScreen={10} widescreen={10}>\n\t\t\t\t<Form className={className}>\n\t\t\t\t\t<h3>New Post</h3>\n\t\t\t\t\t<Controller\n\t\t\t\t\t\tas={<TitleForm\n\t\t\t\t\t\t\terrorTitle={errors.title}\n\t\t\t\t\t\t/>}\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname='title'\n\t\t\t\t\t\tonChange={onTitleChange}\n\t\t\t\t\t\trules={{ required: true }}\n\t\t\t\t\t/>\n\t\t\t\t\t<Controller\n\t\t\t\t\t\tas={<ContentForm\n\t\t\t\t\t\t\terrorContent={errors.content}\n\t\t\t\t\t\t/>}\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname='content'\n\t\t\t\t\t\tonChange={onContentChange}\n\t\t\t\t\t\trules={{ required: true }}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<TopicsRadio\n\t\t\t\t\t\tonTopicSelection={(id) => setSetlectedTopic(id)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className={'mainButtonContainer'}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\tonClick={handleSubmit(handleSend)}\n\t\t\t\t\t\t\tdisabled={isSending || loading}\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{isSending || loading ? 'Creating...' : 'Create'}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t{error && <FilteredError text={error.message}/>}\n\t\t\t\t</Form>\n\t\t\t</Grid.Column>\n\t\t\t<Grid.Column only='computer' computer={4} largeScreen={6} widescreen={6}/>\n\t\t</Grid>\n\t);\n};\n\nexport default styled(CreatePost)`\n\t.mainButtonContainer{\n\t\talign-items: center;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\n\ninterface Props {\n    className?: string\n\tdisplayname?: string | null\n\tusername: string | null\n\tsize?: 'sm' | 'md' | 'lg'\n}\n\nconst Avatar = ({ className, displayname, username, size }: Props) => {\n\n\treturn (\n\t\t<div className={size? `${className} ${size}` : className}>\n\t\t\t{displayname ? displayname.substring(0, 1) : username?.substring(0, 1)}\n\t\t</div>\n\t);\n};\n\nexport default styled(Avatar)`\n\tborder-radius: 50%;\n\tdisplay: inline-block;\n\tvertical-align: top;\n\toverflow: hidden;\n\ttext-transform: uppercase;\n\ttext-align: center;\n\tbackground-color: grey_primary;\n\tcolor: white;\n\t&.sm {\n\t\twidth: 2rem;\n\t\theight: 2rem;\n\t\tfont-size: xs;\n\t}\n\t&.md {\n\t\twidth: 3rem;\n\t\theight: 3rem;\n\t\tfont-size: md;\n\t}\n\t&.lg {\n\t\twidth: 4rem;\n\t\theight: 4rem;\n\t\tfont-size: lg;\n\t\tline-height: 4rem;\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Label, LabelProps } from 'semantic-ui-react';\n\nconst InlineTag = (props: LabelProps) => {return <Label {...props}></Label>;};\n\nexport default styled(InlineTag)`\n    &.ui.label {\n        font-size: xs;\n        font-weight: 500;\n        background-color: grey_light;\n        color: black_text;\n        border-radius: 0.2rem;\n        letter-spacing: 0.05rem;\n        padding: 0.4rem 0.6rem;\n    }\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport * as moment from 'moment';\nimport React from 'react';\nimport { Popup } from 'semantic-ui-react';\n\nimport InlineTag from './InlineTag';\n\ninterface Props{\n\tclassName?: string\n\tcreated_at?: Date\n\tdisplayname?: string | null\n\ttext?: string\n\ttopic?: string\n\tusername?: string\n}\n\nconst CreationLabel = ({ className, created_at, displayname, text='posted', username, topic } : Props) => {\n\treturn <div className={className}>\n\t\t{\n\t\t\tdisplayname\n\t\t\t\t?\n\t\t\t\t<Popup\n\t\t\t\t\ttrigger={<span>{displayname}</span>}\n\t\t\t\t\tcontent={username}\n\t\t\t\t\thoverable={true}\n\t\t\t\t\tposition='top center'\n\t\t\t\t/>\n\t\t\t\t: username &&\n\t\t\t\t\t<span>{username}</span>\n\n\t\t}\n\t\t{text}&nbsp;\n\t\t{topic &&\n\t\t\t<>in <InlineTag>{topic}</InlineTag> </>\n\t\t}\n\t\t{created_at &&\n\t\t\tmoment.utc(created_at, 'YYYY-MM-DDTHH:mm:ss.SSS').fromNow()\n\t\t}\n\t</div>;\n};\n\nexport default styled(CreationLabel)`\n\tcolor: grey_primary;\n\tfont-weight: 400;\n\tfont-size: sm;\n\tmargin-bottom: 0.6rem;\n\tdisplay: inline-flex;\n\t\t\n\tspan {\n\t\tcolor: black_text;\n\t\tfont-weight: 500;\n\t\tmargin-right: 0.3rem;\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport * as moment from 'moment';\nimport React from 'react';\nimport { Popup } from 'semantic-ui-react';\n\ninterface Props{\n    className?: string\n    created_at: Date\n    updated_at: Date\n}\n\nconst UpdateLabel = ({ className, created_at, updated_at } : Props) => {\n\treturn (\n\t\tupdated_at === created_at\n\t\t\t? null :\n\t\t\t<span className={className}>\n\t\t\t\t<Popup content={moment.utc(updated_at, 'YYYY-MM-DDTHH:mm:ss.SSS').fromNow()} trigger={<span>(edited)</span>}/>\n\t\t\t</span>\n\t);\n};\n\nexport default styled(UpdateLabel)`\n    margin-left: .5rem;\n    font-size: sm;\n    \n    span {\n        color: grey_secondary;\n    }\n}`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport { ApolloQueryResult } from 'apollo-client';\nimport React, { useContext } from 'react';\nimport { Popup } from 'semantic-ui-react';\n\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport {\n\tCommentReactionsQuery,\n\tPostReactionsQuery,\n\tuseAddCommentReactionMutation,\n\tuseAddPostReactionMutation,\n\tuseDeleteCommentReactionMutation,\n\tuseDeletePostReactionMutation } from '../../generated/graphql';\nimport Button from '../../ui-components/Button';\n\nexport interface ReactionButtonProps {\n\tclassName?: string\n\treaction: string\n\tcount: number\n\tuserNames: string[]\n\tpostId?: number\n\tcommentId?: string\n\trefetch?: (variables?: undefined) => Promise<ApolloQueryResult<PostReactionsQuery>>\n\t\t| Promise<ApolloQueryResult<CommentReactionsQuery>>\n}\n\nconst ReactionButton = function ({\n\tclassName,\n\treaction,\n\tcount,\n\tuserNames,\n\tpostId,\n\tcommentId,\n\trefetch\n}: ReactionButtonProps) {\n\tconst { id, username } = useContext(UserDetailsContext);\n\tconst [addPostReactionMutation] = useAddPostReactionMutation();\n\tconst [addCommentReactionMutation] = useAddCommentReactionMutation();\n\tconst [deletePostReactionMutation] = useDeletePostReactionMutation();\n\tconst [deleteCommentReactionMutation] = useDeleteCommentReactionMutation();\n\tconst reacted = username && userNames.includes(username);\n\n\tconst _refetch = () => { refetch && refetch(); };\n\n\tconst handleReact = () => {\n\t\tif (!id) {\n\t\t\tconsole.error('No user id found. Not logged in?');\n\t\t\treturn;\n\t\t}\n\n\t\tif (postId) {\n\t\t\tif (reacted) {\n\t\t\t\tdeletePostReactionMutation({\n\t\t\t\t\tvariables: {\n\t\t\t\t\t\tpostId,\n\t\t\t\t\t\treaction,\n\t\t\t\t\t\tuserId: id\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\t.then(_refetch)\n\t\t\t\t\t.catch((e) => console.error('Error in reacting to content',e));\n\t\t\t} else {\n\t\t\t\taddPostReactionMutation({\n\t\t\t\t\tvariables: {\n\t\t\t\t\t\tpostId,\n\t\t\t\t\t\treaction,\n\t\t\t\t\t\tuserId: id\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\t.then(_refetch)\n\t\t\t\t\t.catch((e) => console.error('Error in reacting to content',e));\n\t\t\t}\n\t\t}\n\n\t\tif (commentId) {\n\t\t\tif (reacted) {\n\t\t\t\tdeleteCommentReactionMutation({\n\t\t\t\t\tvariables: {\n\t\t\t\t\t\tcommentId,\n\t\t\t\t\t\treaction,\n\t\t\t\t\t\tuserId: id\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\t.then(_refetch)\n\t\t\t\t\t.catch((e) => console.error('Error in reacting to content',e));\n\t\t\t} else {\n\t\t\t\taddCommentReactionMutation({\n\t\t\t\t\tvariables: {\n\t\t\t\t\t\tcommentId,\n\t\t\t\t\t\treaction,\n\t\t\t\t\t\tuserId: id\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\t.then(_refetch)\n\t\t\t\t\t.catch((e) => console.error('Error in reacting to content',e));\n\t\t\t}\n\t\t}\n\t};\n\n\tlet popupContent = '';\n\n\tif (userNames.length > 5) {\n\t\tpopupContent = `${userNames.slice(0, 5).join(', ')} and ${userNames.length - 5} others`;\n\t} else {\n\t\tpopupContent = userNames.join(', ');\n\t}\n\n\tconst button =  <span className={className}>\n\t\t<Button\n\t\t\tclassName={'social' + (reacted ? ' reacted' : '')}\n\t\t\tonClick={handleReact}\n\t\t\tdisabled={!id}\n\t\t>\n\t\t\t{reaction} {count}\n\t\t</Button>\n\t</span>;\n\n\treturn userNames.length > 0 ?\n\t\t<Popup\n\t\t\tcontent={popupContent}\n\t\t\ttrigger={button}\n\t\t/> : button;\n};\n\nexport default styled(ReactionButton)`\n\t.social {\n\t\tcolor: blue_primary !important;\n\t\tfont-size: 1em !important;\n\t}\n\n\t.reacted {\n\t\tbackground-color: blue_secondary !important;\n\t\tborder: none !important;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nexport const reactions = ['👍', '👎'];\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\n\nimport { useCommentReactionsQuery } from '../../generated/graphql';\nimport { ReactionMapFields } from '../../types';\nimport ReactionButton from './ReactionButton';\nimport { reactions } from './reactions';\n\ninterface Props {\n\tclassName?: string\n\tcommentId: string\n}\n\nconst CommentReactionBar = function ({ className, commentId }: Props) {\n\tconst { data, refetch } = useCommentReactionsQuery({ variables: { commentId } });\n\n\tconst reactionMap: { [ key: string ]: ReactionMapFields; } = {};\n\n\treactions.forEach((reaction) => {\n\t\treactionMap[reaction] = {\n\t\t\tcount: 0,\n\t\t\tuserNames: []\n\t\t};\n\t});\n\n\tdata?.comment_reactions?.forEach(({ reaction, reacting_user }) => {\n\t\tif (!reactionMap[reaction]) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (reacting_user?.username && reactionMap[reaction].userNames.includes(reacting_user?.username)){\n\t\t\tconsole.error('This user has already reacted.');\n\t\t\treturn;\n\t\t}\n\n\t\tif (reacting_user?.username) {\n\t\t\treactionMap[reaction].userNames.push(reacting_user?.username);\n\t\t}\n\n\t\treactionMap[reaction].count++;\n\t});\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{Object.keys(reactionMap).map((reaction) => {\n\t\t\t\tconst {\n\t\t\t\t\tcount,\n\t\t\t\t\tuserNames\n\t\t\t\t} = reactionMap[reaction];\n\n\t\t\t\treturn (\n\t\t\t\t\t<ReactionButton\n\t\t\t\t\t\tkey={reaction}\n\t\t\t\t\t\tcount={count}\n\t\t\t\t\t\tuserNames={userNames}\n\t\t\t\t\t\treaction={reaction}\n\t\t\t\t\t\tcommentId={commentId}\n\t\t\t\t\t\trefetch={refetch}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default styled(CommentReactionBar)`\n\tbackground-color: white;\n\tborder-style: solid;\n\tborder-width: 1px;\n\tborder-color: grey_light;\n\tmargin-bottom: 1rem;\n\tpadding: 5px;\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React, { useContext,useState } from 'react';\nimport { Dropdown, DropdownProps,Icon, TextArea, TextAreaProps } from 'semantic-ui-react';\n\nimport { NotificationContext } from '../../context/NotificationContext';\nimport { useReportContentMutation } from '../../generated/graphql';\nimport { NotificationStatus } from '../../types';\nimport Button from '../../ui-components/Button';\nimport FilteredError from '../../ui-components/FilteredError';\nimport { Form } from '../../ui-components/Form';\nimport Modal from '../../ui-components/Modal';\n\ninterface DiscussionProps {\n\ttype: string\n\tcontentId: string\n}\n\nconst reasons = [\n\t'It\\'s suspicious or spam',\n\t'It\\'s abusive or harmful',\n\t'It expresses intentions of self-harm or suicide',\n\t'other (please let us know in the field below)'\n];\nconst reasonOptions = reasons.map(reason => ({ key: reason, text: reason, value: reason }));\nconst NETWORK = process.env.REACT_APP_NETWORK || 'kusama';\n\nconst ReportButton = function ({ type, contentId }:DiscussionProps) {\n\tconst [showModal, setShowModal] = useState(false);\n\tconst [reason, setReason] = useState('');\n\tconst [comments, setComments] = useState('');\n\tconst [reportContentMutation, { loading, error }] = useReportContentMutation();\n\tconst { queueNotification } = useContext(NotificationContext);\n\n\tconst handleReport = () => {\n\t\treportContentMutation({\n\t\t\tvariables: {\n\t\t\t\tcomments,\n\t\t\t\tcontent_id: contentId,\n\t\t\t\tnetwork: NETWORK,\n\t\t\t\treason,\n\t\t\t\ttype\n\t\t\t}\n\t\t})\n\t\t\t.then(({ data }) => {\n\t\t\t\tif (data && data.reportContent && data.reportContent.message) {\n\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\theader: 'Success!',\n\t\t\t\t\t\tmessage: data.reportContent.message,\n\t\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsetShowModal(false);\n\t\t\t})\n\t\t\t.catch((e) => console.error('Error reporting content',e));\n\t};\n\n\tconst openModal = () => {\n\t\tsetShowModal(true);\n\t};\n\tconst dismissModal = () => {\n\t\tsetShowModal(false);\n\t};\n\tconst onReasonChange = (event: React.SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => setReason(data.value?.toString() || '');\n\tconst onCommentsChange = (event: React.FormEvent<HTMLTextAreaElement>, data: TextAreaProps) => setComments(data.value?.toString() || '');\n\n\treturn (\n\t\t<>\n\t\t\t{showModal ?\n\t\t\t\t<Modal\n\t\t\t\t\tbuttons={\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcontent='Report'\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\ticon='check'\n\t\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\t\tonClick={handleReport}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcontent='Close'\n\t\t\t\t\t\t\t\ticon='close'\n\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\tonClick={dismissModal}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t}\n\t\t\t\t\tcentered\n\t\t\t\t\tdimmer='inverted'\n\t\t\t\t\topen\n\t\t\t\t\tonClose={dismissModal}\n\t\t\t\t\tsize='tiny'\n\t\t\t\t\ttitle={`Report ${type}`}\n\t\t\t\t>\n\t\t\t\t\t<Form standalone={false}>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Field width={16}>\n\t\t\t\t\t\t\t\t<label>Reason</label>\n\t\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\t\tplaceholder={'I\\'m reporting because'}\n\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\tselection\n\t\t\t\t\t\t\t\t\toptions={reasonOptions}\n\t\t\t\t\t\t\t\t\tonChange={onReasonChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Field width={16}>\n\t\t\t\t\t\t\t\t<label>Comments (300 char max)</label>\n\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\tname={'comments'}\n\t\t\t\t\t\t\t\t\tonChange={onCommentsChange}\n\t\t\t\t\t\t\t\t\tvalue={comments || ''}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t{error && <FilteredError text={error.message}/>}\n\t\t\t\t\t</Form>\n\t\t\t\t</Modal>\n\t\t\t\t: null\n\t\t\t}\n\t\t\t<Button\n\t\t\t\tclassName={'social'}\n\t\t\t\tonClick={openModal}\n\t\t\t>\n\t\t\t\t<Icon name='flag'/>{' Report'}\n\t\t\t</Button>\n\t\t</>\n\t);\n};\n\nexport default ReportButton;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport { ApolloQueryResult } from 'apollo-client';\nimport React, { useContext, useEffect,useState } from 'react';\nimport { Controller,useForm } from 'react-hook-form';\nimport { GoCheck, GoX } from 'react-icons/go';\nimport { Icon } from 'semantic-ui-react';\n\nimport { NotificationContext } from '../../context/NotificationContext';\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport {\n\tCommentFieldsFragment,\n\tDiscussionPostAndCommentsQuery,\n\tDiscussionPostAndCommentsQueryVariables,\n\tMotionPostAndCommentsQuery,\n\tMotionPostAndCommentsQueryVariables,\n\tProposalPostAndCommentsQuery,\n\tProposalPostAndCommentsQueryVariables,\n\tReferendumPostAndCommentsQuery,\n\tReferendumPostAndCommentsQueryVariables,\n\tTreasuryProposalPostAndCommentsQuery,\n\tTreasuryProposalPostAndCommentsQueryVariables,\n\tuseEditCommentMutation } from '../../generated/graphql';\nimport { NotificationStatus } from '../../types';\nimport Button from '../../ui-components/Button';\nimport { Form } from '../../ui-components/Form';\nimport Markdown from '../../ui-components/Markdown';\nimport ContentForm from '../ContentForm';\nimport CommentReactionBar from '../Reactionbar/CommentReactionBar';\nimport ReportButton from '../ReportButton';\n\ninterface Props {\n\tauthorId: number,\n\tclassName?: string,\n\tcomment: CommentFieldsFragment,\n\tcommentId: string,\n\tcontent: string,\n\trefetch: (variables?:\n\t\tDiscussionPostAndCommentsQueryVariables |\n\t\tProposalPostAndCommentsQueryVariables |\n\t\tReferendumPostAndCommentsQueryVariables |\n\t\tMotionPostAndCommentsQueryVariables |\n\t\tTreasuryProposalPostAndCommentsQueryVariables |\n\t\tundefined\n\t) =>\n\t\tPromise<ApolloQueryResult<TreasuryProposalPostAndCommentsQuery>> |\n\t\tPromise<ApolloQueryResult<MotionPostAndCommentsQuery>> |\n\t\tPromise<ApolloQueryResult<ReferendumPostAndCommentsQuery>> |\n\t\tPromise<ApolloQueryResult<ProposalPostAndCommentsQuery>> |\n\t\tPromise<ApolloQueryResult<DiscussionPostAndCommentsQuery>>\n}\n\nconst EditableCommentContent = ({ authorId, className, content, commentId, refetch }: Props) => {\n\tconst [isEditing, setIsEditing] = useState(false);\n\tconst { id } = useContext(UserDetailsContext);\n\tconst [newContent, setNewContent] = useState(content || '');\n\tconst toggleEdit = () => setIsEditing(!isEditing);\n\tconst { queueNotification } = useContext(NotificationContext);\n\tconst {  control, errors, handleSubmit, setValue } = useForm();\n\n\tuseEffect(() => {\n\t\tisEditing && setValue('content',content);\n\t},[content, isEditing, setValue]);\n\n\tconst handleCancel = () => {\n\t\ttoggleEdit();\n\t\tsetNewContent(content || '');\n\t};\n\tconst handleSave = () => {\n\t\tsetIsEditing(false);\n\t\teditCommentMutation( {\n\t\t\tvariables: {\n\t\t\t\tcontent: newContent,\n\t\t\t\tid: commentId\n\t\t\t} }\n\t\t)\n\t\t\t.then(({ data }) => {\n\t\t\t\tif (data?.update_comments && data.update_comments.affected_rows > 0){\n\t\t\t\t\trefetch();\n\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\theader: 'Success!',\n\t\t\t\t\t\tmessage: 'Your comment was edited.',\n\t\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((e) => console.error('Error saving comment: ',e));\n\t};\n\tconst onContentChange = (data: Array<string>) => {setNewContent(data[0]); return data[0].length ? data[0] : null;};\n\tconst [editCommentMutation, { error }] = useEditCommentMutation({\n\t\tvariables: {\n\t\t\tcontent: newContent,\n\t\t\tid: commentId\n\t\t}\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<div className={className}>\n\t\t\t\t{error && error.message && <div>{error.message}</div>}\n\t\t\t\t{\n\t\t\t\t\tisEditing\n\t\t\t\t\t\t?\n\t\t\t\t\t\t<Form standalone={false}>\n\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\tas={<ContentForm\n\t\t\t\t\t\t\t\t\terrorContent={errors.content}\n\t\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t\t\tname='content'\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tonChange={onContentChange}\n\t\t\t\t\t\t\t\trules={{ required: true }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='button-container'>\n\t\t\t\t\t\t\t\t<Button secondary size='small' onClick={handleCancel}><GoX className='icon'/>Cancel</Button>\n\t\t\t\t\t\t\t\t<Button primary size='small' onClick={handleSubmit(handleSave)}><GoCheck className='icon' />Save</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Markdown md={content} />\n\t\t\t\t\t\t\t<div className='actions-bar'>\n\t\t\t\t\t\t\t\t<CommentReactionBar className='reactions' commentId={commentId} />\n\t\t\t\t\t\t\t\t{id && <div className='vl'/>}\n\t\t\t\t\t\t\t\t{id === authorId && <Button className={'social'} onClick={toggleEdit}><Icon name='edit' className='icon'/>Edit</Button>}\n\t\t\t\t\t\t\t\t{id && !isEditing && <ReportButton type='comment' contentId={commentId} />}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default styled(EditableCommentContent)`\n\n\t.button-container {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t}\n\n\t.actions-bar {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t.reactions {\n\t\tdisplay: inline-flex;\n\t\tborder: none;\n\t\tpadding: 0.4rem 0;\n\t\tmargin: 0rem;\n\t}\n\n\t.vl {\n\t\tdisplay: inline-flex;\n\t\tborder-left-style: solid;\n\t\tborder-left-width: 1px;\n\t\tborder-left-color: grey_border;\n\t\theight: 2rem;\n\t\tmargin: 0 1.2rem 0 0.8rem;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport { ApolloQueryResult } from 'apollo-client/core/types';\nimport * as React from 'react';\n\nimport {\n\tCommentFieldsFragment,\n\tDiscussionPostAndCommentsQuery,\n\tDiscussionPostAndCommentsQueryVariables,\n\tMotionPostAndCommentsQuery,\n\tMotionPostAndCommentsQueryVariables,\n\tProposalPostAndCommentsQuery,\n\tProposalPostAndCommentsQueryVariables,\n\tReferendumPostAndCommentsQuery,\n\tReferendumPostAndCommentsQueryVariables,\n\tTreasuryProposalPostAndCommentsQuery,\n\tTreasuryProposalPostAndCommentsQueryVariables } from '../../generated/graphql';\nimport Avatar from '../../ui-components/Avatar';\nimport CreationLabel from '../../ui-components/CreationLabel';\nimport UpdateLabel from '../../ui-components/UpdateLabel';\nimport EditableCommentContent from './EditableCommentContent';\n\ninterface Props{\n\tclassName?: string,\n\tcomment: CommentFieldsFragment,\n\trefetch: (variables?:\n\t\tReferendumPostAndCommentsQueryVariables |\n\t\tDiscussionPostAndCommentsQueryVariables |\n\t\tProposalPostAndCommentsQueryVariables |\n\t\tMotionPostAndCommentsQueryVariables |\n\t\tTreasuryProposalPostAndCommentsQueryVariables |\n\t\tundefined) =>\n\t\tPromise<ApolloQueryResult<TreasuryProposalPostAndCommentsQuery>> |\n\t\tPromise<ApolloQueryResult<MotionPostAndCommentsQuery>> |\n\t\tPromise<ApolloQueryResult<ReferendumPostAndCommentsQuery>> |\n\t\tPromise<ApolloQueryResult<ProposalPostAndCommentsQuery>> |\n\t\tPromise<ApolloQueryResult<DiscussionPostAndCommentsQuery>>\n}\n\nexport const Comment = ({ className, comment, refetch } : Props) => {\n\tconst { author, content, created_at, id, updated_at } = comment;\n\n\tif (!author || !author.id || !author.username || !content) return <div>Comment not available</div>;\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t<Avatar\n\t\t\t\tclassName='avatar'\n\t\t\t\tdisplayname={author.name}\n\t\t\t\tusername={author.username}\n\t\t\t\tsize={'lg'}\n\t\t\t/>\n\t\t\t<div className='comment-box'>\n\t\t\t\t<CreationLabel\n\t\t\t\t\tclassName='creation-label'\n\t\t\t\t\tcreated_at={created_at}\n\t\t\t\t\tdisplayname={author.name}\n\t\t\t\t\ttext={'commented'}\n\t\t\t\t\tusername={author.username}\n\t\t\t\t/>\n\t\t\t\t<UpdateLabel\n\t\t\t\t\tclassName='update-label'\n\t\t\t\t\tcreated_at={created_at}\n\t\t\t\t\tupdated_at={updated_at}\n\t\t\t\t/>\n\t\t\t\t<EditableCommentContent\n\t\t\t\t\tauthorId={author.id}\n\t\t\t\t\tclassName='comment-content'\n\t\t\t\t\tcomment={comment}\n\t\t\t\t\tcommentId={id}\n\t\t\t\t\tcontent={content}\n\t\t\t\t\trefetch={refetch}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default styled(Comment)`\n\tdisplay: flex;\n\n\t.avatar {\n\t\tdisplay: inline-block;\n\t\tflex: 0 0 4rem;\n\t\tmargin-right: 2rem;\n\t\t@media only screen and (max-width: 576px) {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\t.comment-box {\n\t\tbackground-color: white;\n\t\tborder-style: solid;\n\t\tborder-width: 1px;\n\t\tborder-color: grey_border;\n\t\tborder-radius: 3px;\n\t\tmargin-bottom: 1rem;\n\t\twidth: 100%;\n\n\t\t@media only screen and (max-width: 576px) {\n\t\t\twidth: 100%;\n\t\t\tborder-radius: 0px;\n\t\t}\n\t}\n\n\t.creation-label {\n\t\tdisplay: inline-block;\n\t\tpadding: 1rem 0 0.8rem 2rem;\n\t\tmargin-bottom: 0;\n\t}\n\n\t.update-label {\n\t\tdisplay: inline-block;\n\t}\n\n\t.comment-content {\n\t\tpadding: 0.8rem 2rem;\n\t\twidth: 100%;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport { ApolloQueryResult } from 'apollo-client/core/types';\nimport * as React from 'react';\n\nimport {\n\tCommentFieldsFragment,\n\tDiscussionPostAndCommentsQuery,\n\tDiscussionPostAndCommentsQueryVariables,\n\tMotionPostAndCommentsQuery,\n\tMotionPostAndCommentsQueryVariables,\n\tProposalPostAndCommentsQuery,\n\tProposalPostAndCommentsQueryVariables,\n\tReferendumPostAndCommentsQuery,\n\tReferendumPostAndCommentsQueryVariables,\n\tTreasuryProposalPostAndCommentsQuery,\n\tTreasuryProposalPostAndCommentsQueryVariables\n} from '../../generated/graphql';\nimport Comment from './Comment';\n\ninterface Props{\n\tclassName?: string\n\tcomments: CommentFieldsFragment[]\n\trefetch: (variables?:\n\t\tReferendumPostAndCommentsQueryVariables |\n\t\tDiscussionPostAndCommentsQueryVariables |\n\t\tProposalPostAndCommentsQueryVariables |\n\t\tMotionPostAndCommentsQueryVariables |\n\t\tTreasuryProposalPostAndCommentsQueryVariables |\n\t\tundefined) =>\n\t\tPromise<ApolloQueryResult<TreasuryProposalPostAndCommentsQuery>> |\n\t\tPromise<ApolloQueryResult<MotionPostAndCommentsQuery>> |\n\t\tPromise<ApolloQueryResult<ReferendumPostAndCommentsQuery>> |\n\t\tPromise<ApolloQueryResult<ProposalPostAndCommentsQuery>> |\n\t\tPromise<ApolloQueryResult<DiscussionPostAndCommentsQuery>>\n}\n\nconst Comments = ({ className, comments, refetch }: Props) => {\n\treturn (\n\t\t<div className={className}>\n\t\t\t{comments.map((comment:CommentFieldsFragment) =>\n\t\t\t\t<Comment\n\t\t\t\t\tcomment={comment}\n\t\t\t\t\tkey={comment.id}\n\t\t\t\t\trefetch={refetch}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default styled(Comments)`\n\tmargin-top: 4rem;\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nexport const proposalStatus = {\n\tPROPOSED: 'Proposed',\n\tTABLED: 'Tabled'\n};\n\nexport const referendumStatus = {\n\tCANCELLED: 'Cancelled',\n\tEXECUTED: 'Executed',\n\tNOTPASSED: 'NotPassed',\n\tPASSED: 'Passed',\n\tSTARTED: 'Started',\n\tVETOED: 'Vetoed'\n};\n\nexport const motionStatus = {\n\tAPPROVED: 'Approved',\n\tDISAPPROVED: 'Disapproved',\n\tEXECUTED: 'Executed',\n\tPROPOSED: 'Proposed',\n\tVOTED: 'Voted'\n};\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { ReactNode } from 'react';\nimport { Label, SemanticICONS } from 'semantic-ui-react';\nimport { motionStatus, proposalStatus, referendumStatus } from 'src/global/statuses';\n\ninterface Props{\n\tchildren?: ReactNode,\n\tclassName?: string,\n\tcontent?: string,\n\ticon?: string,\n\tstatus: string\n}\n\nconst StatusTag = ({ children, className, content, status }: Props) => {\n\n\tlet icon: SemanticICONS = 'circle';\n\n\tif ([referendumStatus.PASSED,\n\t\treferendumStatus.STARTED,\n\t\tproposalStatus.PROPOSED,\n\t\tmotionStatus.PROPOSED,\n\t\tmotionStatus.APPROVED\n\t].includes(status)){\n\t\ticon = 'circle';\n\t}\n\n\tif ([referendumStatus.CANCELLED,\n\t\treferendumStatus.NOTPASSED,\n\t\treferendumStatus.VETOED,\n\t\tmotionStatus.DISAPPROVED\n\t].includes(status)){\n\t\ticon = 'times';\n\t}\n\n\tif ([referendumStatus.EXECUTED,\n\t\tmotionStatus.EXECUTED\n\t].includes(status)){\n\t\ticon = 'check';\n\t}\n\n\treturn (\n\t\t<Label\n\t\t\tclassName={className}\n\t\t\ticon={icon}\n\t\t\tcontent={content}\n\t\t\tstatus={status}\n\t\t>\n\t\t\t{children}\n\t\t</Label>\n\n\t);\n};\n\nexport default styled(StatusTag).attrs(( { status }: Props) => ({\n\tclassName: status,\n\tcontent: status\n}))`\n\t&.ui.label {\n\t\tfont-size: xs;\n\t\tfont-weight: 500;\n\t\tbackground-color: white;\n\t\tcolor: grey_primary;\n\t\tborder-style: solid;\n\t\tborder-width: 1px;\n\t\tborder-radius: 0.2rem;\n\t\tletter-spacing: 0.05rem;\n\t\ttext-transform: capitalize;\n\t\tpadding: 0.5rem 1rem;\n\t\t&.${referendumStatus.STARTED},\n\t\t&.${proposalStatus.PROPOSED},\n\t\t&.${motionStatus.PROPOSED} {\n\t\t\tborder-color: blue_primary;\n\t\t\tcolor: blue_primary;\n\t\t\tbackground-color: blue_primary_transparent;\n\t\t}\n\t\t&.${referendumStatus.PASSED},\n\t\t&.${referendumStatus.EXECUTED},\n\t\t&.${motionStatus.EXECUTED} {\n\t\t\tborder-color: green_primary;\n\t\t\tcolor: green_primary;\n\t\t\tbackground-color: green_primary_transparent;\n\t\t}\n\t\t&.${referendumStatus.CANCELLED},\n\t\t&.${referendumStatus.NOTPASSED},\n\t\t&.${referendumStatus.VETOED},\n\t\t&.${motionStatus.DISAPPROVED} {\n\t\t\tborder-color: red_primary;\n\t\t\tcolor: red_primary;\n\t\t\tbackground-color: red_primary_transparent;\n\t\t}\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\n\nimport { DiscussionPostFragment, MotionPostFragment,ProposalPostFragment, ReferendumPostFragment, TreasuryProposalPostFragment } from '../../generated/graphql';\nimport CreationLabel from '../../ui-components/CreationLabel';\nimport Markdown from '../../ui-components/Markdown';\nimport StatusTag from '../../ui-components/StatusTag';\nimport UpdateLabel from '../../ui-components/UpdateLabel';\n\ninterface Props {\n\tclassName?: string,\n\tonchainId?: number | null\n\tpost: DiscussionPostFragment | ProposalPostFragment | ReferendumPostFragment| TreasuryProposalPostFragment| MotionPostFragment\n\tpostStatus?: string\n}\nconst PostContent = ({ className, onchainId, post, postStatus }:Props) => {\n\tconst { author, created_at, content, title, updated_at } = post;\n\n\tif (!author || !author.username || !content) return <div>Post not available</div>;\n\treturn (\n\t\t<div className={className}>\n\t\t\t{postStatus && <StatusTag className='post_tags' status={postStatus}/>}\n\t\t\t<h2 className={postStatus ? 'onchain-title' : ''}>{(onchainId || onchainId === 0) && `#${onchainId}`} {title}</h2>\n\t\t\t<div className='post_info'>\n\t\t\t\t{onchainId || onchainId === 0 ?\n\t\t\t\t\tnull :\n\t\t\t\t\t<>\n\t\t\t\t\t\t<CreationLabel\n\t\t\t\t\t\t\tclassName='md'\n\t\t\t\t\t\t\tcreated_at={created_at}\n\t\t\t\t\t\t\tdisplayname={author.name}\n\t\t\t\t\t\t\tusername={author.username}\n\t\t\t\t\t\t\ttopic={post.topic.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<UpdateLabel\n\t\t\t\t\t\t\tclassName='md'\n\t\t\t\t\t\t\tcreated_at={created_at}\n\t\t\t\t\t\t\tupdated_at={updated_at}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<Markdown md={content} />\n\t\t</div>\n\t);\n};\n\nexport default styled(PostContent)`\n\tposition: relative;\n\tmargin-bottom: 3rem;\n\n\t.onchain-title {\n\t\tmax-width: calc(100% - 10rem);\n\n\t\t@media only screen and (max-width: 576px) {\n\t\t\tmax-width: 100%;\n\t\t}\n\t}\n\n\t.post_info {\n\t\tdisplay: inline-block;\n\t\tmargin-bottom: 2rem;\n\t}\n\n\t.post_tags {\n\t\tposition: absolute;\n\t\ttop: 0rem;\n\t\tright: 0rem;\n\t\ttext-align: right;\n\n\t\t@media only screen and (max-width: 768px) {\n\t\t\tposition: relative;\n\t\t\tmargin-bottom: 2rem;\n\t\t}\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport { ApolloQueryResult } from 'apollo-client';\nimport React, { useContext, useEffect,useState } from 'react';\nimport { Controller,useForm } from 'react-hook-form';\nimport { GoCheck, GoX } from 'react-icons/go';\n\nimport { NotificationContext } from '../context/NotificationContext';\nimport { DiscussionPostAndCommentsQuery,\n\tDiscussionPostAndCommentsQueryVariables,\n\tDiscussionPostFragment,\n\tMotionPostAndCommentsQuery,\n\tMotionPostAndCommentsQueryVariables,\n\tMotionPostFragment,\n\tProposalPostAndCommentsQuery,\n\tProposalPostAndCommentsQueryVariables,\n\tProposalPostFragment,\n\tReferendumPostAndCommentsQuery,\n\tReferendumPostAndCommentsQueryVariables,\n\tReferendumPostFragment,\n\tTreasuryProposalPostAndCommentsQuery,\n\tTreasuryProposalPostAndCommentsQueryVariables,\n\tTreasuryProposalPostFragment,\n\tuseEditPostMutation\n} from '../generated/graphql';\nimport { NotificationStatus } from '../types';\nimport Button from '../ui-components/Button';\nimport FilteredError from '../ui-components/FilteredError';\nimport { Form } from '../ui-components/Form';\nimport ContentForm from './ContentForm';\nimport PostContent from './Post/PostContent';\nimport TitleForm from './TitleForm';\n\ninterface Props {\n\tclassName?: string\n\tisEditing: boolean\n\tonchainId?: number | null\n\tpost: DiscussionPostFragment | ProposalPostFragment | ReferendumPostFragment| TreasuryProposalPostFragment| MotionPostFragment\n\tpostStatus?: string\n\trefetch: (\n\t\tvariables?: ReferendumPostAndCommentsQueryVariables\n\t\t| DiscussionPostAndCommentsQueryVariables\n\t\t| ProposalPostAndCommentsQueryVariables\n\t\t| MotionPostAndCommentsQueryVariables\n\t\t| TreasuryProposalPostAndCommentsQueryVariables\n\t\t| undefined\n\t) => Promise<ApolloQueryResult<ReferendumPostAndCommentsQuery>>\n\t\t| Promise<ApolloQueryResult<ProposalPostAndCommentsQuery>>\n\t\t| Promise<ApolloQueryResult<MotionPostAndCommentsQuery>>\n\t\t| Promise<ApolloQueryResult<TreasuryProposalPostAndCommentsQuery>>\n\t\t| Promise<ApolloQueryResult<DiscussionPostAndCommentsQuery>>\n\ttoggleEdit: () => void\n}\n\nconst EditablePostContent = ({ className, isEditing, onchainId, post, postStatus, refetch, toggleEdit }: Props) => {\n\tconst { author, content, title } = post;\n\tconst [newContent, setNewContent] = useState(content || '');\n\tconst [newTitle, setNewTitle] = useState(title || '');\n\tconst { queueNotification } = useContext(NotificationContext);\n\tconst {  control, errors, handleSubmit, setValue } = useForm();\n\n\tconst handleCancel = () => {\n\t\ttoggleEdit();\n\t\tsetNewContent(content || '');\n\t\tsetNewTitle(title || '');\n\t};\n\tconst handleSave = () => {\n\t\ttoggleEdit();\n\t\teditPostMutation( {\n\t\t\tvariables: {\n\t\t\t\tcontent: newContent,\n\t\t\t\tid: post.id,\n\t\t\t\ttitle: newTitle\n\t\t\t} }\n\t\t)\n\t\t\t.then(({ data }) => {\n\t\t\t\tif (data && data.update_posts && data.update_posts.affected_rows > 0){\n\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\theader: 'Success!',\n\t\t\t\t\t\tmessage: 'Your post was edited',\n\t\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t\t});\n\t\t\t\t\trefetch();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((e) => console.error('Error saving post',e));\n\t};\n\n\tconst onTitleChange = (event: React.ChangeEvent<HTMLInputElement>[]) => {setNewTitle(event[0].currentTarget.value); return event[0].currentTarget.value;};\n\tconst onContentChange = (data: Array<string>) => {setNewContent(data[0]); return data[0].length ? data[0] : null;};\n\tconst [editPostMutation, { error }] = useEditPostMutation({\n\t\tvariables: {\n\t\t\tcontent: newContent,\n\t\t\tid: post.id,\n\t\t\ttitle: newTitle\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tif (isEditing) {\n\t\t\tsetValue('content',content);\n\t\t\tsetValue('title',title);\n\t\t}\n\t},[content, isEditing, setValue, title]);\n\n\tif (!author || !author.username || !content) return <div>Post content or author could not be found.</div>;\n\n\treturn (\n\t\t<>\n\t\t\t<div className={className}>\n\t\t\t\t{error && <FilteredError text={error.message}/>}\n\t\t\t\t{\n\t\t\t\t\tisEditing\n\t\t\t\t\t\t?\n\t\t\t\t\t\t<Form standalone={false}>\n\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\tas={<TitleForm\n\t\t\t\t\t\t\t\t\terrorTitle={errors.title}\n\t\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tname='title'\n\t\t\t\t\t\t\t\tonChange={onTitleChange}\n\t\t\t\t\t\t\t\trules={{ required: true }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\tas={<ContentForm\n\t\t\t\t\t\t\t\t\terrorContent={errors.content}\n\t\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t\t\tname='content'\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tonChange={onContentChange}\n\t\t\t\t\t\t\t\trules={{ required: true }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='button-container'>\n\t\t\t\t\t\t\t\t<Button secondary size='small' onClick={handleCancel}><GoX className='icon'/>Cancel</Button>\n\t\t\t\t\t\t\t\t<Button primary size='small' onClick={handleSubmit(handleSave)}><GoCheck className='icon'/>Save</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<PostContent onchainId={onchainId} post={post} postStatus={postStatus}/>\n\t\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default styled(EditablePostContent)`\n\tmargin-bottom: 2rem;\n\n\t.button-container {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport * as React from 'react';\n\ninterface Props{\n    isMotion: boolean\n    isProposal: boolean\n    isReferendum: boolean\n    isTreasuryProposal: boolean\n}\nconst NoPostFound = ({ isMotion = false, isProposal = false, isReferendum = false, isTreasuryProposal = false }: Props) => {\n\tconst postType =  isMotion\n\t\t? 'motion'\n\t\t: isProposal\n\t\t\t? 'proposal'\n\t\t\t: isReferendum\n\t\t\t\t? 'referendum'\n\t\t\t\t: isTreasuryProposal\n\t\t\t\t\t? 'treasury proposal'\n\t\t\t\t\t: 'post';\n\treturn <div> Sorry, we couldn&apos;t find any {postType} with this id</div>;\n};\n\nexport default NoPostFound;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\n\nimport { usePostReactionsQuery } from '../../generated/graphql';\nimport { ReactionMapFields } from '../../types';\nimport ReactionButton from './ReactionButton';\nimport { reactions } from './reactions';\n\ninterface Props {\n\tclassName?: string\n\tpostId: number\n}\n\nconst PostReactionBar = function ({ className, postId }: Props) {\n\tconst { data, refetch } = usePostReactionsQuery({ variables: { postId } });\n\n\tconst reactionMap: { [ key: string ]: ReactionMapFields; } = {};\n\n\treactions.forEach((reaction) => {\n\t\treactionMap[reaction] = {\n\t\t\tcount: 0,\n\t\t\tuserNames: []\n\t\t};\n\t});\n\n\tdata?.post_reactions?.forEach(({ reaction, reacting_user }) => {\n\t\tif (!reactionMap[reaction]) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (reacting_user?.username && reactionMap[reaction].userNames.includes(reacting_user?.username)){\n\t\t\tconsole.error('This user has already reacted.');\n\t\t\treturn;\n\t\t}\n\n\t\tif (reacting_user?.username) {\n\t\t\treactionMap[reaction].userNames.push(reacting_user?.username);\n\t\t}\n\n\t\treactionMap[reaction].count++;\n\t});\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{Object.keys(reactionMap).map((reaction) => {\n\t\t\t\tconst {\n\t\t\t\t\tcount,\n\t\t\t\t\tuserNames\n\t\t\t\t} = reactionMap[reaction];\n\n\t\t\t\treturn (\n\t\t\t\t\t<ReactionButton\n\t\t\t\t\t\tkey={reaction}\n\t\t\t\t\t\tcount={count}\n\t\t\t\t\t\tuserNames={userNames}\n\t\t\t\t\t\treaction={reaction}\n\t\t\t\t\t\tpostId={postId}\n\t\t\t\t\t\trefetch={refetch}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default styled(PostReactionBar)`\n\tbackground-color: white;\n\tborder-style: solid;\n\tborder-width: 1px;\n\tborder-color: grey_light;\n\tmargin-bottom: 1rem;\n\tpadding: 5px;\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React, { useContext,useEffect, useState } from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nimport { NotificationContext } from '../../context/NotificationContext';\nimport { usePostSubscribeMutation, usePostUnsubscribeMutation, useSubscriptionQuery } from '../../generated/graphql';\nimport { NotificationStatus } from '../../types';\nimport Button from '../../ui-components/Button';\n\ninterface DiscussionProps {\n\tpostId: number\n}\n\nconst SubscriptionButton = function ({\n\tpostId\n}:DiscussionProps) {\n\n\tconst [subscribed, setSubscribed] = useState(false);\n\tconst [postSubscribeMutation] = usePostSubscribeMutation();\n\tconst [postUnsubscribeMutation] = usePostUnsubscribeMutation();\n\tconst { queueNotification } = useContext(NotificationContext);\n\n\tconst { data }  = useSubscriptionQuery({\n\t\tvariables: { postId }\n\t});\n\n\tuseEffect(() => {\n\t\tif (data && data.subscription && data.subscription.subscribed) {\n\t\t\tsetSubscribed(data.subscription.subscribed);\n\t\t}\n\t},[data]);\n\n\tconst handleSubscribe = () => {\n\t\tif (subscribed) {\n\t\t\tpostUnsubscribeMutation({\n\t\t\t\tvariables: {\n\t\t\t\t\tpostId\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tif (data && data.postUnsubscribe && data.postUnsubscribe.message) {\n\t\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\t\theader: 'Success!',\n\t\t\t\t\t\t\tmessage: data.postUnsubscribe.message,\n\t\t\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetSubscribed(false);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((e) => console.error('Error unsubscribing to post',e));\n\t\t} else {\n\t\t\tpostSubscribeMutation({\n\t\t\t\tvariables: {\n\t\t\t\t\tpostId\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tif (data && data.postSubscribe && data.postSubscribe.message) {\n\t\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\t\theader: 'Success!',\n\t\t\t\t\t\t\tmessage: data.postSubscribe.message,\n\t\t\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetSubscribed(true);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((e) => console.error('Error subscribing to post',e));\n\t\t}\n\n\t};\n\n\treturn (\n\t\t<Button\n\t\t\tclassName={'social' + (subscribed ? ' negative' : '')}\n\t\t\tonClick={handleSubscribe}\n\t\t>\n\t\t\t<Icon name='remove bookmark'/>{subscribed ? 'Unsubscribe' : 'Subscribe'}\n\t\t</Button>\n\t);\n};\n\nexport default SubscriptionButton;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { detect } from 'detect-browser';\n\nconst browser = detect();\n\nconst chromePolkadotExtension = 'https://chrome.google.com/webstore/detail/polkadot%7Bjs%7D-extension/mopnmbcafieddcagagdcbnhejhlodfdd?hl=en'; // TODO: add mozilla\nconst mozillaPolkadotExtension = 'https://chrome.google.com/webstore/detail/polkadot%7Bjs%7D-extension/mopnmbcafieddcagagdcbnhejhlodfdd?hl=en';\n\nexport default () => {\n\tswitch (browser && browser.name) {\n\tcase 'chrome':\n\t\treturn chromePolkadotExtension;\n\tcase 'firefox':\n\t\treturn mozillaPolkadotExtension;\n\tdefault:\n\t\t// not supported\n\t\treturn '';\n\t}\n};\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport * as React from 'react';\n\nimport getExtensionUrl from '../util/getExtensionUrl';\n\nconst ExtensionNotDetected = () =>\n\t<>\n\t\t<div className='text-muted'>Polkadot-js extension not detected.</div>\n\t\t{getExtensionUrl() ?\n\t\t\t<div className='text-muted'>\n\t\t\t\tPlease reload this page after installing <a href={getExtensionUrl()}>Polkadot-js extension</a>.\n\t\t\t</div>\n\t\t\t:\n\t\t\t<div className='text-muted'>\n\t\t\t\tPlease install <a href='https://www.mozilla.org/en-US/firefox/'>Firefox</a> or <a href='https://www.google.com/chrome/'>Chrome</a> browser to use this feature.\n\t\t\t</div>\n\t\t}\n\t</>\n;\n\nexport default ExtensionNotDetected;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { ChainPropType } from '../types';\n\nexport const network = {\n\tKUSAMA: 'kusama',\n\tPOLKADOT: 'polkadot'\n};\n\nexport const tokenSymbol = {\n\tDOT: 'DOT',\n\tKSM: 'KSM'\n};\n\nexport const chainProperties: ChainPropType = {\n\t[network.KUSAMA]: {\n\t\tss58Format: 2,\n\t\ttokenDecimals: 12,\n\t\ttokenSymbol: tokenSymbol.KSM\n\t},\n\t[network.POLKADOT]: {\n\t\tss58Format: 1,\n\t\ttokenDecimals: 18,\n\t\ttokenSymbol: tokenSymbol.DOT\n\t}\n};","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { network as networkConstants } from '../global/networkConstants';\nimport { Network } from '../types';\n/**\n * Return the current network\n *\n */\n\nexport default function (): Network {\n\tconst network = process.env.REACT_APP_NETWORK || 'kusama';\n\n\tif (!network) {\n\t\tthrow Error('Please set the REACT_APP_NETWORK environment variable');\n\t}\n\n\tconst possibleNetworks = Object.values(networkConstants);\n\n\tif (!possibleNetworks.includes(network)) {\n\t\tthrow Error(`REACT_APP_NETWORK environment variable must be one of ${possibleNetworks} `);\n\t}\n\n\treturn network;\n}\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport BN from 'bn.js';\nimport { chainProperties } from 'src/global/networkConstants';\n\nimport getNetwork from './getNetwork';\n\ninterface Options {\n\tnumberAfterComma?: number\n\twithUnit?: boolean\n\twithThousandDelimitor?: boolean\n}\n\nexport  default function (value: BN | string, options: Options): string {\n\tconst network = getNetwork();\n\tconst tokenDecimals = chainProperties[network].tokenDecimals;\n\tconst valueString = value.toString();\n\n\tlet suffix = '';\n\tlet prefix = '';\n\n\tif (valueString.length>tokenDecimals){\n\t\tsuffix = valueString.slice(-tokenDecimals);\n\t\tprefix = valueString.slice(0, valueString.length-tokenDecimals);\n\t}\n\telse {\n\t\tprefix = '0';\n\t\tsuffix = valueString.padStart(tokenDecimals-1, '0');\n\t}\n\n\tlet comma = '.';\n\tconst { numberAfterComma, withThousandDelimitor = true, withUnit } = options;\n\tconst numberAfterCommaLtZero = numberAfterComma && numberAfterComma < 0;\n\n\tif (numberAfterCommaLtZero || numberAfterComma === 0){\n\t\tcomma = '';\n\t\tsuffix = '';\n\t} else if (numberAfterComma && numberAfterComma > 0){\n\t\tsuffix = suffix.slice(0, numberAfterComma);\n\t}\n\n\tif (withThousandDelimitor){\n\t\tprefix = prefix.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n\tconst unit = withUnit ? chainProperties[network].tokenSymbol : '';\n\n\treturn `${prefix}${comma}${suffix} ${unit}`;\n}\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { useContext, useEffect,useState } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { ApiContext } from 'src/context/ApiContext';\nimport { chainProperties } from 'src/global/networkConstants';\nimport formatBnBalance from 'src/util/formatBnBalance';\nimport getNetwork from 'src/util/getNetwork';\n\ninterface Props {\n\tclassName?: string\n\tproposalId: number\n}\n\nconst ProposalVoteInfo = ({ className, proposalId }:  Props) => {\n\tconst [seconds, setSeconds] = useState(0);\n\tconst [deposit, setDeposit] = useState('');\n\tconst { api, apiReady } = useContext(ApiContext);\n\tconst currentNetwork = getNetwork();\n\n\tuseEffect(() => {\n\t\tif (!api) {\n\t\t\tconsole.error('polkadot/api not set');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!apiReady) {\n\t\t\tconsole.error('api not ready');\n\t\t\treturn;\n\t\t}\n\n\t\tlet unsubscribe: () => void;\n\n\t\tapi.derive.democracy.proposals( proposals => {\n\t\t\tproposals.forEach((proposal) => {\n\t\t\t\tif (proposal.index.toNumber() === proposalId && proposal.balance) {\n\t\t\t\t\tsetSeconds(proposal.seconds.length);\n\t\t\t\t\tsetDeposit(formatBnBalance(proposal.balance, { numberAfterComma: 2, withUnit: true }));\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\t\t\t.then(unsub => {unsubscribe = unsub;})\n\t\t\t.catch(e => console.error(e));\n\n\t\treturn () => unsubscribe && unsubscribe();\n\n\t}, [api, apiReady, proposalId]);\n\n\treturn (\n\t\t<Grid className={className} columns={3} divided>\n\t\t\t<Grid.Row>\n\t\t\t\t<Grid.Column>\n\t\t\t\t\t<h6>Deposit</h6>\n\t\t\t\t\t<div>{deposit}</div>\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column>\n\t\t\t\t\t<h6>Seconded by</h6>\n\t\t\t\t\t{seconds ? <div>{seconds} addresses</div> : null}\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column>\n\t\t\t\t\t<h6>Locked {chainProperties[currentNetwork].tokenSymbol}</h6>\n\t\t\t\t\t<div>{seconds * parseInt(deposit.split(' ')[0]) || 0}</div>\n\t\t\t\t</Grid.Column>\n\t\t\t</Grid.Row>\n\t\t</Grid>\n\t);\n};\n\nexport default styled(ProposalVoteInfo)`\n\tmargin-bottom: 1rem;\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Dimmer, Loader as SUILoader } from 'semantic-ui-react';\n\ninterface Props{\n\tclassName?: string\n\ttext?: string\n}\nconst Loader = ({ className, text = 'Loading' }: Props) => {\n\treturn (\n\t\t<Dimmer inverted active className={className}>\n\t\t\t<SUILoader inverted>{text}</SUILoader>\n\t\t</Dimmer>\n\t);\n};\n\nexport default styled(Loader)`\n    background-color: inherit!important;\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nexport default (address: string) => {\n\tif (!address || address.length < 8) {\n\t\treturn address;\n\t}\n\n\treturn `${address.substring(0, 4)}...${address.substring(address.length - 4)}`;\n};\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { DeriveAccountInfo } from '@polkadot/api-derive/types';\nimport Identicon from '@polkadot/react-identicon';\nimport styled from '@xstyled/styled-components';\nimport React, { useContext, useEffect, useState } from 'react';\n\nimport { ApiContext } from '../context/ApiContext';\nimport shortenAddress from '../util/shortenAddress';\n\ninterface Props {\n\tclassName?: string\n\taddress: string\n\taccountName?: string\n\tdisplayInline?: boolean\n}\n\nconst Address = ({ address, accountName, className, displayInline }: Props): JSX.Element => {\n\tconst { api } = useContext(ApiContext);\n\tconst [display, setDisplay] = useState<string>('');\n\n\tuseEffect(() => {\n\t\tlet unsubscribe: () => void;\n\n\t\tif (!api || !api.isReady) {\n\t\t\tconsole.error('polkadot/api not set or not ready');\n\t\t\treturn;\n\t\t}\n\n\t\tapi.derive.accounts.info(address, (info: DeriveAccountInfo) =>\n\t\t\tsetDisplay(info.identity.display || info.nickname || ''))\n\t\t\t.then(unsub => { unsubscribe = unsub; })\n\t\t\t.catch(e => console.error(e));\n\n\t\treturn () => unsubscribe && unsubscribe();\n\t}, [address, api]);\n\n\treturn (\n\t\t<div className={displayInline ? `${className} inline`: className}>\n\t\t\t<Identicon\n\t\t\t\tclassName='image identicon'\n\t\t\t\tvalue={address}\n\t\t\t\tsize={displayInline ? 16 : 32}\n\t\t\t\ttheme={'polkadot'}\n\t\t\t/>\n\t\t\t<div className='content'>\n\t\t\t\t{displayInline\n\t\t\t\t\t? display || accountName\n\t\t\t\t\t\t? <div className={'header inline'}>{display || accountName}</div>\n\t\t\t\t\t\t: <div className={'description inline'}>{shortenAddress(address)}</div>\n\n\t\t\t\t\t:\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className={'header'}>{display || accountName}</div>\n\t\t\t\t\t\t<div className={'description'}>{shortenAddress(address)}</div>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default styled(Address)`\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n\n\t.content {\n\t\tdisplay: inline-block;\n\t\tline-height: 1.6rem;\n\t}\n\n\t.identicon {\n\t\tmargin-right: 0.8rem;\n\t}\n\n\t.header {\n\t\tcolor: black_text;\n\t\tfont-weight: 500;\n\t\tfont-size: sm;\n\t\tfilter: grayscale(100%);\n\t\tmargin-right: 0.4rem;\n\t}\n\n\t.description {\n\t\tcolor: grey_primary;\n\t\tfont-size: xs;\n\t\tmargin-right: 0.4rem;\n\t}\n\n\t.inline {\n\t\tdisplay: inline-flex !important;\n\t\tfont-size: sm !important;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { InjectedAccountWithMeta } from '@polkadot/extension-inject/types';\nimport styled from '@xstyled/styled-components';\nimport React, { useState } from 'react';\nimport { Dropdown, DropdownItemProps, DropdownProps } from 'semantic-ui-react';\nimport Address from 'src/ui-components/Address';\n\ninterface Props{\n\taccounts: InjectedAccountWithMeta[]\n\tclassName?: string\n\tdefaultAddress: string\n\tfilterAccounts?: string[]\n    onAccountChange: (event: React.SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => void\n}\n\nconst AddressDropdown = ({ accounts, className, defaultAddress, filterAccounts, onAccountChange }: Props) => {\n\tconst [selectedAddress, setSelectedAddress] = useState(defaultAddress);\n\tconst filteredAccounts = !filterAccounts\n\t\t? accounts\n\t\t: accounts.filter( elem =>\n\t\t\tfilterAccounts.includes(elem.address)\n\t\t);\n\n\tlet dropdownList: {[index: string]: string} = {};\n\tlet addressOptions: DropdownItemProps[] = [];\n\n\tfilteredAccounts.forEach(account => {\n\t\taddressOptions.push({\n\t\t\tchildren: <Address\n\t\t\t\taccountName={account.meta.name}\n\t\t\t\taddress={account.address}\n\t\t\t/>,\n\t\t\tvalue: account.address\n\t\t});\n\n\t\tif (account.address && account.meta.name){\n\t\t\tdropdownList[account.address] = account.meta.name;\n\t\t}\n\n\t}\n\t);\n\n\tconst _onAccountChange = (event: React.SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => {\n\t\tsetSelectedAddress(data.value?.toString() || '');\n\t\tonAccountChange(event, data);\n\t};\n\n\treturn <Dropdown\n\t\tclassName={className}\n\t\tpointing='top'\n\t\tonChange={_onAccountChange}\n\t\toptions={addressOptions}\n\t\ttrigger={<div className='address-wrapper'>\n\t\t\t<Address\n\t\t\t\taccountName={dropdownList[selectedAddress]}\n\t\t\t\taddress={defaultAddress}\n\t\t\t/>\n\t\t</div>}\n\t\tvalue={selectedAddress}\n\t/>;\n};\n\nexport default styled(AddressDropdown)`\n\twidth: 100%;\n\tborder-color: grey_light;\n\tborder-style: solid;\n\tborder-width: 1px;\n\tpadding: 1rem .4rem .4rem 1.2rem;\n\n\t.address-wrapper {\n\t\tdisplay: inline-block;\n\t}\n\n\t.visible.menu.transition {\n\t\twidth: 100%;\n\t\tborder-radius: 0;\n\t}\n\n\t.dropdown.icon {\n\t\tposition: absolute;\n\t\tright: 0rem;\n\t\ttop: -0.5rem;\n\t\tpadding: 1.6rem 0.8rem;\n\t\tfloat: right;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Icon, Popup } from 'semantic-ui-react';\n\ninterface Props {\n\tcontent: string\n}\n\nconst popupStyle = {\n\tfontSize: '1.2rem',\n\tmarginLeft: '-1rem'\n};\n\nconst myIcon = ({ className }:{className?: string}) => <Icon className={className} name='question circle'/>;\n\nexport const StyledIcon = styled(myIcon)`\n\tcolor: grey_secondary;\n\tmargin-left: 0.2rem !important;\n`;\n\nconst HelperTooltip = ({ content }:Props) =>\n\t<Popup\n\t\ttrigger={<span><StyledIcon/></span>}\n\t\tcontent={content}\n\t\tstyle={popupStyle}\n\t\thoverable={true}\n\t/>;\n\nexport default HelperTooltip;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { InjectedAccountWithMeta } from '@polkadot/extension-inject/types';\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { DropdownProps } from 'semantic-ui-react/dist/commonjs/modules/Dropdown';\nimport { Form } from 'src/ui-components/Form';\n\nimport AddressDropdown from './AddressDropdown';\nimport HelperTooltip from './HelperTooltip';\n\ninterface Props{\n\ttitle: string\n    accounts: InjectedAccountWithMeta[]\n    address: string\n    className?: string;\n    onAccountChange: (event: React.SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => void\n}\n\nconst AccountSelectionForm = ({ title, accounts, address, className, onAccountChange }: Props) =>\n\t<Form.Field className={className} width={16}>\n\t\t<label>{title}\n\t\t\t<HelperTooltip\n\t\t\t\tcontent='You can choose an account from the polkadot-js extension.'\n\t\t\t/>\n\t\t</label>\n\t\t<AddressDropdown\n\t\t\taccounts={accounts}\n\t\t\tdefaultAddress={address || accounts[0]?.address}\n\t\t\tonAccountChange={onAccountChange}\n\t\t/>\n\t</Form.Field>;\n\nexport default styled(AccountSelectionForm)`\n\t.ui.selection.dropdown {\n\t\tborder-radius: 0rem;\n\t}\n\n\t.ui.dropdown .menu .active.item {\n\t\tfont-weight: 500;\n\t}\n\n\t.ui.dropdown .menu>.item:hover {\n\t\tbackground-color: grey_light;\n\t}\n\n\t.ui.selection.dropdown:focus, .ui.selection.active.dropdown, .ui.selection.active.dropdown:hover, .ui.selection.active.dropdown .menu {\n\t\tborder-color: grey_light;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { InjectedAccountWithMeta } from '@polkadot/extension-inject/types';\nimport styled from '@xstyled/styled-components';\nimport React, { useContext, useState } from 'react';\nimport { DropdownProps } from 'semantic-ui-react';\nimport Loader from 'src/ui-components/Loader';\n\nimport { ApiContext } from '../../../../context/ApiContext';\nimport { NotificationContext } from '../../../../context/NotificationContext';\nimport { LoadingStatusType,NotificationStatus } from '../../../../types';\nimport AccountSelectionForm from '../../../../ui-components/AccountSelectionForm';\nimport Button from '../../../../ui-components/Button';\nimport { Form } from '../../../../ui-components/Form';\n\ninterface Props {\n\taccounts: InjectedAccountWithMeta[]\n\taddress: string\n\tclassName?: string\n\tproposalId?: number | null | undefined\n\tgetAccounts: () => Promise<undefined>\n\tonAccountChange: (event: React.SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => void\n}\n\nconst SecondProposal = ({ className, proposalId, address, accounts, onAccountChange, getAccounts }: Props) => {\n\tconst [loadingStatus, setLoadingStatus] = useState<LoadingStatusType>({ isLoading: false, message:'' });\n\tconst { queueNotification } = useContext(NotificationContext);\n\tconst { api, apiReady } = useContext(ApiContext);\n\n\tconst secondProposal = async () => {\n\t\tif (!api) {\n\t\t\tconsole.error('polkadot/api not set');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!proposalId && proposalId !== 0) {\n\t\t\tconsole.error('proposalId not set');\n\t\t\treturn;\n\t\t}\n\n\t\tsetLoadingStatus({ isLoading: true, message: 'Waiting for signature' });\n\t\tconst second = api.tx.democracy.second(proposalId);\n\n\t\tsecond.signAndSend(address, ({ status }) => {\n\t\t\tif (status.isInBlock) {\n\t\t\t\tsetLoadingStatus({ isLoading: false, message: '' });\n\t\t\t\tqueueNotification({\n\t\t\t\t\theader: 'Success!',\n\t\t\t\t\tmessage: `Vote on proposal #${proposalId} successful.`,\n\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t});\n\n\t\t\t\tconsole.log(`Completed at block hash #${status.asInBlock.toString()}`);\n\t\t\t} else {\n\t\t\t\tif (status.isBroadcast) {\n\t\t\t\t\tsetLoadingStatus({ isLoading: true, message: 'Broadcasting the vote' });\n\t\t\t\t}\n\t\t\t\tconsole.log(`Current status: ${status.type}`);\n\t\t\t}\n\t\t}).catch((error) => {\n\t\t\tsetLoadingStatus({ isLoading: false, message: '' });\n\t\t\tconsole.log(':( transaction failed');\n\t\t\tconsole.error('ERROR:', error);\n\t\t\tqueueNotification({\n\t\t\t\theader: 'Failed!',\n\t\t\t\tmessage: error.message,\n\t\t\t\tstatus: NotificationStatus.ERROR\n\t\t\t});\n\t\t});\n\t};\n\n\tconst GetAccountsButton = () =>\n\t\t<Form.Field className='button-container'>\n\t\t\t<Button\n\t\t\t\tprimary\n\t\t\t\tonClick={getAccounts}\n\t\t\t>\n\t\t\t\tSecond\n\t\t\t</Button>\n\t\t</Form.Field>;\n\n\tconst noAccount = accounts.length === 0;\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{ noAccount\n\t\t\t\t? <GetAccountsButton />\n\t\t\t\t:loadingStatus.isLoading\n\t\t\t\t\t? <div className={'LoaderWrapper'}>\n\t\t\t\t\t\t<Loader text={loadingStatus.message}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t: <>\n\t\t\t\t\t\t<AccountSelectionForm\n\t\t\t\t\t\t\ttitle='Second with account'\n\t\t\t\t\t\t\taccounts={accounts}\n\t\t\t\t\t\t\taddress={address}\n\t\t\t\t\t\t\tonAccountChange={onAccountChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\tdisabled={!apiReady}\n\t\t\t\t\t\t\tonClick={secondProposal}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSecond\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</>\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default styled(SecondProposal)`\n\n\t.LoaderWrapper {\n\t\theight: 15rem;\n\t}\n\n\t.button-container {\n\t\tmargin-top: 2rem !important;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport BN from 'bn.js';\nimport React from 'react';\nimport { Progress } from 'semantic-ui-react';\nimport { chainProperties } from 'src/global/networkConstants';\nimport formatBnBalance from 'src/util/formatBnBalance';\nimport getNetwork from 'src/util/getNetwork';\n\ninterface Props {\n\tayeVotes: BN,\n\tclassName?: string,\n\tnayVotes: BN,\n\tpassingThreshold: BN,\n}\n\nconst bnToIntBalance = function (bn: BN): number{\n\treturn  Number(formatBnBalance(bn, { numberAfterComma: 2, withThousandDelimitor: false }));\n};\n\nconst bnToStringBalanceDelimitor = function (bn: BN): string{\n\treturn  formatBnBalance(bn, { numberAfterComma: 2, withThousandDelimitor: true });\n};\n\nconst VoteProgress = ({ ayeVotes, className, nayVotes, passingThreshold }: Props) => {\n\tconst network = getNetwork();\n\tconst tokenSymbol = chainProperties[network].tokenSymbol;\n\n\tconst nayVotesNumber = bnToIntBalance(nayVotes);\n\tconst passingThresholdNumber = bnToIntBalance(passingThreshold);\n\tconst isPassing = passingThreshold.lt(ayeVotes);\n\tconst ayeVotesNumber = bnToIntBalance(ayeVotes);\n\tconst totalVotesNumber = bnToIntBalance(ayeVotes.add(nayVotes));\n\tconst passingThresholdPercent = isPassing\n\t\t? passingThresholdNumber/totalVotesNumber*100\n\t\t: passingThresholdNumber/(passingThresholdNumber+nayVotesNumber)*100;\n\tconst ayePercent = ayeVotesNumber/totalVotesNumber*100;\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t<div className='voteNumbers'>Aye: {bnToStringBalanceDelimitor(ayeVotes)} {tokenSymbol}</div>\n\t\t\t<div\n\t\t\t\tclassName='voteNumbers'\n\t\t\t\tstyle={{ position: 'absolute', right: 0 }}\n\t\t\t>\n\t\t\t\tNay: {bnToStringBalanceDelimitor(nayVotes)} {tokenSymbol}\n\t\t\t</div>\n\t\t\t<Progress\n\t\t\t\tclassName={isPassing? 'passing': '' }\n\t\t\t\tpercent={ayePercent}\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tid='passingThreshold'\n\t\t\t\tstyle={{ left: passingThresholdPercent + '%', position: 'absolute' }}\n\t\t\t>\n\t\t\t\t<hr/>\n\t\t\t\tThreshold: {bnToStringBalanceDelimitor(passingThreshold)} {tokenSymbol}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default styled(VoteProgress)`\n\twidth: 100%;\n\tmargin: 1rem 0 2.4rem 0;\n\n\thr {\n\t\twidth: 0.2rem;\n\t\theight: 1.5rem;\n\t\tborder: none;\n\t\tbackground-color: grey_secondary;\n\t\tmargin: -0.2rem 0 0 0;\n\t}\n\n\t.voteNumbers {\n\t\tdisplay: inline-block;\n\t\tcolor: grey_primary;\n\t\tfont-size: s;\n\t\tmargin-bottom: -1rem;\n\t}\n\n\t#passingThreshold {\n\t\tdisplay: inline-block;\n\t\tcolor: grey_primary;\n\t\tfont-size: s;\n\t\tmargin-top: -1rem;\n\t}\n\n    .ui.progress {\n\t\theight: 1rem;\n\t\tmargin: 0.2rem 0;\n\t\tbackground-color: grey_light;\n        .bar {\n\t\t\theight: 1rem;\n\t\t}\n\t}\n\t\n\t.passing {\n\t\t.bar {\n\t\t\tbackground-color: green_primary;\n\t\t}\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { getPassingThreshold } from '@polkassembly/util';\nimport styled from '@xstyled/styled-components';\nimport BN from 'bn.js';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { ApiContext } from 'src/context/ApiContext';\nimport { VoteThreshold } from 'src/types';\nimport VoteProgress from 'src/ui-components/VoteProgress';\nimport formatBnBalance from 'src/util/formatBnBalance';\n\ninterface Props {\n\tclassName?: string\n\treferendumId: number\n\tthreshold?: VoteThreshold\n}\n\nconst ReferendumVoteInfo = ({ className, referendumId, threshold }: Props) => {\n\tconst ZERO = new BN(0);\n\tconst { api, apiReady } = useContext(ApiContext);\n\tconst [turnout, setTurnout] = useState(ZERO);\n\tconst [electorate, setElectorate] = useState(ZERO);\n\tconst [passingThreshold, setPassingThreshold] = useState(ZERO);\n\tconst [ayeVotes, setAyeVotes] = useState(ZERO);\n\tconst [nayVotes, setNayVotes] = useState(ZERO);\n\n\tuseEffect(() => {\n\t\tif (!api) {\n\t\t\tconsole.error('polkadot/api not set');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!apiReady) {\n\t\t\tconsole.error('api not ready');\n\t\t\treturn;\n\t\t}\n\n\t\tlet unsubscribe: () => void;\n\n\t\tapi.query.democracy.referendumInfoOf(referendumId, (info) => {\n\t\t\tconst _info = info.unwrapOr(null);\n\n\t\t\tif (_info?.isOngoing){\n\t\t\t\tsetAyeVotes(_info?.asOngoing.tally.ayes);\n\t\t\t\tsetNayVotes(_info?.asOngoing.tally.nays);\n\t\t\t\tsetTurnout(_info?.asOngoing.tally.turnout);\n\t\t\t}\n\t\t})\n\t\t\t.then( unsub => {unsubscribe = unsub;})\n\t\t\t.catch(console.error);\n\n\t\treturn () => unsubscribe && unsubscribe();\n\t}, [api, apiReady, referendumId]);\n\n\tuseEffect(() => {\n\t\tif (!api) {\n\t\t\tconsole.error('polkadot/api not set');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!apiReady) {\n\t\t\tconsole.error('api not ready');\n\t\t\treturn;\n\t\t}\n\n\t\tlet unsubscribe: () => void;\n\n\t\tapi.query.balances.totalIssuance((result) => {\n\t\t\tsetElectorate(result);\n\t\t})\n\t\t\t.then( unsub => {unsubscribe = unsub;})\n\t\t\t.catch(console.error);\n\n\t\treturn () => unsubscribe && unsubscribe();\n\t},[api, apiReady]);\n\n\tuseEffect(() => {\n\t\tif (!threshold){\n\t\t\tconsole.error('No threshold set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst res = getPassingThreshold(nayVotes, electorate, threshold);\n\t\tif (res.isValid && res.passingThreshold) {\n\t\t\tsetPassingThreshold(res.passingThreshold);\n\t\t}\n\t}, [electorate, nayVotes, threshold, turnout]);\n\n\treturn (\n\t\t<Grid className={className} columns={3} divided>\n\t\t\t<VoteProgress\n\t\t\t\tayeVotes={ayeVotes}\n\t\t\t\tpassingThreshold={passingThreshold}\n\t\t\t\tnayVotes={nayVotes}\n\t\t\t/>\n\t\t\t<Grid.Row>\n\t\t\t\t<Grid.Column>\n\t\t\t\t\t<h6>Turnout</h6>\n\t\t\t\t\t<div>{formatBnBalance(turnout, { numberAfterComma: 2 })}</div>\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column width={5}>\n\t\t\t\t\t<h6>Aye</h6>\n\t\t\t\t\t<div>{formatBnBalance(ayeVotes, { numberAfterComma: 2 })}</div>\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column width={5}>\n\t\t\t\t\t<h6>Nay</h6>\n\t\t\t\t\t<div>{formatBnBalance(nayVotes, { numberAfterComma: 2 })}</div>\n\t\t\t\t</Grid.Column>\n\t\t\t</Grid.Row>\n\t\t</Grid>\n\t);\n};\n\nexport default styled(ReferendumVoteInfo)`\n\tmargin-bottom: 1rem;\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport BN from 'bn.js';\nimport { chainProperties } from 'src/global/networkConstants';\n\nimport getNetwork from './getNetwork';\n\nconst BITLENGTH = 128;\nconst ZERO = new BN(0);\nconst TWO = new BN(2);\nconst TEN = new BN(10);\nconst currentNetwork = getNetwork();\nconst tokenDecimal = chainProperties[currentNetwork].tokenDecimals;\nconst tokenDecimalBN = new BN(tokenDecimal);\n\nfunction getGlobalMaxValue (): BN {\n\treturn TWO\n\t\t.pow(new BN(BITLENGTH))\n\t\t.subn(1);\n}\n\nfunction isValidNumber (bn: BN, isZeroable?: boolean): boolean {\n\tconst bnEqZero = !isZeroable && bn.eq(ZERO);\n\tif (\n\t\t// cannot be negative\n\t\tbn.lt(ZERO) ||\n        // cannot be > than allowed max\n        !bn.lt(getGlobalMaxValue()) ||\n        // check if 0 and it should be a value\n        bnEqZero ||\n        // check that the bitlengths fit\n        bn.bitLength() > BITLENGTH\n\t) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport function inputToBn (input: string, isZeroable?: boolean): [BN, boolean] {\n\tconst isDecimalValue = input.match(/^(\\d+)\\.(\\d+)$/);\n\n\tlet result;\n\n\tif (isDecimalValue) {\n\t\t// return -1 if the amount of decimal is higher than supported\n\t\tif (isDecimalValue[2].length < tokenDecimal) {\n\t\t\tresult = new BN(-1);\n\t\t}\n\n\t\t//get what is before the point and replace what isn't a number\n\t\tconst div = new BN(isDecimalValue[1]);\n\t\t//get what is after the point  and replace what isn't a number\n\t\tconst modString = isDecimalValue[2];\n\t\t// make it BN\n\t\tconst mod = new BN(modString);\n\n\t\tresult = div\n\t\t\t.mul(TEN.pow(tokenDecimalBN))\n\t\t\t.add(mod.mul(TEN.pow(new BN(tokenDecimal - modString.length))));\n\n\t} else {\n\t\tresult = new BN(input.replace(/[^\\d]/g, ''))\n\t\t\t.mul(TEN.pow(tokenDecimalBN));\n\t}\n\n\treturn [\n\t\tresult,\n\t\tisValidNumber(result, isZeroable)\n\t];\n}\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport BN from 'bn.js';\nimport React, { useState } from 'react';\n\nimport { inputToBn } from '../util/inputToBn';\nimport { Form } from './Form';\nimport HelperTooltip from './HelperTooltip';\nimport Input from './Input';\n\ninterface Props{\n\tclassName?: string\n\tlabel?: string\n\thelpText?: string\n\tonChange: (balance: BN) => void\n\tplaceholder?: string\n}\n\nconst BalanceInput = ({ className, label = '', helpText = '', onChange, placeholder = '' }: Props) => {\n\tconst [isValidInput, setIsValidInput] = useState(true);\n\tconst onBalanceChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n\t\tconst [balance, isValid] = inputToBn(event.currentTarget.value, false);\n\t\tsetIsValidInput(isValid);\n\n\t\tif(isValid){\n\t\t\tonChange(balance);\n\t\t}\n\t};\n\n\treturn <Form.Field className={className} width={16}>\n\t\t<label>\n\t\t\t{label}\n\t\t\t{helpText && <HelperTooltip content={helpText}/>}\n\t\t</label>\n\t\t<Input\n\t\t\tclassName={'balanceInput'}\n\t\t\tinvalid={isValidInput}\n\t\t\tonChange={onBalanceChange}\n\t\t\tplaceholder={placeholder}\n\t\t\ttype='string'\n\t\t/>\n\t</Form.Field>;\n};\n\nexport default styled(BalanceInput)`\n\t.ui.selection.dropdown {\n\t\tborder-color: grey_light;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport Icon from 'semantic-ui-react/dist/commonjs/elements/Icon';\n\nimport Button from './Button';\nimport { Form } from './Form';\n\ninterface Props{\n    className?: string;\n    disabled: boolean;\n    onClickAye: () => void;\n    onClickNay: () => void;\n}\n\nconst AyeNayButton = ({ className, disabled, onClickAye, onClickNay } : Props) =>\n\t<Form.Group className={className}>\n\t\t<Form.Field className={'button-container'} width={8}>\n\t\t\t<Button\n\t\t\t\tfluid\n\t\t\t\tbasic\n\t\t\t\tclassName='primary negative'\n\t\t\t\tdisabled={disabled}\n\t\t\t\tonClick={onClickNay}\n\t\t\t>\n\t\t\t\t<Icon name='thumbs down' />\n                Nay\n\t\t\t</Button>\n\t\t</Form.Field>\n\t\t<Form.Field className='button-container' width={8}>\n\t\t\t<Button\n\t\t\t\tfluid\n\t\t\t\tclassName='primary positive'\n\t\t\t\tdisabled={disabled}\n\t\t\t\tonClick={onClickAye}\n\t\t\t>\n\t\t\t\t<Icon name='thumbs up' />\n                Aye\n\t\t\t</Button>\n\t\t</Form.Field>\n\t</Form.Group>;\n\nexport default styled(AyeNayButton)`\n\t@media only screen and (max-width: 768px) {\n\t\t.button-container {\n\t\t\tmargin-bottom: 1rem !important;\n\t\t}\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { DeriveBalancesAccount } from '@polkadot/api-derive/types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport formatBnBalance from 'src/util/formatBnBalance';\n\nimport { ApiContext } from '../context/ApiContext';\n\ninterface Props {\n\taddress: string\n}\n\nconst Balance = ({ address }: Props) => {\n\tconst [balance, setBalance] = useState<string>('0');\n\tconst { api } = useContext(ApiContext);\n\n\tuseEffect(() => {\n\t\tlet unsubscribe: () => void;\n\n\t\tif (!api) {\n\t\t\tconsole.error('polkadot/api not set');\n\t\t\treturn;\n\t\t}\n\n\t\tapi.derive.balances.account(address, (info : DeriveBalancesAccount) =>\n\t\t\tsetBalance(info.freeBalance?.toString() || '0')\n\t\t)\n\t\t\t.then(unsub => { unsubscribe = unsub; })\n\t\t\t.catch(e => console.error(e));\n\n\t\treturn () => unsubscribe && unsubscribe();\n\t}, [address, api]);\n\n\treturn (\n\t\t<div className='text-muted'>\n\t\t\t{formatBnBalance(balance, { numberAfterComma: 2, withUnit: true })} available.\n\t\t</div>\n\t);\n};\n\nexport default Balance;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { InjectedAccountWithMeta } from '@polkadot/extension-inject/types';\nimport styled from '@xstyled/styled-components';\nimport BN from 'bn.js';\nimport React, { useContext, useMemo,useState } from 'react';\nimport { DropdownProps, Select } from 'semantic-ui-react';\nimport { ApiContext } from 'src/context/ApiContext';\nimport { NotificationContext } from 'src/context/NotificationContext';\nimport { LoadingStatusType,NotificationStatus } from 'src/types';\nimport BalanceInput from 'src/ui-components/BalanceInput';\nimport Button from 'src/ui-components/Button';\nimport { Form } from 'src/ui-components/Form';\nimport HelperTooltip from 'src/ui-components/HelperTooltip';\nimport Loader from 'src/ui-components/Loader';\n\nimport AccountSelectionForm from '../../../../ui-components/AccountSelectionForm';\nimport AyeNayButtons from '../../../../ui-components/AyeNayButtons';\nimport Balance from '../../../Balance';\n\ninterface Props {\n\tclassName?: string\n\treferendumId?: number | null | undefined\n\taddress: string\n\taccounts: InjectedAccountWithMeta[]\n\tonAccountChange: (event: React.SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => void\n\tgetAccounts: () => Promise<undefined>\n}\n\nconst VoteRefrendum = ({ className, referendumId, address, accounts, onAccountChange, getAccounts }: Props) => {\n\tconst { queueNotification } = useContext(NotificationContext);\n\tconst [lockedBalance, setLockedBalance] = useState<BN | undefined>(undefined);\n\tconst { api, apiReady } = useContext(ApiContext);\n\tconst [loadingStatus, setLoadingStatus] = useState<LoadingStatusType>({ isLoading: false, message: '' });\n\tconst CONVICTIONS: [number, number][] = [1, 2, 4, 8, 16, 32].map((lock, index) => [index + 1, lock]);\n\n\tconst convictionOpts = useMemo(() => [\n\t\t{ text: '0.1x voting balance, no lockup period', value: 0 },\n\t\t...CONVICTIONS.map(([value, lock]): { text: string; value: number } => ({\n\t\t\ttext: `${value}x voting balance, locked for ${lock} enactment period(s)`,\n\t\t\tvalue\n\t\t}))\n\t],[CONVICTIONS]);\n\tconst [conviction, setConviction] = useState<number>(convictionOpts[1].value);\n\n\tconst onConvictionChange = (event: React.SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => {\n\t\tsetConviction(Number(data.value));\n\t};\n\n\tconst onBalanceChange = (balance: BN) => setLockedBalance(balance);\n\tconst voteRefrendum = async (aye: boolean) => {\n\t\tif (!api) {\n\t\t\tconsole.error('polkadot/api not set');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!referendumId && referendumId !== 0) {\n\t\t\tconsole.error('referendumId not set');\n\t\t\treturn;\n\t\t}\n\n\t\tsetLoadingStatus({ isLoading: true, message: 'Waiting for signature' });\n\n\t\tconst voteTx = api.tx.democracy.vote(referendumId, { Standard: { balance: lockedBalance, vote: { aye, conviction } } });\n\n\t\tvoteTx.signAndSend(address, ({ status }) => {\n\t\t\tif (status.isInBlock) {\n\t\t\t\tsetLoadingStatus({ isLoading: false, message: '' });\n\t\t\t\tqueueNotification({\n\t\t\t\t\theader: 'Success!',\n\t\t\t\t\tmessage: `Vote on referendum #${referendumId} successful.`,\n\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t});\n\t\t\t\tconsole.log(`Completed at block hash #${status.asInBlock.toString()}`);\n\t\t\t} else {\n\t\t\t\tif (status.isBroadcast){\n\t\t\t\t\tsetLoadingStatus({ isLoading: true, message: 'Broadcasting the vote' });\n\t\t\t\t}\n\t\t\t\tconsole.log(`Current status: ${status.type}`);\n\t\t\t}\n\t\t}).catch((error) => {\n\t\t\tsetLoadingStatus({ isLoading: false, message: '' });\n\t\t\tconsole.log(':( transaction failed');\n\t\t\tconsole.error('ERROR:', error);\n\t\t\tqueueNotification({\n\t\t\t\theader: 'Failed!',\n\t\t\t\tmessage: error.message,\n\t\t\t\tstatus: NotificationStatus.ERROR\n\t\t\t});\n\t\t});\n\t};\n\n\tconst GetAccountsButton = () =>\n\t\t<Form.Field className='button-container'>\n\t\t\t<Button\n\t\t\t\tprimary\n\t\t\t\tonClick={getAccounts}\n\t\t\t>\n\t\t\t\tVote\n\t\t\t</Button>\n\t\t</Form.Field>;\n\n\tconst noAccount = accounts.length === 0;\n\n\tconst VoteLock = () =>\n\t\t<Form.Field>\n\t\t\t<label>Vote lock\n\t\t\t\t<HelperTooltip\n\t\t\t\t\tcontent='You can multiply your votes by locking your tokens for longer periods of time.'\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<Select\n\t\t\t\tonChange={onConvictionChange}\n\t\t\t\toptions={convictionOpts}\n\t\t\t\tvalue={conviction}\n\t\t\t/>\n\t\t</Form.Field>;\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{ noAccount\n\t\t\t\t? <GetAccountsButton />\n\t\t\t\t: loadingStatus.isLoading\n\t\t\t\t\t? <div className={'LoaderWrapper'}>\n\t\t\t\t\t\t<Loader text={loadingStatus.message}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t: <>\n\t\t\t\t\t\t<AccountSelectionForm\n\t\t\t\t\t\t\ttitle='Vote with account'\n\t\t\t\t\t\t\taccounts={accounts}\n\t\t\t\t\t\t\taddress={address}\n\t\t\t\t\t\t\tonAccountChange={onAccountChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{api && <Balance address={address} />}\n\t\t\t\t\t\t<BalanceInput\n\t\t\t\t\t\t\tlabel={'Lock balance'}\n\t\t\t\t\t\t\thelpText={'Amount of you are willing to lock for this vote.'}\n\t\t\t\t\t\t\tonChange={onBalanceChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<VoteLock/>\n\t\t\t\t\t\t<AyeNayButtons\n\t\t\t\t\t\t\tdisabled={!apiReady}\n\t\t\t\t\t\t\tonClickAye={() => voteRefrendum(true)}\n\t\t\t\t\t\t\tonClickNay={() => voteRefrendum(false)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default styled(VoteRefrendum)`\n\t.LoaderWrapper {\n\t\theight: 15rem;\n\t}\n\n\t.button-container {\n\t\tmargin-top: 2rem !important;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { InjectedAccountWithMeta } from '@polkadot/extension-inject/types';\nimport styled from '@xstyled/styled-components';\nimport React, { useContext, useEffect,useState } from 'react';\nimport { DropdownProps } from 'semantic-ui-react';\nimport { ApiContext } from 'src/context/ApiContext';\nimport { NotificationContext } from 'src/context/NotificationContext';\nimport { useGetCouncilMembersQuery } from 'src/generated/graphql';\nimport { LoadingStatusType,NotificationStatus } from 'src/types';\nimport AccountSelectionForm from 'src/ui-components/AccountSelectionForm';\nimport AyeNayButtons from 'src/ui-components/AyeNayButtons';\nimport Button from 'src/ui-components/Button';\nimport { Form } from 'src/ui-components/Form';\nimport Loader from 'src/ui-components/Loader';\n\ninterface Props {\n\taccounts: InjectedAccountWithMeta[]\n\taddress: string\n\tclassName?: string\n\tgetAccounts: () => Promise<undefined>\n\tmotionId?: number | null\n\tmotionProposalHash?: string\n\tonAccountChange: (event: React.SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => void\n}\n\nconst VoteMotion = ({\n\taccounts,\n\taddress,\n\tclassName,\n\tgetAccounts,\n\tmotionId,\n\tmotionProposalHash,\n\tonAccountChange\n}: Props) => {\n\tconst { queueNotification } = useContext(NotificationContext);\n\tconst [loadingStatus, setLoadingStatus] = useState<LoadingStatusType>({ isLoading: false, message:'' });\n\tconst [isCouncil, setIsCouncil] = useState(false);\n\tconst [forceVote, setForceVote] = useState(false);\n\tconst councilQueryresult = useGetCouncilMembersQuery();\n\tconst currentCouncil: string[] = [];\n\tconst { api, apiReady } = useContext(ApiContext);\n\n\tcouncilQueryresult.data?.councils?.[0]?.members?.forEach( member => {currentCouncil.push(member?.address);});\n\n\tuseEffect( () => {\n\t\t// it will iterate through all accounts\n\t\taccounts.some(account => {\n\t\t\tif (currentCouncil.includes(account.address)){\n\t\t\t\tsetIsCouncil(true);\n\t\t\t\t// this breaks the loop as soon as we find a matching address\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}, [accounts, currentCouncil]);\n\n\tconst voteMotion = async (aye: boolean) => {\n\t\tif (!api) {\n\t\t\tconsole.error('polkadot/api not set');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!motionId && motionId !== 0) {\n\t\t\tconsole.error('motionId not set');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!motionProposalHash) {\n\t\t\tconsole.error('motionProposalHash not set');\n\t\t\treturn;\n\t\t}\n\n\t\tsetLoadingStatus({ isLoading: true, message: 'Waiting for signature' });\n\t\tconst vote = api.tx.council.vote(motionProposalHash, motionId, aye);\n\n\t\tvote.signAndSend(address, ({ status }) => {\n\t\t\tif (status.isInBlock) {\n\t\t\t\tqueueNotification({\n\t\t\t\t\theader: 'Success!',\n\t\t\t\t\tmessage: `Vote on motion #${motionId} successful.`,\n\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t});\n\t\t\t\tsetLoadingStatus({ isLoading: false, message: '' });\n\t\t\t\tconsole.log(`Completed at block hash #${status.asInBlock.toString()}`);\n\t\t\t} else {\n\t\t\t\tif (status.isBroadcast){\n\t\t\t\t\tsetLoadingStatus({ isLoading: true, message: 'Broadcasting the vote' });\n\t\t\t\t}\n\t\t\t\tconsole.log(`Current status: ${status.type}`);\n\t\t\t}\n\t\t}).catch((error) => {\n\t\t\tsetLoadingStatus({ isLoading: false, message: '' });\n\t\t\tconsole.log(':( transaction failed');\n\t\t\tconsole.error('ERROR:', error);\n\t\t\tqueueNotification({\n\t\t\t\theader: 'Failed!',\n\t\t\t\tmessage: error.message,\n\t\t\t\tstatus: NotificationStatus.ERROR\n\t\t\t});\n\t\t});\n\t};\n\n\tconst GetAccountsButton = () =>\n\t\t<Form.Field className='button-container'>\n\t\t\t<div>Only council members can vote on motions.</div><br/>\n\t\t\t<Button\n\t\t\t\tprimary\n\t\t\t\tonClick={getAccounts}\n\t\t\t>\n\t\t\t\tVote\n\t\t\t</Button>\n\t\t</Form.Field>;\n\n\tconst noAccount = accounts.length === 0;\n\n\tconst VotingForm = () =>\n\t\t<>\n\t\t\t{ noAccount\n\t\t\t\t? <GetAccountsButton />\n\t\t\t\t: loadingStatus.isLoading\n\t\t\t\t\t? <div className={'LoaderWrapper'}>\n\t\t\t\t\t\t<Loader text={loadingStatus.message}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t: <>\n\t\t\t\t\t\t<AccountSelectionForm\n\t\t\t\t\t\t\ttitle='Second with account'\n\t\t\t\t\t\t\taccounts={accounts}\n\t\t\t\t\t\t\taddress={address}\n\t\t\t\t\t\t\tonAccountChange={onAccountChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<AyeNayButtons\n\t\t\t\t\t\t\tdisabled={!apiReady}\n\t\t\t\t\t\t\tonClickAye={() => voteMotion(true)}\n\t\t\t\t\t\t\tonClickNay={() => voteMotion(false)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t}\n\t\t</>;\n\n\tconst NotCouncil = () =>\n\t\t<>\n\t\t\t<div>No account found from the council :(</div>\n\t\t\t<a href='#' onClick={() => setForceVote(true)}>Let me try still.</a>\n\t\t</>;\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{isCouncil || forceVote\n\t\t\t\t? <VotingForm/>\n\t\t\t\t: <NotCouncil/>\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default styled(VoteMotion)`\n\t.LoaderWrapper {\n\t\theight: 15rem;\n\t}\n\n\t.button-container {\n\t\tmargin-top: 2rem !important;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { web3Accounts, web3Enable,web3FromSource } from '@polkadot/extension-dapp';\nimport { InjectedAccountWithMeta } from '@polkadot/extension-inject/types';\nimport styled from '@xstyled/styled-components';\nimport React, { useContext, useState } from 'react';\nimport { DropdownProps } from 'semantic-ui-react';\nimport { ApiContext } from 'src/context/ApiContext';\nimport { OnchainLinkMotionFragment, OnchainLinkProposalFragment, OnchainLinkReferendumFragment, OnchainLinkTreasuryProposalFragment } from 'src/generated/graphql';\nimport { motionStatus,proposalStatus, referendumStatus } from 'src/global/statuses';\nimport { VoteThreshold } from 'src/types';\nimport { Form } from 'src/ui-components/Form';\n\nimport ExtensionNotDetected from '../../ExtensionNotDetected';\nimport ProposalVoteInfo from './Proposals/ProposalVoteInfo';\nimport SecondProposal from './Proposals/SecondProposal';\nimport ReferendumVoteInfo from './Referenda/ReferendumVoteInfo';\nimport VoteReferendum from './Referenda/VoteReferendum';\nimport VoteMotion from './VoteMotion';\n\ninterface Props {\n\tclassName?: string\n\tisMotion?: boolean\n\tisProposal?: boolean\n\tisReferendum?: boolean\n\tisTreasuryProposal?: boolean\n\tonchainId?: number | null\n\tonchainLink?: OnchainLinkMotionFragment | OnchainLinkProposalFragment | OnchainLinkReferendumFragment | OnchainLinkTreasuryProposalFragment\n\tstatus?: string\n}\n\nconst APPNAME = process.env.REACT_APP_APPNAME || 'polkassembly';\n\nconst GovenanceSideBar = ({ className, isMotion, isProposal, isReferendum, onchainId, onchainLink, status }: Props) => {\n\tconst [address, setAddress] = useState<string>('');\n\tconst [accounts, setAccounts] = useState<InjectedAccountWithMeta[]>([]);\n\tconst [extensionNotFound, setExtensionNotFound] = useState(false);\n\tconst [accountsNotFound, setAccountsNotFound] = useState(false);\n\tconst { api } = useContext(ApiContext);\n\n\tconst canVote = !!status && !![proposalStatus.PROPOSED, referendumStatus.STARTED, motionStatus.PROPOSED].includes(status);\n\n\tconst onAccountChange = (event: React.SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => {\n\t\tconst addressValue = data.value as string;\n\t\tsetAddress(addressValue);\n\t};\n\n\tconst getAccounts = async (): Promise<undefined> => {\n\t\tconst extensions = await web3Enable(APPNAME);\n\n\t\tif (extensions.length === 0) {\n\t\t\tsetExtensionNotFound(true);\n\t\t\treturn;\n\t\t} else {\n\t\t\tsetExtensionNotFound(false);\n\t\t}\n\n\t\tconst accounts = await web3Accounts();\n\n\t\tif (accounts.length === 0) {\n\t\t\tsetAccountsNotFound(true);\n\t\t\treturn;\n\t\t} else {\n\t\t\tsetAccountsNotFound(false);\n\t\t}\n\n\t\tsetAccounts(accounts);\n\t\tif (accounts.length > 0) {\n\t\t\tsetAddress(accounts[0].address);\n\n\t\t\tconst injected = await web3FromSource(accounts[0].meta.source);\n\n\t\t\tif (!api) {\n\t\t\t\tconsole.error('polkadot/api not set');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tapi.setSigner(injected.signer);\n\t\t}\n\n\t\treturn;\n\t};\n\n\tif (extensionNotFound) {\n\t\treturn (\n\t\t\t<div className={className}>\n\t\t\t\t<div className='card'>\n\t\t\t\t\t<ExtensionNotDetected />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (accountsNotFound) {\n\t\treturn (\n\t\t\t<div className={className}>\n\t\t\t\t<div className='card'>\n\t\t\t\t\t<div className='text-muted'>You need at least one account in Polkadot-js extenstion to use this feature.</div>\n\t\t\t\t\t<div className='text-muted'>Please reload this page after adding accounts.</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ canVote\n\t\t\t\t? <div className={className}>\n\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t<Form standalone={false}>\n\t\t\t\t\t\t\t{isMotion && canVote &&\n\t\t\t\t\t\t\t<VoteMotion\n\t\t\t\t\t\t\t\taccounts={accounts}\n\t\t\t\t\t\t\t\taddress={address}\n\t\t\t\t\t\t\t\tgetAccounts={getAccounts}\n\t\t\t\t\t\t\t\tmotionId={onchainId}\n\t\t\t\t\t\t\t\tmotionProposalHash={(onchainLink as OnchainLinkMotionFragment)?.onchain_motion?.[0]?.motionProposalHash}\n\t\t\t\t\t\t\t\tonAccountChange={onAccountChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{isProposal &&\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{(onchainId || onchainId === 0) && <ProposalVoteInfo proposalId={onchainId}/>}\n\t\t\t\t\t\t\t\t\t{canVote && <SecondProposal\n\t\t\t\t\t\t\t\t\t\taccounts={accounts}\n\t\t\t\t\t\t\t\t\t\taddress={address}\n\t\t\t\t\t\t\t\t\t\tgetAccounts={getAccounts}\n\t\t\t\t\t\t\t\t\t\tonAccountChange={onAccountChange}\n\t\t\t\t\t\t\t\t\t\tproposalId={onchainId}\n\t\t\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{isReferendum &&\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{(onchainId || onchainId === 0) && <ReferendumVoteInfo\n\t\t\t\t\t\t\t\t\t\treferendumId={onchainId}\n\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\t\t\t\t\t\t\tthreshold={((onchainLink as OnchainLinkReferendumFragment).onchain_referendum[0]?.voteThreshold) as VoteThreshold}\n\t\t\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t\t\t\t{canVote && <VoteReferendum\n\t\t\t\t\t\t\t\t\t\taccounts={accounts}\n\t\t\t\t\t\t\t\t\t\taddress={address}\n\t\t\t\t\t\t\t\t\t\tgetAccounts={getAccounts}\n\t\t\t\t\t\t\t\t\t\tonAccountChange={onAccountChange}\n\t\t\t\t\t\t\t\t\t\treferendumId={onchainId}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t: null\n\t\t\t}\n\t\t</>\n\t);\n};\n\nexport default styled(GovenanceSideBar)`\n\t.card {\n\t\tbackground-color: white;\n\t\tpadding: 2rem 3rem 2rem 3rem;\n\t\tborder-style: solid;\n\t\tborder-width: 1px;\n\t\tborder-color: grey_light;\n\t\tmargin-bottom: 1rem;\n\t\t@media only screen and (max-width: 768px) {\n\t\t\tpadding: 2rem;\n\t\t}\n\t}\n\t\n\t@media only screen and (max-width: 768px) {\n\t\t.ui.form {\n\t\t\tpadding: 0rem;\n\t\t}\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport { ApolloQueryResult } from 'apollo-client';\nimport React, { useContext,useState } from 'react';\nimport { Controller,useForm } from 'react-hook-form';\nimport { GoReply } from 'react-icons/go';\n\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport {\n\tDiscussionPostAndCommentsQuery,\n\tDiscussionPostAndCommentsQueryVariables,\n\tMotionPostAndCommentsQuery,\n\tMotionPostAndCommentsQueryVariables,\n\tProposalPostAndCommentsQuery,\n\tProposalPostAndCommentsQueryVariables,\n\tReferendumPostAndCommentsQuery,\n\tReferendumPostAndCommentsQueryVariables,\n\tTreasuryProposalPostAndCommentsQuery,\n\tTreasuryProposalPostAndCommentsQueryVariables,\n\tuseAddPostCommentMutation,\n\tusePostSubscribeMutation } from '../../generated/graphql';\nimport Avatar from '../../ui-components/Avatar';\nimport Button from '../../ui-components/Button';\nimport FilteredError from '../../ui-components/FilteredError';\nimport ContentForm from '../ContentForm';\n\ninterface Props {\n\tclassName?: string\n\tpostId: number\n\trefetch: (variables?: DiscussionPostAndCommentsQueryVariables | ProposalPostAndCommentsQueryVariables | ReferendumPostAndCommentsQueryVariables | MotionPostAndCommentsQueryVariables | TreasuryProposalPostAndCommentsQueryVariables | undefined) => Promise<ApolloQueryResult<TreasuryProposalPostAndCommentsQuery>> | Promise<ApolloQueryResult<MotionPostAndCommentsQuery>> | Promise<ApolloQueryResult<ReferendumPostAndCommentsQuery>> | Promise<ApolloQueryResult<ProposalPostAndCommentsQuery>> | Promise<ApolloQueryResult<DiscussionPostAndCommentsQuery>>\n}\n\nconst PostCommentForm = ({ className, postId, refetch }: Props) => {\n\tconst { id, notification, username } = useContext(UserDetailsContext);\n\tconst [content, setContent] = useState('');\n\tconst { control, errors, handleSubmit, setValue } = useForm();\n\n\tconst onContentChange = (data: Array<string>) => {setContent(data[0]); return data[0].length ? data[0] : null;};\n\tconst [addPostCommentMutation, { error }] = useAddPostCommentMutation();\n\tconst [postSubscribeMutation] = usePostSubscribeMutation();\n\n\tif (!id) return <div>You must log in to comment.</div>;\n\n\tconst createSubscription = (postId: number) => {\n\t\tif (!notification?.postParticipated) {\n\t\t\treturn;\n\t\t}\n\n\t\tpostSubscribeMutation({\n\t\t\tvariables: {\n\t\t\t\tpostId\n\t\t\t}\n\t\t})\n\t\t\t.then(({ data }) => {\n\t\t\t\tif (data && data.postSubscribe && data.postSubscribe.message) {\n\t\t\t\t\tconsole.log(data.postSubscribe.message);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((e) => console.error('Error subscribing to post',e));\n\t};\n\n\tconst handleSave = () => {\n\t\taddPostCommentMutation( {\n\t\t\tvariables: {\n\t\t\t\tauthorId: id,\n\t\t\t\tcontent,\n\t\t\t\tpostId\n\t\t\t} }\n\t\t)\n\t\t\t.then(({ data }) => {\n\t\t\t\tif (data && data.insert_comments && data.insert_comments.affected_rows > 0) {\n\t\t\t\t\tsetContent('');\n\t\t\t\t\tsetValue('content', '');\n\t\t\t\t\trefetch();\n\t\t\t\t\tcreateSubscription(postId);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('No data returned from the saving comment query');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((e) => console.error('Error saving comment',e));\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{error && <FilteredError text={error.message}/>}\n\t\t\t<Avatar\n\t\t\t\tclassName='avatar'\n\t\t\t\tusername={username || ''}\n\t\t\t\tsize={'lg'}\n\t\t\t/>\n\n\t\t\t<div className='comment-box'>\n\t\t\t\t<Controller\n\t\t\t\t\tas={<ContentForm\n\t\t\t\t\t\theight={100}\n\t\t\t\t\t\terrorContent={errors.content}\n\t\t\t\t\t/>}\n\t\t\t\t\tname='content'\n\t\t\t\t\tcontrol={control}\n\t\t\t\t\tonChange={onContentChange}\n\t\t\t\t\trules={{ required: true }}\n\t\t\t\t/>\n\t\t\t\t<div className='button-container'>\n\t\t\t\t\t<Button primary size='small' onClick={handleSubmit(handleSave)}><GoReply className='icon'/>Reply</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default styled(PostCommentForm)`\n\tdisplay: flex;\n\tmargin: 2rem 0;\n\n\t.avatar {\n\t\tdisplay: inline-block;\n\t\tflex: 0 0 4rem;\n\t\tmargin-right: 2rem;\n\t\t@media only screen and (max-width: 576px) {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\t.comment-box {\n\t\tbackground-color: white;\n\t\tpadding: 1rem;\n\t\tborder-style: solid;\n\t\tborder-width: 1px;\n\t\tborder-color: grey_border;\n\t\tborder-radius: 3px;\n\t\twidth: 100%;\n\t}\n\n\t.button-container {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { ReactNode } from 'react';\n\ninterface Props {\n\tchildren: ReactNode\n\tclassName?: string\n}\n\nconst OnchainInfoWrapper = ({ children, className }: Props) => {\n\n\treturn (\n\t\t<div className={className}>{children}</div>\n\t);\n};\n\nexport default styled(OnchainInfoWrapper)`\n\tbackground-color: white;\n\tpadding: 2rem 3rem 2rem 3rem;\n\tborder-style: solid;\n\tborder-width: 5px;\n\tborder-color: grey_light;\n\tfont-size: sm;\n\toverflow-wrap: break-word;\n\tmargin-bottom: 1rem;\n\tfont-family: font_mono;\n\n\th6 {\n\t\tfont-family: font_mono;\n\t\tfont-size: sm;\n\t}\n\n\th4 {\n\t\tfont-size: lg;\n\t\tfont-family: font_mono;\n\t\tmargin-bottom: 2rem;\n\t}\n\n\t.methodArguments {\n\t\tdisplay: inline-block;\n\t\toverflow-x: auto;\n\t\twidth: 100%;\n\t\tword-wrap: normal;\n\t}\n\n\t.motion-sub-info{\n\t\tbackground-color: grey_light;\n\t}\n\n\t@media only screen and (max-width: 576px) {\n\t\tpadding: 2rem;\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport * as React from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport { OnchainLinkMotionFragment, OnchainLinkMotionPreimageFragment, OnchainLinkMotionTreasuryFragment } from '../../../generated/graphql';\nimport { chainProperties } from '../../../global/networkConstants';\nimport AddressComponent from '../../../ui-components/Address';\nimport OnchainInfoWrapper from '../../../ui-components/OnchainInfoWrapper';\nimport getNetwork from '../../../util/getNetwork';\n\ninterface Props{\n\tonchainLink: OnchainLinkMotionFragment\n}\n\nconst PostMotionInfo = ({ onchainLink }: Props) => {\n\tif (!onchainLink) return null;\n\n\tconst {\n\t\tonchain_motion: onchainMotion,\n\t\tproposer_address: proposerAddress\n\t} = onchainLink;\n\n\tif (! onchainMotion?.[0]) {\n\t\treturn null;\n\t}\n\n\tconst { memberCount, method, motionProposalArguments, motionProposalHash, preimage, treasurySpendProposal } = onchainMotion[0];\n\n\treturn (\n\t\t<OnchainInfoWrapper>\n\t\t\t<h4>On-Chain Info</h4>\n\t\t\t<Grid>\n\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t<h6>Proposer</h6>\n\t\t\t\t\t<AddressComponent address={proposerAddress} accountName={'Proposer Address'}/>\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t<h6>Member Count</h6>\n\t\t\t\t\t{memberCount}\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column mobile={16} tablet={16} computer={16}>\n\t\t\t\t\t<h6>Motion hash</h6>\n\t\t\t\t\t{motionProposalHash}\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Row>\n\t\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t\t<h6>Motion&apos;s Method</h6>\n\t\t\t\t\t\t{method}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t\t{motionProposalArguments && motionProposalArguments.length\n\t\t\t\t\t\t\t? <>\n\t\t\t\t\t\t\t\t<h6>Arguments</h6>\n\t\t\t\t\t\t\t\t{motionProposalArguments.map((element, index) => {\n\t\t\t\t\t\t\t\t\treturn <div className={'methodArguments'} key={index}>\n\t\t\t\t\t\t\t\t\t\t<span key={index}>{element.name}: {element.value}</span>\n\t\t\t\t\t\t\t\t\t</div>;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid.Row>\n\t\t\t\t<ProposalInfo preimage={preimage}/>\n\t\t\t\t<TreasuryInfo treasurySpendProposal={treasurySpendProposal}/>\n\t\t\t</Grid>\n\t\t</OnchainInfoWrapper>\n\t);\n};\n\nconst ProposalInfo = ({ preimage } : {preimage?: OnchainLinkMotionPreimageFragment | null}) => {\n\n\tif (!preimage) {\n\t\treturn null;\n\t}\n\n\tconst { metaDescription, method: preimageMethod, preimageArguments } = preimage;\n\n\treturn (\n\t\t<Grid.Row className='motion-sub-info'>\n\t\t\t{preimageMethod &&\n\t\t\t\t<Grid.Row>\n\t\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t\t<h6>Method</h6>\n\t\t\t\t\t\t{preimageMethod}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t\t{preimageArguments && preimageArguments.length\n\t\t\t\t\t\t\t? <>\n\t\t\t\t\t\t\t\t<h6>Arguments</h6>\n\t\t\t\t\t\t\t\t{preimageArguments.map((element, index) => {\n\t\t\t\t\t\t\t\t\treturn <div className={'methodArguments'} key={index}>\n\t\t\t\t\t\t\t\t\t\t<span key={index}>{element.name}: {element.value}</span>\n\t\t\t\t\t\t\t\t\t</div>;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid.Row>}\n\t\t\t<Grid.Column mobile={16} tablet={16} computer={16}>\n\t\t\t\t{ metaDescription &&\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h6>Description</h6>\n\t\t\t\t\t\t{metaDescription}\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</Grid.Column>\n\t\t</Grid.Row>\n\t);\n};\n\nconst TreasuryInfo = ({ treasurySpendProposal }: {treasurySpendProposal?: OnchainLinkMotionTreasuryFragment | null}) => {\n\n\tif (!treasurySpendProposal){\n\t\treturn null;\n\t}\n\n\tconst currentNetwork = getNetwork();\n\tconst { beneficiary, bond, value } = treasurySpendProposal;\n\n\treturn (\n\t\t<Grid.Row className='motion-sub-info'>\n\t\t\t{beneficiary &&\n\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t<h6>Beneficiary</h6>\n\t\t\t\t\t<AddressComponent address={beneficiary} accountName={'Beneficiary Address'} />\n\t\t\t\t</Grid.Column>}\n\t\t\t{value && currentNetwork &&\n\t\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t\t<h6>Value</h6>\n\t\t\t\t\t\t{parseInt(value) / Math.pow(10, chainProperties[currentNetwork].tokenDecimals) + ' ' + chainProperties[currentNetwork].tokenSymbol}\n\t\t\t\t\t</Grid.Column>}\n\t\t\t{bond && currentNetwork &&\n\t\t\t\t<>\n\t\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}/>\n\t\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t\t<h6>Bond</h6>\n\t\t\t\t\t\t{parseInt(bond) / Math.pow(10, chainProperties[currentNetwork].tokenDecimals) + ' ' + chainProperties[currentNetwork].tokenSymbol}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</>}\n\t\t</Grid.Row>\n\t);\n};\n\nexport default PostMotionInfo;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport * as React from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport { OnchainLinkProposalFragment } from '../../../generated/graphql';\nimport { chainProperties } from '../../../global/networkConstants';\nimport AddressComponent from '../../../ui-components/Address';\nimport OnchainInfoWrapper from '../../../ui-components/OnchainInfoWrapper';\nimport getNetwork from '../../../util/getNetwork';\n\ninterface Props{\n\tonchainLink: OnchainLinkProposalFragment\n}\n\nconst currentNetwork = getNetwork();\n\nconst PostProposalInfo = ({ onchainLink }: Props) => {\n\tif (!onchainLink) return null;\n\n\tconst {\n\t\tonchain_proposal: onchainProposal,\n\t\tproposer_address: proposerAddress\n\t} = onchainLink;\n\tconst preimage = onchainProposal?.[0]?.preimage;\n\tconst depositAmount = onchainProposal?.[0]?.depositAmount;\n\n\tconst { metaDescription, method, preimageArguments } = preimage || {};\n\n\treturn (\n\t\t<OnchainInfoWrapper>\n\t\t\t<h4>On-Chain Info</h4>\n\t\t\t<Grid>\n\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t<h6>Proposer</h6>\n\t\t\t\t\t<AddressComponent address={proposerAddress} accountName={'Proposer Address'} />\n\t\t\t\t</Grid.Column>\n\t\t\t\t{depositAmount && currentNetwork &&\n\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t<h6>Deposit</h6>\n\t\t\t\t\t{parseInt(depositAmount) / Math.pow(10, chainProperties[currentNetwork].tokenDecimals) + ' ' + chainProperties[currentNetwork].tokenSymbol}\n\t\t\t\t</Grid.Column>}\n\t\t\t\t{method &&\n\t\t\t\t<Grid.Row>\n\t\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t\t<h6>Method</h6>\n\t\t\t\t\t\t{method}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t\t{preimageArguments && preimageArguments.length\n\t\t\t\t\t\t\t? <>\n\t\t\t\t\t\t\t\t<h6>Arguments</h6>\n\t\t\t\t\t\t\t\t{preimageArguments.map((element, index) => {\n\t\t\t\t\t\t\t\t\treturn <div className={'methodArguments'} key={index}>\n\t\t\t\t\t\t\t\t\t\t<span key={index}>{element.name}: {element.value}</span>\n\t\t\t\t\t\t\t\t\t</div>;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid.Row>}\n\t\t\t\t<Grid.Column mobile={16} tablet={16} computer={16}>\n\t\t\t\t\t{ metaDescription &&\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h6>Description</h6>\n\t\t\t\t\t\t{metaDescription}\n\t\t\t\t\t</>}\n\t\t\t\t</Grid.Column>\n\t\t\t</Grid>\n\t\t</OnchainInfoWrapper>\n\t);\n};\n\nexport default PostProposalInfo;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport * as React from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport { OnchainLinkReferendumFragment } from '../../../generated/graphql';\nimport AddressComponent from '../../../ui-components/Address';\nimport OnchainInfoWrapper from '../../../ui-components/OnchainInfoWrapper';\n\ninterface Props{\n\tonchainLink: OnchainLinkReferendumFragment\n}\n\nconst PostReferendumInfo = ({ onchainLink }: Props) => {\n\tif (!onchainLink) return null;\n\n\tconst {\n\t\tonchain_referendum: onchainReferendum,\n\t\tproposer_address: proposerAddress\n\t} = onchainLink;\n\n\tif ( !onchainReferendum?.[0] ){\n\t\treturn null;\n\t}\n\n\tconst { delay, end, preimage, voteThreshold } = onchainReferendum?.[0];\n\tconst { metaDescription, method, preimageArguments } = preimage || {};\n\n\treturn (\n\t\t<OnchainInfoWrapper>\n\t\t\t<h4>On-Chain Info</h4>\n\t\t\t<Grid>\n\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t<h6>Proposer</h6>\n\t\t\t\t\t<AddressComponent address={proposerAddress} accountName={'Proposer Address'}/>\n\t\t\t\t</Grid.Column>\n\t\t\t\t{(delay || delay === 0) &&\n\t\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t\t<h6>Delay</h6>\n\t\t\t\t\t\t{delay}\n\t\t\t\t\t</Grid.Column>}\n\t\t\t\t{end &&\n\t\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t\t<h6>End</h6>\n\t\t\t\t\t\t{end}\n\t\t\t\t\t</Grid.Column>}\n\t\t\t\t{voteThreshold &&\n\t\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t\t<h6>voteThreshold</h6>\n\t\t\t\t\t\t{voteThreshold}\n\t\t\t\t\t</Grid.Column>}\n\t\t\t\t{method &&\n\t\t\t\t<Grid.Row>\n\t\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t\t<h6>Method</h6>\n\t\t\t\t\t\t{method}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t\t{preimageArguments && preimageArguments.length\n\t\t\t\t\t\t\t? <>\n\t\t\t\t\t\t\t\t<h6>Arguments</h6>\n\t\t\t\t\t\t\t\t{preimageArguments.map((element, index) => {\n\t\t\t\t\t\t\t\t\treturn <div className={'methodArguments'} key={index}>\n\t\t\t\t\t\t\t\t\t\t<span key={index}>{element.name}: {element.value}</span>\n\t\t\t\t\t\t\t\t\t</div>;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid.Row>}\n\t\t\t\t{metaDescription &&\n\t\t\t\t<Grid.Column mobile={16} tablet={16} computer={16}>\n\t\t\t\t\t<h6>Description</h6>\n\t\t\t\t\t{metaDescription}\n\t\t\t\t</Grid.Column>}\n\t\t\t</Grid>\n\t\t</OnchainInfoWrapper>\n\t);\n};\n\nexport default PostReferendumInfo;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport * as React from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport { OnchainLinkTreasuryProposalFragment } from '../../../generated/graphql';\nimport { chainProperties } from '../../../global/networkConstants';\nimport AddressComponent from '../../../ui-components/Address';\nimport OnchainInfoWrapper from '../../../ui-components/OnchainInfoWrapper';\nimport getNetwork from '../../../util/getNetwork';\n\ninterface Props{\n\tonchainLink: OnchainLinkTreasuryProposalFragment\n}\n\nconst currentNetwork = getNetwork();\n\nconst PostTreasuryInfo = ({ onchainLink }: Props) => {\n\tif (!onchainLink) return null;\n\n\tconst {\n\t\tonchain_treasury_spend_proposal: onchainTreasuryProposal,\n\t\tproposer_address: proposerAddress\n\t} = onchainLink;\n\tconst beneficiary = onchainTreasuryProposal?.[0]?.beneficiary;\n\tconst value = onchainTreasuryProposal?.[0]?.value;\n\tconst bond = onchainTreasuryProposal?.[0]?.bond;\n\n\treturn (\n\t\t<OnchainInfoWrapper>\n\t\t\t<h4>On-Chain Info</h4>\n\t\t\t<Grid>\n\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t<h6>Proposer</h6>\n\t\t\t\t\t<AddressComponent address={proposerAddress} accountName={'Proposer Address'} />\n\t\t\t\t</Grid.Column>\n\t\t\t\t{bond && currentNetwork &&\n\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t<h6>Bond</h6>\n\t\t\t\t\t{parseInt(bond) / Math.pow(10, chainProperties[currentNetwork].tokenDecimals) + ' ' + chainProperties[currentNetwork].tokenSymbol}\n\t\t\t\t</Grid.Column>}\n\t\t\t\t{beneficiary &&\n\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t<h6>Beneficiary</h6>\n\t\t\t\t\t<AddressComponent address={beneficiary} accountName={'Beneficiary Address'} />\n\t\t\t\t</Grid.Column>}\n\t\t\t\t{value && currentNetwork &&\n\t\t\t\t<Grid.Column mobile={16} tablet={8} computer={8}>\n\t\t\t\t\t<h6>Value</h6>\n\t\t\t\t\t{parseInt(value) / Math.pow(10, chainProperties[currentNetwork].tokenDecimals) + ' ' + chainProperties[currentNetwork].tokenSymbol}\n\t\t\t\t</Grid.Column>}\n\t\t\t</Grid>\n\t\t</OnchainInfoWrapper>\n\t);\n};\n\nexport default PostTreasuryInfo;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport { ApolloQueryResult } from 'apollo-client';\nimport React, { useContext, useState } from 'react';\nimport { Grid, Icon } from 'semantic-ui-react';\n\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport {\n\tDiscussionPostAndCommentsQuery,\n\tDiscussionPostAndCommentsQueryHookResult,\n\tDiscussionPostAndCommentsQueryVariables,\n\tMotionPostAndCommentsQuery,\n\tMotionPostAndCommentsQueryHookResult,\n\tMotionPostAndCommentsQueryVariables,\n\tMotionPostFragment,\n\tOnchainLinkMotionFragment,\n\tOnchainLinkProposalFragment,\n\tOnchainLinkReferendumFragment,\n\tOnchainLinkTreasuryProposalFragment,\n\tProposalPostAndCommentsQuery,\n\tProposalPostAndCommentsQueryHookResult,\n\tProposalPostAndCommentsQueryVariables,\n\tProposalPostFragment,\n\tReferendumPostAndCommentsQuery,\n\tReferendumPostAndCommentsQueryHookResult,\n\tReferendumPostAndCommentsQueryVariables,\n\tReferendumPostFragment,\n\tTreasuryProposalPostAndCommentsQuery,\n\tTreasuryProposalPostAndCommentsQueryHookResult,\n\tTreasuryProposalPostAndCommentsQueryVariables,\n\tTreasuryProposalPostFragment } from '../../generated/graphql';\nimport Button from '../../ui-components/Button';\nimport Comments from '../Comment/Comments';\nimport EditablePostContent from '../EditablePostContent';\nimport NoPostFound from '../NoPostFound';\nimport PostReactionBar from '../Reactionbar/PostReactionBar';\nimport ReportButton from '../ReportButton';\nimport SubscriptionButton from '../SubscriptionButton/SubscriptionButton';\nimport GovenanceSideBar from './GovernanceSideBar';\nimport CreatePostComment from './PostCommentForm';\nimport PostMotionInfo from './PostGovernanceInfo/PostMotionInfo';\nimport PostProposalInfo from './PostGovernanceInfo/PostProposalInfo';\nimport PostReferendumInfo from './PostGovernanceInfo/PostReferendumInfo';\nimport PostTreasuryInfo from './PostGovernanceInfo/PostTreasuryInfo';\n\ninterface Props {\n\tclassName?: string\n\tdata: (\n\t\tDiscussionPostAndCommentsQueryHookResult['data'] |\n\t\tProposalPostAndCommentsQueryHookResult['data'] |\n\t\tReferendumPostAndCommentsQueryHookResult['data'] |\n\t\tMotionPostAndCommentsQueryHookResult['data'] |\n\t\tTreasuryProposalPostAndCommentsQueryHookResult['data']\n\t)\n\tisMotion?: boolean\n\tisProposal?: boolean\n\tisReferendum?: boolean\n\tisTreasuryProposal?: boolean\n\trefetch: (variables?: ReferendumPostAndCommentsQueryVariables | DiscussionPostAndCommentsQueryVariables | ProposalPostAndCommentsQueryVariables | MotionPostAndCommentsQueryVariables | TreasuryProposalPostAndCommentsQueryVariables | undefined) => Promise<ApolloQueryResult<ReferendumPostAndCommentsQuery>> | Promise<ApolloQueryResult<ProposalPostAndCommentsQuery>> | Promise<ApolloQueryResult<MotionPostAndCommentsQuery>> | Promise<ApolloQueryResult<TreasuryProposalPostAndCommentsQuery>> | Promise<ApolloQueryResult<DiscussionPostAndCommentsQuery>>\n}\n\nconst Post = ( { className, data, isMotion = false, isProposal = false, isReferendum = false, isTreasuryProposal = false, refetch }: Props ) => {\n\tconst post =  data && data.posts && data.posts[0];\n\tconst { id, addresses } = useContext(UserDetailsContext);\n\tconst [isEditing, setIsEditing] = useState(false);\n\tconst toggleEdit = () => setIsEditing(!isEditing);\n\tconst isOnchainPost = isMotion || isProposal || isReferendum || isTreasuryProposal;\n\n\tif (!post) return <NoPostFound\n\t\tisMotion={isMotion}\n\t\tisProposal={isProposal}\n\t\tisReferendum={isReferendum}\n\t\tisTreasuryProposal={isTreasuryProposal}\n\t/>;\n\n\tlet onchainId: number | null | undefined;\n\tlet referendumPost: ReferendumPostFragment | undefined;\n\tlet proposalPost: ProposalPostFragment | undefined;\n\tlet motionPost: MotionPostFragment | undefined;\n\tlet treasuryPost: TreasuryProposalPostFragment | undefined;\n\tlet definedOnchainLink : OnchainLinkMotionFragment | OnchainLinkReferendumFragment | OnchainLinkProposalFragment | OnchainLinkTreasuryProposalFragment | undefined;\n\tlet postStatus: string | undefined;\n\n\tif (isReferendum){\n\t\treferendumPost = post as ReferendumPostFragment;\n\t\tdefinedOnchainLink = referendumPost.onchain_link as OnchainLinkReferendumFragment;\n\t\tonchainId = definedOnchainLink.onchain_referendum_id;\n\t\tpostStatus = referendumPost?.onchain_link?.onchain_referendum?.[0]?.referendumStatus?.[0].status;\n\t}\n\n\tif (isProposal) {\n\t\tproposalPost = post as ProposalPostFragment;\n\t\tdefinedOnchainLink = proposalPost.onchain_link as OnchainLinkProposalFragment;\n\t\tonchainId = definedOnchainLink.onchain_proposal_id;\n\t\tpostStatus = proposalPost?.onchain_link?.onchain_proposal?.[0]?.proposalStatus?.[0].status;\n\t}\n\n\tif (isMotion) {\n\t\tmotionPost = post as MotionPostFragment;\n\t\tdefinedOnchainLink = motionPost.onchain_link as OnchainLinkMotionFragment;\n\t\tonchainId = definedOnchainLink.onchain_motion_id;\n\t\tpostStatus = motionPost?.onchain_link?.onchain_motion?.[0]?.motionStatus?.[0].status;\n\t}\n\n\tif (isTreasuryProposal) {\n\t\ttreasuryPost = post as TreasuryProposalPostFragment;\n\t\tdefinedOnchainLink = treasuryPost.onchain_link as OnchainLinkTreasuryProposalFragment;\n\t\tonchainId = definedOnchainLink.onchain_treasury_proposal_id;\n\t\tpostStatus = treasuryPost?.onchain_link?.onchain_treasury_spend_proposal?.[0]?.treasuryStatus?.[0].status;\n\t}\n\n\tconst isProposalProposer = isProposal && proposalPost?.onchain_link?.proposer_address && addresses?.includes(proposalPost.onchain_link.proposer_address);\n\tconst isReferendumProposer = isReferendum && referendumPost?.onchain_link?.proposer_address && addresses?.includes(referendumPost.onchain_link.proposer_address);\n\tconst isMotionProposer = isMotion && motionPost?.onchain_link?.proposer_address && addresses?.includes(motionPost.onchain_link.proposer_address);\n\tconst isTreasuryProposer = isTreasuryProposal && treasuryPost?.onchain_link?.proposer_address && addresses?.includes(treasuryPost.onchain_link.proposer_address);\n\tconst canEdit = !isEditing && (\n\t\tpost.author?.id === id ||\n\t\tisProposalProposer ||\n\t\tisReferendumProposer ||\n\t\tisMotionProposer ||\n\t\tisTreasuryProposer\n\t);\n\n\treturn (\n\t\t<Grid className={className}>\n\t\t\t<Grid.Column mobile={16} tablet={16} computer={10}>\n\t\t\t\t<div className='post_content'>\n\t\t\t\t\t<EditablePostContent\n\t\t\t\t\t\tisEditing={isEditing}\n\t\t\t\t\t\tonchainId={onchainId}\n\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\tpostStatus={postStatus}\n\t\t\t\t\t\trefetch={refetch}\n\t\t\t\t\t\ttoggleEdit={toggleEdit}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='actions-bar'>\n\t\t\t\t\t\t<PostReactionBar className='reactions' postId={post.id} />\n\t\t\t\t\t\t{id && <div className='vl'/>}\n\t\t\t\t\t\t{id && !isEditing && <SubscriptionButton postId={post.id}/>}\n\t\t\t\t\t\t{canEdit && <Button className={'social'} onClick={toggleEdit}><Icon name='edit' className='icon'/>Edit</Button>}\n\t\t\t\t\t\t{id && !isEditing && !isOnchainPost && <ReportButton type='post' contentId={`${post.id}`} />}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{ isMotion &&\n\t\t\t\t\t<PostMotionInfo\n\t\t\t\t\t\tonchainLink={definedOnchainLink as OnchainLinkMotionFragment}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t{ isProposal &&\n\t\t\t\t\t<PostProposalInfo\n\t\t\t\t\t\tonchainLink={definedOnchainLink as OnchainLinkProposalFragment}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t{ isReferendum &&\n\t\t\t\t\t<PostReferendumInfo\n\t\t\t\t\t\tonchainLink={definedOnchainLink as OnchainLinkReferendumFragment}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t{ isTreasuryProposal &&\n\t\t\t\t\t<PostTreasuryInfo\n\t\t\t\t\t\tonchainLink={definedOnchainLink as OnchainLinkTreasuryProposalFragment}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t{ !!post.comments?.length &&\n\t\t\t\t\t<Comments\n\t\t\t\t\t\tcomments={post.comments}\n\t\t\t\t\t\trefetch={refetch}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t{ id && <CreatePostComment postId={post.id} refetch={refetch} /> }\n\t\t\t</Grid.Column>\n\t\t\t<Grid.Column className='democracy_card' mobile={16} tablet={16} computer={6}>\n\t\t\t\t<GovenanceSideBar\n\t\t\t\t\tisMotion={isMotion}\n\t\t\t\t\tisProposal={isProposal}\n\t\t\t\t\tisReferendum={isReferendum}\n\t\t\t\t\tisTreasuryProposal={isTreasuryProposal}\n\t\t\t\t\tonchainId={onchainId}\n\t\t\t\t\tonchainLink={definedOnchainLink}\n\t\t\t\t\tstatus={postStatus}\n\t\t\t\t/>\n\t\t\t</Grid.Column>\n\t\t</Grid>\n\t);\n};\n\nexport default styled(Post)`\n\n\t.post_content {\n\t\tbackground-color: white;\n\t\tborder-style: solid;\n\t\tborder-width: 1px;\n\t\tborder-color: grey_border;\n\t\tborder-radius: 3px;\n\t\tpadding: 3rem 3rem 0.8rem 3rem;\n\t\tmargin-bottom: 1rem;\n\t}\n\n\t.actions-bar {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t.reactions {\n\t\tdisplay: inline-flex;\n\t\tborder: none;\n\t\tpadding: 0.4rem 0;\n\t\tmargin: 0rem;\n\t}\n\n\t.vl {\n\t\tdisplay: inline-flex;\n\t\tborder-left-style: solid;\n\t\tborder-left-width: 1px;\n\t\tborder-left-color: grey_border;\n\t\theight: 2rem;\n\t\tmargin: 0 1.2rem 0 0.8rem;\n\t}\n\n\t@media only screen and (max-width: 576px) {\n\t\t.post_content {\n\t\t\tpadding: 2rem;\n\t\t\tborder-radius: 0px;\n\t\t}\n\t}\n\n\t@media only screen and (max-width: 992px) {\n\t\t.democracy_card {\n\t\t\tvisibility: hidden;\n\t\t}\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Post from '../../components/Post/Post';\nimport { useDiscussionPostAndCommentsQuery } from '../../generated/graphql';\nimport FilteredError from '../../ui-components/FilteredError';\nimport Loader from '../../ui-components/Loader';\n\nexport default () => {\n\n\tconst { id } = useParams();\n\tconst idNumber = Number(id) || 0;\n\tconst { data, error, refetch } = useDiscussionPostAndCommentsQuery({ variables: { 'id': idNumber } });\n\n\tif (error) return <FilteredError text={error.message}/>;\n\n\tif (data) return <Post data={data} refetch={refetch} />;\n\n\treturn <Loader/>;\n};","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { ReactNode, useState } from 'react';\nimport { MdClose } from 'react-icons/md';\n\ninterface Props{\n\tchildren?: ReactNode\n\tclassName?: string\n\tcontent?: string\n\tdismissable?: boolean\n\tname: string\n\ttitle: string\n}\n\nconst InfoBox = ({ children, className, content, dismissable, name, title }: Props) => {\n\tconst localStorageName = name + 'Visible';\n\tconst infoBoxVisible = localStorage.getItem(localStorageName);\n\tconst [infoVisible, setInfoVisible] = useState(infoBoxVisible === 'true');\n\n\tif (infoBoxVisible === null) {\n\t\tlocalStorage.setItem(localStorageName, 'true');\n\t\tsetInfoVisible(true);\n\t}\n\n\tconst handleClose = () => {\n\t\tlocalStorage.setItem(localStorageName, 'false');\n\t\tsetInfoVisible(false);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{infoVisible &&\n\t\t\t<div className={className}>\n\t\t\t\t<h4>{title}</h4>\n\t\t\t\t{dismissable &&\n\t\t\t\t<div className='close'>\n\t\t\t\t\t<MdClose\n\t\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\t/>\n\t\t\t\t</div>}\n\t\t\t\t{content}\n\t\t\t\t{children}\n\t\t\t</div>}\n\t\t</>\n\t);\n};\n\nexport default styled(InfoBox)`\n    background-color: grey_light;\n\tcolor: black_text;\n\tborder-style: solid;\n\tborder-width: 1px;\n\tborder-color: grey_light;\n\tpadding: 2rem 3rem;\n\tposition: relative;\n\tmargin-bottom: 2rem;\n\t\n\th4 {\n\t\tfont-family: font_mono;\n\t\tfont-size: md;\n\t\tmargin-bottom: 1.2rem;\n\t}\n\n\t.close {\n\t\tposition: absolute;\n\t\ttop: 1rem;\n\t\tright: 1rem;\n\t\tfont-size: lg;\n\t\t&:hover {\n\t\t\tcolor: grey_secondary;\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport * as React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nimport CreationLabel from '../ui-components/CreationLabel';\n\nconst DiscussionCard = styled.div`\n    padding: 2rem 3rem 1.5rem 3rem;\n    background-color: white;\n    border-style: solid;\n    border-width: 1px;\n    border-color: grey_border;\n    border-radius: 3px;\n    &:hover {\n        background-color: white_transparent;\n        border-style: solid;\n        border-width: 1px;\n        text-decoration: none;\n    }\n    h4 {\n        font-family: font_default;\n        font-size: md;\n        margin-bottom: 0.3rem; \n    }\n    ul {\n        color: grey_secondary;\n        font-size: xs;\n        font-family: font_default;\n        font-weight: 500;\n        li {\n            display: inline;\n            margin-right: 1.5rem;\n        }\n    }\n\n    @media only screen and (max-width: 576px) {\n        & {\n            padding: 1.2rem 1.5rem;       \n        }\n    }\n`;\n\nexport interface DiscussionProps {\n  created_at: Date\n  displayname?: string | null\n  comments?: string\n  title: string\n  username: string\n}\n\nexport default function Discussion ({\n\tcreated_at,\n\tdisplayname,\n\tcomments,\n\ttitle,\n\tusername\n}:DiscussionProps) {\n\n\treturn (\n\t\t<DiscussionCard>\n\t\t\t<h4>{title}</h4>\n\t\t\t<CreationLabel\n\t\t\t\tcreated_at={created_at}\n\t\t\t\tdisplayname={displayname}\n\t\t\t\tusername={username}\n\t\t\t/>\n\t\t\t<ul>\n\t\t\t\t<li><Icon name='comment' /> {comments} comments</li>\n\t\t\t</ul>\n\t\t</DiscussionCard>\n\t);\n}\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { LatestDiscussionPostsQuery } from '../../generated/graphql';\nimport DiscussionCard from '../DiscussionCard';\n\ninterface Props {\n  className?: string\n  data: LatestDiscussionPostsQuery\n}\n\nconst Discussions = ({ className, data }: Props) => {\n\tif (!data.posts || !data.posts.length) return <div>No discussion found.</div>;\n\n\treturn (\n\t\t<ul className={`${className} discussions__list`}>\n\t\t\t{!!data.posts &&\n\t\t\t\tdata.posts.map(\n\t\t\t\t\t(post) => {\n\n\t\t\t\t\t\treturn !!post?.author?.username &&\n\t\t\t\t\t\t\t<li key={post.id} className='discussions__item'>\n\t\t\t\t\t\t\t\t{<Link to={`/post/${post.id}`}>\n\t\t\t\t\t\t\t\t\t<DiscussionCard\n\t\t\t\t\t\t\t\t\t\tdisplayname={post?.author?.name}\n\t\t\t\t\t\t\t\t\t\tcomments={post.comments_aggregate.aggregate?.count\n\t\t\t\t\t\t\t\t\t\t\t? post.comments_aggregate.aggregate.count.toString()\n\t\t\t\t\t\t\t\t\t\t\t: 'no'}\n\t\t\t\t\t\t\t\t\t\tcreated_at={post.created_at}\n\t\t\t\t\t\t\t\t\t\ttitle={post.title}\n\t\t\t\t\t\t\t\t\t\tusername={post.author.username}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Link>}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t;\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t</ul>\n\t);\n};\n\nexport default styled(Discussions)`\n\tmargin-block-start: 0;\n\tmargin-block-end: 0;\n\n\tli {\n\t\tlist-style-type: none;\n\t}\n\n\t.discussions__item {\n\t\tmargin: 0 0 1rem 0;\n\t\ta:hover {\n\t\t\ttext-decoration: none;\n\t\t}\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React from 'react';\n\nimport DiscussionsListing from '../../components/Listings/DiscussionsListing';\nimport { useLatestDiscussionPostsQuery } from '../../generated/graphql';\nimport FilteredError from '../../ui-components/FilteredError';\nimport Loader from '../../ui-components/Loader';\n\nconst DiscussionsContainer = () => {\n\n\tconst { data, error } = useLatestDiscussionPostsQuery({ variables: { limit: 20 } });\n\n\tif (error) {\n\t\treturn <FilteredError text={error.message}/>;\n\t}\n\n\tif (data) return <DiscussionsListing data={data} />;\n\n\treturn <Loader/>;\n\n};\n\nexport default DiscussionsContainer;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Grid } from 'semantic-ui-react';\n\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport Button from '../../ui-components/Button';\nimport InfoBox from '../../ui-components/InfoBox';\nimport DiscussionsContainer from './Discussions';\n\nconst Discussions = ({ className } : {className?: string}) => {\n\tconst history = useHistory();\n\tconst currentUser = useContext(UserDetailsContext);\n\tconst handleCreatePost = () => {\n\t\thistory.push('/post/create');\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t<h1>Latest Discussions</h1>\n\t\t\t<Grid stackable reversed='mobile tablet'>\n\t\t\t\t<Grid.Column mobile={16} tablet={16} computer={10}>\n\t\t\t\t\t<DiscussionsContainer/>\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column mobile={16} tablet={16} computer={6}>\n\t\t\t\t\t{currentUser.id &&\n\t\t\t\t\t<div className='mainButtonContainer'>\n\t\t\t\t\t\t<Button primary className={'newPostButton'} onClick={handleCreatePost}>New Post</Button>\n\t\t\t\t\t</div>}\n\t\t\t\t\t<InfoBox\n\t\t\t\t\t\tdismissable={true}\n\t\t\t\t\t\tcontent='This is the place to discuss all things Kusama. Anyone can start a new discussion.'\n\t\t\t\t\t\tname='discussionsInfo'\n\t\t\t\t\t\ttitle='About Discussions'\n\t\t\t\t\t/>\n\t\t\t\t</Grid.Column>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n\n};\n\nexport default styled(Discussions)`\n\n\t@media only screen and (max-width: 768px) {\n\n\t\t.mainButtonContainer {\n\t\t\tmargin: 0rem;\n\t\t}\n\t}\n\n\t@media only screen and (max-width: 991px) and (min-width: 768px) {\n\t\t.ui[class*=\"tablet reversed\"].grid {\n\t\t\tflex-direction: column-reverse;\n\t\t}\n\n\t\th1 {\n\t\t\tpadding: 0 1rem;\n\t\t}\n\n\t\t.mainButtonContainer {\n\t\t\tmargin-top: 1rem!important;\n\t\t}\n\t}\n\n\t@media only screen and (max-width: 576px) {\n\t\th1 {\n\t\t\tfont-size: 2.1rem;\n\t\t\tmargin: 3rem 1.5rem 1rem 1.5rem;\n\t\t}\n\n\t\th2 {\n\t\t\tmargin-left: 1.5rem;\n\t\t}\n\n\t\t.mainButtonContainer {\n\t\t\talign-items: stretch!important;\n\t\t\tmargin: 0 1rem!important;\n\n\t\t\t.newPostButton {\n\t\t\t\tpadding: 0.8rem 1rem;\n\t\t\t\tborder-radius: 0.5rem;\n\t\t\t}\n\t\t}\n\t}\n\n\t.mainButtonContainer {\n\t\talign-items: flex-start;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\tmargin-bottom: 2rem;\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Label } from 'semantic-ui-react';\n\ninterface Props{\n\tclassName?: string,\n\ttopic: string\n}\n\nconst TopicTag = ({ className, topic }: Props) => {\n\n\treturn (\n\t\t<Label\n\t\t\tclassName={`${className} ${topic}`}\n\t\t\tcontent={topic}\n\t\t/>\n\t);\n};\n\nexport default styled(TopicTag)`\n\t&.ui.label {\n\t\tfont-size: xs;\n\t\tfont-weight: 500;\n\t\tbackground-color: grey_primary;\n\t\tcolor: grey_text;\n\t\tborder-style: solid;\n\t\tborder-width: 1px;\n\t\tborder-radius: 0.2rem;\n\t\tletter-spacing: 0.05rem;\n\t\ttext-transform: capitalize;\n\t\tpadding: 0.4rem 0.6rem;\n\n\t\t@media only screen and (max-width: 576px) {\n\t\t\tpadding: 0.2rem 0.4rem;\n\t\t}\n\t}\n\t&.Democracy {\n\t\tbackground-color: blue_primary !important;\n\t\tcolor: white;\n\t}\n\t&.Council {\n\t\tbackground-color: pink_secondary !important;\n\t\tcolor: white;\n\t}\n\t&.Treasury {\n\t\tbackground-color: pink_primary !important;\n\t\tcolor: white;\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\n\nimport Address from '../ui-components/Address';\nimport TopicTag from '../ui-components/TopicTag';\n\ninterface Props {\n\taddress?: string\n\tclassName?: string\n\ttopic: string\n}\n\nconst OnchainCreationLabel = ({ address, className, topic }:Props ) => {\n\treturn (\n\t\t<div className={className}>\n\t\t\tby\n\t\t\t<Address\n\t\t\t\taddress={address || ''}\n\t\t\t\tclassName='address'\n\t\t\t\tdisplayInline={true}\n\t\t\t/>\n\t\t\t\tfrom <TopicTag topic={topic} />\n\t\t</div>\n\t);\n};\n\nexport default styled(OnchainCreationLabel)`\n\tdisplay: inline-flex;\n\talign-items: center;\n\tfont-size: sm;\n\tcolor: black_text;\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport * as React from 'react';\nimport { Icon, Responsive, Segment } from 'semantic-ui-react';\n\nimport OnchainCreationLabel from '../ui-components/OnchainCreationLabel';\nimport StatusTag from '../ui-components/StatusTag';\n\ninterface GovernanceProps {\n\taddress?: string\n\tclassName?: string\n\tcomments?: string\n\tcreated_at?: Date\n\tmethod?: string\n\tonchainId?: number | null\n\tstatus?: string | null\n\ttitle: string\n\ttopic: string\n}\n\nconst GovernanceAction = function ({\n\taddress,\n\tclassName,\n\tcomments,\n\tmethod,\n\tonchainId,\n\tstatus,\n\ttitle,\n\ttopic\n}:GovernanceProps) {\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t<Segment.Group horizontal>\n\t\t\t\t<Segment className='onchain_id'>\n\t\t\t\t\t<h5>#{onchainId}</h5>\n\t\t\t\t</Segment>\n\t\t\t\t<Segment>\n\t\t\t\t\t<Responsive maxWidth={Responsive.onlyMobile.maxWidth}>\n\t\t\t\t\t\t<div className='title-wrapper'>\n\t\t\t\t\t\t\t<h4>{method ? method : title}</h4>\n\t\t\t\t\t\t\t{title && method && <h5>{title}</h5>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<OnchainCreationLabel\n\t\t\t\t\t\t\taddress={address}\n\t\t\t\t\t\t\ttopic={topic}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{status && <StatusTag className='statusTag' status={status}/>}\n\t\t\t\t\t</Responsive>\n\t\t\t\t\t<Responsive minWidth={Responsive.onlyTablet.minWidth}>\n\t\t\t\t\t\t<div className='title-wrapper'>\n\t\t\t\t\t\t\t<h4>{method ? method : title}</h4>\n\t\t\t\t\t\t\t<OnchainCreationLabel\n\t\t\t\t\t\t\t\taddress={address}\n\t\t\t\t\t\t\t\ttopic={topic}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{status && <StatusTag className='statusTag' status={status}/>}\n\t\t\t\t\t\t{title && method && <h5>{title}</h5>}\n\t\t\t\t\t</Responsive>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><Icon name='comment' /> {comments} comments</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</Segment>\n\t\t\t</Segment.Group>\n\t\t</div>\n\t);\n};\n\nexport default styled(GovernanceAction)`\n\tpadding: 2rem 3rem 1.5rem 3rem;\n\tbackground-color: white;\n\tborder-style: solid;\n\tborder-width: 1px;\n\tborder-color: grey_border;\n\tborder-radius: 3px;\n\t\n\t&:hover {\n\t\tbackground-color: white_transparent;\n\t\tborder-style: solid;\n\t\tborder-width: 1px;\n\t\ttext-decoration: none;\n\t}\n\toverflow-wrap: break-word;\n\n\t.ui.horizontal.segments {\n\t\tbox-shadow: none;\n\t\tborder: none;\n\t\tmargin: 0.5rem 0;\n\t\tbackground-color: rgba(0,0,0,0);\n\t}\n\t.ui.segment {\n\t\tpadding: 0;\n\t}\n\t.ui.horizontal.segments>.segment {\n\t\tborder-left: none;\n\t}\n\n\t.onchain_id {\n\t\tmin-width: 4rem!important;\n\t\tmax-width: 6rem;\n\t}\n\n\t.statusTag{\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t}\n\t\n\t.title-wrapper {\n\t\tmax-width: calc(100% - 10rem);\n\n\t\t@media only screen and (max-width: 576px) {\n\t\t\tmax-width: calc(100% - 9rem);\n\t\t}\n\t}\n\n\th4, h5 {\n\t\tfont-family: font_default;\n\t\tdisplay: block;\n\t\tmargin-bottom: 0.6rem; \n\t}\n\n\th4 {\n\t\tfont-size: lg;\n\t\tdisplay: inline-flex;\n\t\tmargin-right: 0.6rem;\n\t}\n\n\th5 {\n\t\tfont-size: md;\n\t\tline-height: 1.4;\n\t}\n\n\t.originLabel {\n\t\tdisplay: inline-flex;\n\t\tfont-size: sm;\n\t\tcolor: black_text;\n\t}\n\n\t.address, .topic {\n\t\tmargin-left: 0.6rem;\n\t}\n\n\tul {\n\t\tcolor: grey_secondary;\n\t\tfont-size: xs;\n\t\tfont-weight: 500;\n\t\tmargin-top: 0.8rem;\n\t\tli {\n\t\t\tdisplay: inline;\n\t\t\tmargin-right: 1.5rem;\n\t\t}\n\t}\n\t\n\t@media only screen and (max-width: 576px) {\n\t\t& {\n\t\t\tpadding: 1.2rem 1.5rem;       \n\t\t}\n\t\t\n\t\th4 {\n\t\t\tfont-size: md;\n\t\t}\n\n\t\th5 {\n\t\t\tfont-size: sm;\n\t\t\tline-height: 1.2;\n\t\t}\n\n\t\t.statusTag {\n\t\t\tpadding: 0.2rem 0.4rem !important;\n\t\t\tfont-size: 1rem!important;\n\t\t}\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { LatestMotionPostsQuery } from '../../generated/graphql';\nimport GovernanceCard from '../GovernanceCard';\n\ninterface Props {\n  className?: string\n  data: LatestMotionPostsQuery\n}\n\nconst Motions = ({ className, data }: Props) => {\n\n\tif (!data.posts || !data.posts.length) return <div>No motion found</div>;\n\n\treturn (\n\t\t<ul className={`${className} motions__list`}>\n\t\t\t{data.posts.map(\n\t\t\t\t(post) => {\n\t\t\t\t\tconst onchainId = post.onchain_link?.onchain_motion_id;\n\n\t\t\t\t\treturn !!post?.author?.username &&\n\t\t\t\t\t\t<li key={post.id} className='motions__item'>\n\t\t\t\t\t\t\t{<Link to={`/motion/${onchainId}`}>\n\t\t\t\t\t\t\t\t<GovernanceCard\n\t\t\t\t\t\t\t\t\taddress={post.onchain_link?.proposer_address}\n\t\t\t\t\t\t\t\t\tcomments={post.comments_aggregate.aggregate?.count\n\t\t\t\t\t\t\t\t\t\t? post.comments_aggregate.aggregate.count.toString()\n\t\t\t\t\t\t\t\t\t\t: 'no'}\n\t\t\t\t\t\t\t\t\tmethod={post.onchain_link?.onchain_motion?.[0]?.preimage?.method}\n\t\t\t\t\t\t\t\t\tonchainId={onchainId}\n\t\t\t\t\t\t\t\t\tstatus={post.onchain_link?.onchain_motion?.[0]?.motionStatus?.[0].status}\n\t\t\t\t\t\t\t\t\ttitle={post.title}\n\t\t\t\t\t\t\t\t\ttopic={post.topic.name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t)}\n\t\t</ul>\n\t);\n};\n\nexport default styled(Motions)`\n\tmargin-block-start: 0;\n\tmargin-block-end: 0;\n\t\n\tli {\n\t\tlist-style-type: none;\n\t}\n\n\t.motions__item {\n\t\tmargin: 0 0 1rem 0;\n\t\ta:hover {\n\t\t\ttext-decoration: none;\n\t\t}\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nexport const post_type = {\n\t'OFF_CHAIN': 1,\n\t'ON_CHAIN': 2\n};","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React from 'react';\n\nimport MotionsListing from '../../../components/Listings/MotionsListing';\nimport { useLatestMotionPostsQuery } from '../../../generated/graphql';\nimport { post_type } from '../../../global/post_types';\nimport FilteredError from '../../../ui-components/FilteredError';\nimport Loader from '../../../ui-components/Loader';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst MotionsContainer = ({ className }:Props) => {\n\n\tconst { data, error } = useLatestMotionPostsQuery({ variables: {\n\t\tlimit: 5,\n\t\tpostType: post_type.ON_CHAIN\n\t} });\n\n\tif (error) return <FilteredError text={error.message}/>;\n\n\tif (data) return <MotionsListing className={className} data={data}/>;\n\n\treturn <Loader/>;\n};\n\nexport default MotionsContainer;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React from 'react';\n\nimport DiscussionsListing from '../../../components/Listings/DiscussionsListing';\nimport { useLatestDiscussionPostsQuery } from '../../../generated/graphql';\nimport FilteredError from '../../../ui-components/FilteredError';\nimport Loader from '../../../ui-components/Loader';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst DiscussionContainer = ({ className }:Props) => {\n\n\tconst { data, error } = useLatestDiscussionPostsQuery({ variables: { limit: 5 } });\n\n\tif (error) return <FilteredError text={error.message}/>;\n\n\tif (data) return <DiscussionsListing className={className} data={data}/>;\n\n\treturn <Loader/>;\n};\n\nexport default DiscussionContainer;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { LatestDemocracyProposalPostsQuery } from '../../generated/graphql';\nimport GovernanceCard from '../GovernanceCard';\n\ninterface Props {\n  className?: string\n  data: LatestDemocracyProposalPostsQuery\n}\n\nconst Proposals = ({ className, data }: Props) => {\n\n\tif (!data.posts || !data.posts.length) return <div>No proposal found</div>;\n\n\treturn (\n\t\t<ul className={`${className} proposals__list`}>\n\t\t\t{data.posts.map(\n\t\t\t\t(post) => {\n\t\t\t\t\tconst onchainId = post.onchain_link?.onchain_proposal_id;\n\n\t\t\t\t\treturn !!post?.author?.username &&\n\t\t\t\t\t\t<li key={post.id} className='proposals__item'>\n\t\t\t\t\t\t\t{<Link to={`/proposal/${onchainId}`}>\n\t\t\t\t\t\t\t\t<GovernanceCard\n\t\t\t\t\t\t\t\t\taddress={post.onchain_link?.proposer_address}\n\t\t\t\t\t\t\t\t\tcomments={post.comments_aggregate.aggregate?.count\n\t\t\t\t\t\t\t\t\t\t? post.comments_aggregate.aggregate.count.toString()\n\t\t\t\t\t\t\t\t\t\t: 'no'}\n\t\t\t\t\t\t\t\t\tmethod={post.onchain_link?.onchain_proposal?.[0]?.preimage?.method}\n\t\t\t\t\t\t\t\t\tonchainId={onchainId}\n\t\t\t\t\t\t\t\t\tstatus={post.onchain_link?.onchain_proposal?.[0]?.proposalStatus?.[0].status}\n\t\t\t\t\t\t\t\t\ttitle={post.title}\n\t\t\t\t\t\t\t\t\ttopic={post.topic.name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t)}\n\t\t</ul>\n\t);\n};\n\nexport default styled(Proposals)`\n\tmargin-block-start: 0;\n\tmargin-block-end: 0;\n\t\n\tli {\n\t\tlist-style-type: none;\n\t}\n\n\t.proposals__item {\n\t\tmargin: 0 0 1rem 0;\n\t\ta:hover {\n\t\t\ttext-decoration: none;\n\t\t}\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nexport const post_topic = {\n\t'COUNCIL': 2,\n\t'DEMOCRACY': 1,\n\t'GENERAL': 5,\n\t'TECHNICAL_COMMITTEE': 3,\n\t'TREASURY': 4\n};\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React from 'react';\n\nimport ProposalsListing from '../../../components/Listings/ProposalsListing';\nimport { useLatestDemocracyProposalPostsQuery } from '../../../generated/graphql';\nimport { post_topic } from '../../../global/post_topics';\nimport { post_type } from '../../../global/post_types';\nimport FilteredError from '../../../ui-components/FilteredError';\nimport Loader from '../../../ui-components/Loader';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst ProposalContainer = ({ className }:Props) => {\n\n\tconst { data, error } = useLatestDemocracyProposalPostsQuery({ variables: {\n\t\tlimit: 2,\n\t\tpostTopic: post_topic.DEMOCRACY,\n\t\tpostType: post_type.ON_CHAIN\n\t} });\n\n\tif (error) return <FilteredError text={error.message}/>;\n\n\tif (data) return <ProposalsListing className={className} data={data}/>;\n\n\treturn <Loader/>;\n};\n\nexport default ProposalContainer;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { LatestReferendaPostsQuery } from '../../generated/graphql';\nimport GovernanceCard from '../GovernanceCard';\n\ninterface Props {\n  className?: string\n  data: LatestReferendaPostsQuery\n}\n\nconst Referenda = ({ className, data }: Props) => {\n\tif (!data.posts || !data.posts.length) return <div>No referendum found.</div>;\n\n\treturn (\n\t\t<ul className={`${className} referenda__list`}>\n\t\t\t{data.posts.map(\n\t\t\t\t(post) => {\n\t\t\t\t\tconst onchainId = post.onchain_link?.onchain_referendum_id;\n\n\t\t\t\t\treturn !!post?.author?.username &&\n\t\t\t\t\t\t<li key={post.id} className='referenda__item'>\n\t\t\t\t\t\t\t{<Link to={`/referendum/${onchainId}`}>\n\t\t\t\t\t\t\t\t<GovernanceCard\n\t\t\t\t\t\t\t\t\taddress={post.onchain_link?.proposer_address}\n\t\t\t\t\t\t\t\t\tcomments={post.comments_aggregate.aggregate?.count\n\t\t\t\t\t\t\t\t\t\t? post.comments_aggregate.aggregate.count.toString()\n\t\t\t\t\t\t\t\t\t\t: 'no'}\n\t\t\t\t\t\t\t\t\tmethod={post.onchain_link?.onchain_referendum?.[0]?.preimage?.method}\n\t\t\t\t\t\t\t\t\tonchainId={onchainId}\n\t\t\t\t\t\t\t\t\tstatus={post.onchain_link?.onchain_referendum?.[0]?.referendumStatus?.[0].status}\n\t\t\t\t\t\t\t\t\ttitle={post.title}\n\t\t\t\t\t\t\t\t\ttopic={post.topic.name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t)}\n\t\t</ul>\n\t);\n};\n\nexport default styled(Referenda)`\n\tmargin-block-start: 0;\n\tmargin-block-end: 0;\n\t\n\tli {\n\t\tlist-style-type: none;\n\t}\n\n\t.referenda__item {\n\t\tmargin: 0 0 1rem 0;\n\t\ta:hover {\n\t\t\ttext-decoration: none;\n\t\t}\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React from 'react';\n\nimport ReferendaListing from '../../../components/Listings/ReferendaListing';\nimport { useLatestReferendaPostsQuery } from '../../../generated/graphql';\nimport { post_type } from '../../../global/post_types';\nimport FilteredError from '../../../ui-components/FilteredError';\nimport Loader from '../../../ui-components/Loader';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst ReferendaContainer = ({ className }:Props) => {\n\n\tconst { data, error } = useLatestReferendaPostsQuery({ variables: {\n\t\tlimit: 2,\n\t\tpostType: post_type.ON_CHAIN\n\t} });\n\n\tif (error) return <FilteredError text={error.message}/>;\n\n\tif (data) return <ReferendaListing className={className} data={data}/>;\n\n\treturn <Loader/>;\n};\n\nexport default ReferendaContainer;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { LatestDemocracyTreasuryProposalPostsQuery } from '../../generated/graphql';\nimport GovernanceCard from '../GovernanceCard';\n\ninterface Props {\n  className?: string\n  data: LatestDemocracyTreasuryProposalPostsQuery\n}\n\nconst TreasuryProposals = ({ className, data }: Props) => {\n\n\tif (!data.posts || !data.posts.length) return <div>No treasury proposal found</div>;\n\n\treturn (\n\t\t<ul className={`${className} proposals__list`}>\n\t\t\t{data.posts.map(\n\t\t\t\t(post) => {\n\t\t\t\t\tconst onchainId = post.onchain_link?.onchain_treasury_proposal_id;\n\n\t\t\t\t\treturn !!post?.author?.username &&\n\t\t\t\t\t\t<li key={post.id} className='proposals__item'>\n\t\t\t\t\t\t\t{<Link to={`/treasury/${onchainId}`}>\n\t\t\t\t\t\t\t\t<GovernanceCard\n\t\t\t\t\t\t\t\t\taddress={post.onchain_link?.proposer_address}\n\t\t\t\t\t\t\t\t\tcomments={post.comments_aggregate.aggregate?.count\n\t\t\t\t\t\t\t\t\t\t? post.comments_aggregate.aggregate.count.toString()\n\t\t\t\t\t\t\t\t\t\t: 'no'}\n\t\t\t\t\t\t\t\t\tonchainId={onchainId}\n\t\t\t\t\t\t\t\t\tstatus={post.onchain_link?.onchain_treasury_spend_proposal?.[0]?.treasuryStatus?.[0].status}\n\t\t\t\t\t\t\t\t\ttitle={post.title}\n\t\t\t\t\t\t\t\t\ttopic={post.topic.name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t)}\n\t\t</ul>\n\t);\n};\n\nexport default styled(TreasuryProposals)`\n\tmargin-block-start: 0;\n\tmargin-block-end: 0;\n\n\tli {\n\t\tlist-style-type: none;\n\t}\n\n\t.proposals__item {\n\t\tmargin: 0 0 1rem 0;\n\t\ta:hover {\n\t\t\ttext-decoration: none;\n\t\t}\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React from 'react';\n\nimport TreasuryListing from '../../../components/Listings/TreasuryListing';\nimport { useLatestDemocracyTreasuryProposalPostsQuery } from '../../../generated/graphql';\nimport { post_topic } from '../../../global/post_topics';\nimport { post_type } from '../../../global/post_types';\nimport FilteredError from '../../../ui-components/FilteredError';\nimport Loader from '../../../ui-components/Loader';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst TreasuryContainer = ({ className }:Props) => {\n\n\tconst { data, error } = useLatestDemocracyTreasuryProposalPostsQuery({ variables: {\n\t\tlimit: 2,\n\t\tpostTopic: post_topic.TREASURY,\n\t\tpostType: post_type.ON_CHAIN\n\t} });\n\n\tif (error) return <FilteredError text={error.message}/>;\n\n\tif (data) return <TreasuryListing className={className} data={data}/>;\n\n\treturn <Loader/>;\n};\n\nexport default TreasuryContainer;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { useContext } from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport { useRouter } from '../../hooks';\nimport Button from '../../ui-components/Button';\nimport MotionsContainer from '../OnChain/Motions';\nimport DiscussionContainer from './LatestDiscussions';\nimport ProposalContainer from './LatestProposals';\nimport ReferendaContainer from './LatestReferenda';\nimport TreasuryContainer from './LatestTreasury';\n\ninterface Props {\n  className?: string\n}\n\nconst Home = ({ className }: Props) => {\n\tconst { history } = useRouter();\n\tconst currentUser = useContext(UserDetailsContext);\n\tconst handleCreatePost = () => {\n\t\thistory.push('/post/create');\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t<h1>Latest Activity</h1>\n\t\t\t<Grid stackable reversed='mobile tablet'>\n\t\t\t\t<Grid.Column mobile={16} tablet={16} computer={10}>\n\t\t\t\t\t<h3>Current Referenda</h3>\n\t\t\t\t\t<ReferendaContainer className='referendumContainer'/>\n\t\t\t\t\t<h3>Latest Proposals</h3>\n\t\t\t\t\t<ProposalContainer className='proposalContainer'/>\n\t\t\t\t\t<h3>Latest Motions</h3>\n\t\t\t\t\t<MotionsContainer className='motionContainer'/>\n\t\t\t\t\t<h3>Latest Treasury Proposals</h3>\n\t\t\t\t\t<TreasuryContainer className='treasuryContainer' />\n\t\t\t\t\t<h3>Latest Discussions</h3>\n\t\t\t\t\t<DiscussionContainer className='discussionContainer'/>\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column mobile={16} tablet={16} computer={6}>\n\t\t\t\t\t{currentUser.id && <div className='mainButtonContainer'>\n\t\t\t\t\t\t<Button primary className={'newPostButton'} onClick={handleCreatePost}>New Post</Button>\n\t\t\t\t\t</div>}\n\t\t\t\t</Grid.Column>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default styled(Home)`\n\n\t.referendumContainer, .proposalContainer, .discussionContainer, .motionContainer .treasuryContainer {\n\t\tmargin-bottom: 3rem;\n\t}\n\n\th1 {\n\t\t@media only screen and (max-width: 576px) {\n\t\t\tmargin: 3rem 1rem 1rem 1rem;\n\t\t}\n\n\t\t@media only screen and (max-width: 768px) and (min-width: 576px) {\n\t\t\tmargin-left: 1rem;\n\t\t}\n\n\t\t@media only screen and (max-width: 991px) and (min-width: 768px) {\n\t\t\tmargin-left: 1rem;\n\t\t}\n\t}\n\n\n\t@media only screen and (max-width: 768px) {\n\n\t\t.mainButtonContainer {\n\t\t\tmargin: 0rem;\n\t\t}\n\t}\n\n\t@media only screen and (max-width: 991px) and (min-width: 768px) {\n\t\t.ui[class*=\"tablet reversed\"].grid {\n\t\t\tflex-direction: column-reverse;\n\t\t}\n\n\t\t.mainButtonContainer {\n\t\t\tmargin-top: 1rem!important;\n\t\t}\n\t}\n\n\t@media only screen and (max-width: 576px) {\n\n\t\t.mainButtonContainer {\n\t\t\talign-items: stretch!important;\n\t\t\tmargin: 1rem!important;\n\n\t\t\t.newPostButton {\n\t\t\t\tpadding: 0.8rem 1rem;\n\t\t\t\tborder-radius: 0.5rem;\n\t\t\t}\n\t\t}\n\t}\n\n\tli {\n        list-style-type: none;\n    }\n\n\t.mainButtonContainer {\n\t\talign-items: flex-start;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nconst NETWORK = process.env.REACT_APP_NETWORK || 'kusama';\n\nexport default `Polkassembly privacy notice\n====================\n\nParity Technologies Limited (&quot; **Parity**&quot;, &quot; **we**&quot;, &quot; **us**&quot;) collects, uses, and handles your personal information when you use Polkassembly.\n\n## What does this notice cover?\n\nThis notice applies to Parity&#39;s online forum, Polkassembly at https://${NETWORK}.polkassembly.io (the &quot;**Forum**&quot;). This notice describes how Parity will use data collected as part of the Forum.\n\nIt also describes your data protection rights, including a right to object to some of the processing which Parity carries out. More information about your rights, and how to exercise them, is set out in the &quot;What rights do I have?&quot; section.\n\nWhat information do we collect?\n\n## We collect and process the following information:\n\n- **Information you provide to us**.\n  -_Account and account preferences information._ We collect the information you provide when registering for the Forum including your username, name, email and password, profile information, including preferences and settings, e.g. subscription to a topic or post.  Where you choose to link your on-chain identity with your Polkassembly account, we will also store your verified Kusama / Polkadot address.\n  -_Post information_; information provided in your forum comments and posts, including drafts, as well as interaction with content on the forum and between users. This may also include any direct messaging to other users;\n  -_Support_: We collect information when you interact with us, such as to provide us with feedback or, contact us for user support. This may include name, email, the date, time and reason for contacting us, transcripts of any conversations, and if you call us, your phone number and call recordings.\n  - We store your marketing preferences, including any consent you have given us.\n  -_Device and browser information:_ We collect information about the browsers and devices you use to access the Forum. Such as access logs of IP address, user-agent string, browser type, browser extension, operating system, referral URLs, device information (e.g., device IDs), pages visited, links clicked, the requested URL and the time of page visits.\n  - Please see our Cookie Policy for more information: https://www.parity.io/privacy\n\n## How do we use this information?\n\nWe process this information for the following purposes:\n\nTo fulfil a contract, or take steps linked to a contract including:\n\n- To provide the Forum, including ancillary services such as customer support.\n- To verify user on-chain identity and enable users to use the voting feature;\n- To send you service, technical and other administrative emails relating to the Forum, messages and other types of communications.\n\nAs required by Parity to conduct our business and pursue our legitimate interests, in particular:\n\n- To ensure our Forum is working as intended, such as tracking outages or troubleshooting issues that you report to us.\n- To ensure the security of the Forum.\n- To make improvements to the Forum and help us develop new services.\n- To conduct surveys and other market research to ensure our services are relevant to your needs.\n\n## Where you give us consent:\n\n- Where required by law to send you direct marketing in relation to our relevant services;\n- We place cookies and use similar technologies. See our Cookie Policy; and\n- On other occasions where we ask you for consent, we will use the data for the purpose which we explain at that time.\n\nFor purposes which are required by law:\n\n- In response to requests by government or law enforcement authorities conducting an investigation.\n\n## Withdrawing consent or otherwise objecting to direct marketing\n\nWherever we rely on your consent, you will always be able to withdraw that consent, although we may have other legal grounds for processing your data for other purposes, such as those set out above.\n\nIn some cases, we are able to send you direct marketing without your consent, where we rely on our legitimate interests. You have an absolute right to opt-out of direct marketing, or profiling we carry out for direct marketing, at any time. You can do this by following the instructions in the communication within an electronic message, or by contacting us at polkassembly@parity.io.\n\nWho will we share this data with, where and when\n\n- **Vendors and service providers**. We will share your personal data with third party service providers who support our business, who will process it on behalf of Parity for the purposes identified above. Such third parties include providers of hosting services and technical infrastructure including browser extension developers, blockchain infrastructure providers, third party account management services, customer support services, and marketing services.\n- **Third party direct communication and marketing services.** We will share your email address with third party service providers to send direct marketing emails on our behalf with your consent.\n- **Parity group companies**. We may share your information with our group of companies for the purposes of business administration, maintaining security and regulatory compliance, providing support services to end users (including IT support, where relevant), marketing and analytics.\n- **Legal reasons**. We will share personal information outside of Parity if we have a good-faith belief that access, use, preservation, or disclosure of the information is reasonably necessary to (i)  enforce applicable terms of service or other agreements, including investigation of potential violations and audits, (ii) detect, prevent, or otherwise address fraud, abuse, security risks, or technical issues, and (iii) protect against harm to the rights, property or safety of Parity, our users, or the public as required or permitted by law.\n- **Business transfers**. In the event that Parity undergoes any reorganisation, restructuring, merger, sale, or other transfer of assets your information will be disclosed to our advisers and any prospective purchaser&#39;s adviser and will be passed to any new owners of the business.\n\nIn connection with the purposes identified above, your personal data will be shared in the UK and EEA, and may be transferred outside the UK and the EEA . Where information is transferred outside the UK or EEA that is not subject to an adequacy decision by the EU Commission, data is adequately protected by EU Commission approved standard contractual clauses, an appropriate Privacy Shield certification or a vendor&#39;s Processor Binding Corporate Rules.\n\n## What rights do I have?\n\nWhere required by applicable law or regulation, you have the right to **ask us for a copy** of your personal data; to **correct** , **delete** or **restrict** (stop any active) processing of your personal data; and to **obtain the personal data you provide to us for a contract or with your consent in a structured, machine readable format** , and to ask us to **share (port) this data to another controller.** If you are a registered user of the Forum, you may also review and change your personal information on your account profile page.\n\nIn addition, you can **object to the processing** of your personal data in some circumstances (in particular, where we don&#39;t have to process the data to meet a contractual or other legal requirement, or where we are using the data for direct marketing). These **rights may be limited** , for example if fulfilling your request would reveal personal data about another person, or if you ask us to delete information which we are required by law to keep or have compelling legitimate interests in keeping. We will inform you of relevant exemptions we rely upon when responding to any request you make.\n\nTo exercise any of these rights - or get a copy of our legitimate interest balancing tests -  you can get in touch with us using the details set out below. If you have unresolved concerns, you have the **right to complain** to a data protection authority where you live, work or where you believe a breach may have occurred.\n\nFor the provision of information marked as mandatory when you register to use the Forum, if such information is not provided, then you will not be able to use the Forum. All other provision of your information is optional. If you do not provide such information, our provision of certain services to you may be detracted from.\n\n## How long will you retain my data?\n\nWe store data for as long as necessary to provide our services. This is a case-by-case determination that depends on things such as the nature of the data, why it is collected and processed, and relevant legal or operational retention needs. Some personal data you can delete whenever you like, some data is deleted automatically, and some data we retain for longer periods of time. For example:\n\n- We will keep the account information you provide to us for as long as you remain an account holder.\n- We will keep a record of the fact that you have asked us not to send you direct marketing indefinitely, so that we can respect your request in future.\n- We will keep usage information and analytics data for a reasonable length of time that allows us to provide our services and to understand how people use the Forum.\n\nSometimes business and legal requirements oblige us to retain certain information, for specific purposes, for an extended period of time. Reasons we might retain some data for longer periods of time include security, fraud prevention, financial record-keeping, complying with legal or regulatory requirements, ensuring the continuity of our services, and when there have been direct communications with Parity.\n\n## How do I get in touch with you?\n\nIf you have any questions or concerns about how we process your data, please contact us at legal@parity.io.\n\n## Who is my data controller?\n\nAny personal information provided to or gathered by Parity is controlled by Parity Technologies Limited.For more information on who is considered the specific data controller in connection with the collection of your personal information please contact us at legal@parity.io.\n\n## Changes to our privacy notice\n\nWe reserve the right to change this privacy notice from time to time to reflect changes in the law or regulation, our information practices, our services, or our operational requirements. Depending on the type of change, we may notify you by updating this page or by email. We encourage you to periodically review this page to see any changes we have made.\n\nLast updated: 19th February 2020 version 1`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nconst NETWORK = process.env.REACT_APP_NETWORK || 'kusama';\n\nexport default `Polkassembly end user agreement\n====================\n\nParity Technologies Limited is a company registered in England and Wales under company number 09760015 with its registered office at Ignition Law, Moray House 23 - 31, Great Titchfield Street, London, England, W1W 7PA (the \"**Company**\"). The Company operates Polkassembly (the \"**Forum**\") on https://${NETWORK}.polkassembly.io (the \"**Website**\").  \n\n## 1. Understanding these terms\n  1.  This end user agreement (the \"**Terms**\") describes how you may access and use the Forum and any services made available through the Forum via the Website, any mobile applications made available by the Company and any other distribution channels made available by the Company (the \"**Services**\"). By accessing the Forum, these Terms will apply to you and you agree to the Terms. You should therefore read the terms carefully before using the forum.\n  2.  When certain words and phrases are used in these Terms, they have specific meanings (these are known as \"**defined terms**\"). You can identify these defined terms because they start with capital letters (even if they are not at the start of a sentence). Where a defined term is used, it has the meaning given to it in the section of these Terms where it was defined (you can find these meanings by looking at the sentence where the defined term is included in brackets and speech marks).\n  3.  In this document, when we refer to \"we\", \"us\" or \"our\", we mean the Company; and when we refer to \"you\" or \"your\" we mean the person accessing or using the person accessing or using the Forum.\n  4.  Please note that:\n    1.  your use of the Website is governed by our website terms of use (available https://${NETWORK}.polkassembly.io/terms-and-conditions), in the case of any inconsistency between any provisions of those website terms of use and any of the clauses of this end user agreement, the clauses of this end user agreement shall prevail;\n    2.  the Website uses cookies, the use of which are governed by our cookies policy (available https://www.parity.io/privacy);\n    3.  we only use your personal information in accordance with our privacy notice (available https://${NETWORK}.polkassembly.io/privacy).\n\n## 2.  The Forum\n\n  1.  The Forum is made available free of charge. We do not guarantee that the Forum, or any content on it, will always be available or be uninterrupted. Access to the Forum is permitted on a temporary basis. We may suspend, withdraw, discontinue or change all or any part of the Forum without notice. We will not be liable to you if for any reason the Forum is unavailable at any time or for any period. We may update the Forum and/or change the content on it at any time.\n  2.  You are responsible for making all arrangements necessary for you to have access to the Forum. You are also responsible for ensuring that all persons who access the Forum through your internet connection are aware of these Terms and that they comply with them.\n  3.  The Forum and the content on it are provided for general information purposes only. They are not intended to amount to advice on which you should rely.\n\n## 3.  Your account and password\n  1.  You will need to register an account with us on the Website in order to use the Services and gain access to the Forum (\"**Account**\"). You can register via our official website (at https://${NETWORK}.polkassembly.io/signup). In order to register for an Account, you must be aged 18 or over. If you register an Account, you will be asked to provide certain information (such as your user name) and to create a password, as part of our security procedures. You must treat such password as confidential and you must not disclose it to any third party.\n  2.  We have the right to disable any Accounts and/or passwords, at any time, if in our reasonable opinion you have failed to comply with any of the provisions of these Terms.\n  3.  If you know or suspect that anyone other than you knows your Account login details, you must immediately notify us at polkassembly@parity.io.\n  4.  You are responsible for any unauthorised use of your Account login details.\n  5.  If you are accepting these Terms on behalf of another legal entity, including a business or government, you represent that you have full legal authority to bind such entity to these Terms.\n\n## 4.  Acceptable use\n\n*General*\n\n1.  You agree:\n  1.  not to use the Forum in any unlawful manner, for any unlawful purpose or in any manner inconsistent with these Terms;\n  2.  not to infringe our intellectual property rights or those of any third party in relation to your use of the Forum (to the extent that such use if not licensed under these Terms);\n  3.  not to transmit any material that is defamatory, offensive or otherwise objectionable in relation to your use of the Forum;\n  4.  not to use the Forum by automated means or otherwise for the purposes of scraping, extracting or otherwise obtaining any material from the Forum for use within a third party website or application;\n  5.  not to collect or harvest any information or data from our systems or attempt to decipher any transmission to or from the servers running the Website ;\n  6.  not to copy, or otherwise reproduce or re-sell any part of the Forum unless expressly permitted to do so in these Terms;\n  7.  not to access, query or search the Forum with any automated system, other than through our published interfaces and pursuant to their applicable terms; and\n  8.  not to create multiple accounts to evade punishment or avoid restrictions.\n\n*User Generated Content*\n\n1.  If it is the case that you supply/upload any content to the Forum – whether it be pictures, text, sound recordings or whatever – the content you supply (\"**User Generated Content**\") must comply with the following rules:\n\n  1.  it must not be obscene, abusive, offensive or racist and it must not promote or propose hatred or physical harm against anyone;\n  2.  it must not harass, bully, insult or intimidate another person;\n  3.  it must be true and honest so far as you know;\n  4.  it must not constitute pornography or be sexual or sexually suggestive involving minors;\n  5.  it must not be defamatory of anyone;\n  6.  it must not use the material or content or infringe the rights or privacy of anyone else; for example you should not use images of well-known characters, footage or music (unless it is your own);\n  7.  it must not contain someone else’s personal details or confidential information relating to other people;\n  8.  it must not promote discrimination, whether based on race, sex, religion, nationality, disability, sexual orientation or age\n  9.  it must not promote or condone terrorism, violence or illegal behaviour;\n  10. it must not be harmful to minors in any way;\n  11. it must not promote any illegal activity or otherwise be unlawful;\n  12. it must not impersonate any person, or misrepresent your identity or affiliation with any person; and\n  13. it must not give the impression that it emanates from or is endorsed by Parity, if this is not the case.\n\n2.  We reserve the right to refuse to accept or refuse or cease to use any User Generated Content supplied by any person that we think contravenes these Terms or otherwise may create liability for us.\n3.  We take no responsibility for, and we do not expressly or implicitly endorse, any User Generated Content. By submitting your User Generated Content, you represent and warrant that you have all rights, power and authority necessary to grant the rights to such User Generated Content as set out in these Terms. As you alone are responsible for your User Generated Content, you may expose yourself to liability if you post or share User Generated Content without all necessary rights.\n4.  We do not oversee, monitor or moderate any User Generated Content which is uploaded to the Forum. If you become aware of any User Generated Content that breaches clause 4.2 above, please use the report button or contact us on polkassembly@parity.io, providing details of: (i) the date on which it was posted and where it can be found on the Forum; (ii) the name and surname of the author or, if the author is a legal person, the author's business name; (iii) reasons why the content should be deleted; and (vi) copies of any communication with the author (if any).\n\n*Viruses*\n\n1.  We do not guarantee that the Website will be totally secure or free from bugs or viruses. You are responsible for configuring your information technology, computer programmes and platform in order to access the Website and we recommend that you use your own virus protection software.\n2.  You must not misuse the Website by knowingly introducing viruses, trojans, worms, logic bombs or other material which is malicious or technologically harmful. You must not attempt to gain unauthorised access to the Website, the server on which the Website is stored or any server, computer or database connected to the Website. You must not attack the Website via a denial-of-service attack or a distributed denial-of service attack. By breaching this provision, you would commit criminal offences. We will report any such breach to the relevant law enforcement authorities and we will cooperate with those authorities by disclosing your identity to them. In the event of such a breach, your right to use the Website will cease immediately.\n\n\n\n## 5.  Intellectual property\n  1.  We grant to you a non-transferable, non-exclusive, revocable licence to use the Forum provided that you comply with these Terms and the documents referred to in it. We reserve all other rights.\n  2.  We are the owner or licensee of all intellectual property rights in the Forum and its content (other than the User Generated Content), including the Parity name and mark. Those works are protected by intellectual property laws and treaties around the world. All such rights are reserved.\n  3.  You are not granted any right to use, and may not use, any of our intellectual property rights other than as set out in these Terms. You must not commercially exploit the Forum (or any part of it or its content); however, you may download material from the Forum solely for internal, non-commercial, personal use by you.\n  4.  Save as required by applicable law, you shall not copy, reproduce, republish, upload, re-post, modify, transmit, distribute or otherwise use in any way for any non-personal, public or commercial purpose any part of the Forum including (without limitation) the text, designs, graphics, photographs, images and User Generated Content of other users without our prior written consent and (in the case of User Generated Content of a different user) the prior written consent of that user.\n  5.  You retain all ownership rights you have in the User Generated Content, but you hereby grant to us a perpetual, transferable, royalty-free license, irrevocable, worldwide, sub-licensable license to use, copy, modify, adapt, prepare derivative works from, distribute, perform and display your User Generated Content and any name, username, voice or likeness provided in connection with your User Generated Content in all media formats and channels now known or later developed. This license includes the right for us to make your User Generated Content available for syndication, broadcast, distribution or publication by other companies, organisations or individuals who partner with us. You also agree that we may remove metadata associated with your User Generated Content, and you irrevocable waive any claims and assertions of moral rights or attribution with respect to your User Generated Content.\n\n## 6.  Our liability\n\n  1.  Nothing in these Terms excludes or limits our liability for:\n      1.  death or personal injury caused by our negligence;\n      2.  fraud or fraudulent misrepresentation; and\n      3.  any matter in respect of which it would be unlawful for us to exclude or restrict our liability.\n\n  2.  We assume no responsibility for the content of websites, web applications or mobile applications linked to from the Forum (including links to any third party browser extensions providing voting functionality or notification facilities or links to our commercial sponsors and partners). Such links should not be interpreted as endorsement by us of those linked websites or mobile applications. We will not be liable for any loss or damage that may arise from your use of them.\n  3.  We make no representations about the reliability, availability, timeliness or accuracy of the content included on the Forum.\n\n**If you are a business**\n\n1.  If you are acting for purposes relating to your trade, business, craft or profession, then subject to clause 6.1:\n  1.  you agree to use the Forum for internal purposes only and in no event shall we be liable to you for any loss of profits, loss of revenue, loss of contracts, failure to realise anticipated savings or for any indirect or consequential loss, whether arising from negligence, breach of contract or otherwise; and\n  2.  our total liability to you for any loss or damage arising out of or in connection with these Terms, whether in contract (including under any indemnity), tort (including negligence) or otherwise shall be limited to £100.\n\n2.  You shall indemnify and hold us harmless against any losses, costs, liabilities and expenses suffered or incurred by us and/or our affiliates as a result of any breach of these Terms.\n\n**If you are a consumer**\n\n1.  If you are acting for purposes that are wholly or mainly outside your trade, business, craft or profession then, save as set out in clause 6.1, the following sub-clauses apply.\n  1.  If we fail to comply with these Terms, we are responsible for loss or damage you suffer that is a foreseeable result of our breach of these Terms or our negligence, but we are not responsible for any loss or damage that is not foreseeable. Loss or damage is foreseeable if it was an obvious consequence of our breach or if it was contemplated by you and us at the time that you accessed the Forum.\n  2.  Our total liability to you for any loss or damage arising out of or in connection with these Terms, whether in contract (including under any indemnity), tort (including negligence) or otherwise shall be limited to £100.\n  3.  Nothing in these Terms affects your statutory rights. Advice about your statutory rights is available from your local Citizens' Advice Bureau or Trading Standards Office.\n  4.  You agree not to use the Forum, or any content on the Forum, for any commercial or business purposes and we have no liability to you for any loss of profit, loss of business, business interruption, or loss of business opportunity.\n\n\n\n## 7.  Suspension and termination\n\n  1.  Either you or we may terminate these Terms (and your access to Forum) at any time for any reason.\n  2.  If you breach any of the terms of these Terms, we may immediately do any or all of the following (without limitation):\n      1.  issue a warning to you;\n      2.  temporarily or permanently remove any User Generated Content uploaded by you to the Forum;\n      3.  temporarily or permanently withdraw your right to use the Forum;\n      4.  suspend or terminate your Account;\n      5.  issue legal proceedings against you for reimbursement of all costs resulting from the breach (including, but not limited to, reasonable administrative and legal costs);\n      6.  take further legal action against you; and/or\n      7.  disclose such information to law enforcement authorities as we reasonably feel is necessary to do so.\n\n  3.  If we withdraw your right to use the Forum, then:\n      1.  all rights granted to you under these Terms shall cease; and\n      2.  you must immediately cease all activities authorised by these Terms, including your use of any services provided through the Forum.\n\n## 8.  Changes to these Terms\n\n  1.  We may make changes to these terms from time to time (if, for example, there is a change in the law that means we need to change these Terms). We will give you at least thirty days' advance notice of such changes. If you do not wish to continue using the Forum following the changes, you can cancel your agreement to these Terms by cancelling your Account. Your continued use of the Forum following the prior notification of the amended terms will be understood as your acceptance of the new terms.\n\n## 9.  Other important information\n  1.  Each of the clauses of these Terms operates separately. If any court or relevant authority decides that any of them are unlawful or unenforceable, the remaining clauses will remain in full force and effect.\n  2.  If we fail to insist that you perform any of your obligations under these Terms, or if we do not enforce our rights against you, or if we delay in doing so, that will not mean that we have waived our rights against you and will not mean that you do not have to comply with those obligations. If we do waive a default by you, we will only do so in writing, and that will not mean that we will automatically waive any later default by you.\n  3.  If you wish to have more information on online dispute resolution, please follow this link to the website of the European Commission: [http://ec.europa.eu/consumers/odr/]. This link is provided as required by Regulation (EU) No 524/2013 of the European Parliament and of the Council, for information purposes only. We are not obliged to participate in online dispute resolution.\n\n## 10.  Governing law and jurisdiction\n\n**If you are a business**\n\n1.  These Terms are governed by English law. This means that your access to and use of the Forum, and any dispute or claim arising out of or in connection therewith will be governed by English law.\n2.  The courts of England and Wales will have non-exclusive jurisdiction over any disputes between us and you (including non-contractual disputes or claims).\n\n**If you are a consumer**\n\n1.  These Terms are governed by the laws of England and Wales. This means that your access to and use of the Forum, and any dispute or claim arising out or in connection therewith (including non-contractual disputes or claims), will be governed by English law.\n2.  You may bring any dispute which may arise under these Terms to – at your discretion - either the competent court of England, or to the competent court of your country of habitual residence if this country of habitual residence is an EU Member State, which courts are – with the exclusion of any other court - competent to settle any of such a dispute. We shall bring any dispute which may arise under these Terms to the competent court of your country of habitual residence if this is in an EU Member State, or otherwise the competent court of England.\n3.  As a consumer, if you are resident in the European Union and we direct the Forum to (and/or pursue our commercial or professional activities in relation to the Forum in) the EU Member State in which you are resident, you will benefit from any mandatory provisions of the law of the country in which you are resident. Nothing in these Terms, including clause 10.3, affects your rights as a consumer to rely on such mandatory provisions of local law.\n\n\n## 11.  Contacting us\n\n> Should you have any reasons for a complaint, we will endeavour to resolve the issue and avoid any re-occurrence in the future. You can always contact us by using the following details:\n>\n> Address: Ignition Law, Moray House 23 - 31, Great Titchfield Street, London, England, W1W 7PA\n>\n> Email address: polkassembly@parity.io\n\nThank you.\n\nTerms last updated 19th February 2020\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport PP from '../../assets/privacy-policy';\nimport TAC from '../../assets/terms-and-conditions';\nimport TOW from '../../assets/terms-of-website';\nimport Markdown from '../../ui-components/Markdown';\ninterface Props{\n    md: string\n    className?: string\n}\n\nconst MdScreen = ({ md, className } : Props) => {\n\treturn (\n\t\t<Grid className={className}>\n\t\t\t<Grid.Column tablet={4} computer={2} largeScreen={2} widescreen={2}/>\n\t\t\t<Grid.Column className='md_box' mobile={16} tablet={12} computer={12} largeScreen={12} widescreen={12}>\n\t\t\t\t<Markdown className='markdown' md={md}/>\n\t\t\t</Grid.Column>\n\t\t</Grid>\n\t);\n};\n\nconst StyledMdScreen = styled(MdScreen)`\n    .md_box {\n        background-color: white;\n        padding: 3rem!important;\n        border-width: 1px;\n        border-style: solid;\n        border-color: grey_light;\n    }\n`;\n\nexport const TermsAndConditions = () => <StyledMdScreen md={TAC}/>;\nexport const PrivacyPolicy = () => <StyledMdScreen md={PP}/>;\nexport const TermsOfWebsite = () => <StyledMdScreen md={TOW}/>;\n\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nexport default `Terms of Website Use\n====================\n\nPlease read these terms and conditions carefully before using this site\n\nThis terms of use (together with the documents referred to in it) tells you the terms of use on which you may make use of our website polkassembly.io (our site), whether as a guest or a registered user. Use of our site includes accessing, browsing, or registering to use our site.\n\nPlease read these terms of use carefully before you start to use our site, as these will apply to your use of our site. We recommend that you print a copy of this for future reference.\n\nBy using our site, you confirm that you accept these terms of use and that you agree to comply with them.\n\nIf you do not agree to these terms of use, you must not use our site.\n\n### Other applicable terms\n\nThese terms of use refer to the following additional terms, which also apply to your use of our site:\n\n-   Our Polkassembly Terms and Conditions, which set out the terms of your use of Polkassembly if you create an account and sign up.\n\n-   Our Privacy Notice which sets out information about how we use your personal information.\n\n-   Our Cookie Policy, which sets out information about the cookies on our site.\n\n### Information about us\n\npolkassembly.io is a site operated by Parity Technologies Limited (\"We\"). We are registered in England and Wales under company number 09760015 and have our registered office at IGNITION LAW Moray House, Floor 1, Moray House, 23-31 Great Titchfield Street, London, United Kingdom, WC1W 7PA.\n\n### Changes to these terms\n\nWe may revise these terms of use at any time by amending this page. Please check this page from time to time to take notice of any changes we made, as they are binding on you.\n\n### Changes to our site\n\nWe may update our site from time to time, and may change the content at any time. However, please note that any of the content on our site may be out of date at any given time, and we are under no obligation to update it. We do not guarantee that our site, or any content on it, will be free from errors or omissions.\n\n### Accessing our site\n\nOur site is made available free of charge.\n\nWe do not guarantee that our site, or any content on it, will always be available or be uninterrupted. Access to our site is permitted on a temporary basis. We may suspend, withdraw, discontinue or change all or any part of our site without notice. We will not be liable to you if for any reason our site is unavailable at any time or for any period.\n\nYou are responsible for making all arrangements necessary for you to have access to our site.\n\nYou are also responsible for ensuring that all persons who access our site through your internet connection are aware of these terms of use and other applicable terms and conditions, and that they comply with them.\n\n### Intellectual property rights\n\nWe are the owner or licensee of all intellectual property rights in our site and its content including the Parity Technologies name and mark. Those works are protected by intellectual property laws and treaties around the world. All such rights are reserved.\n\nYou are not granted any right to use, and may not use, any of our intellectual property rights other than as set out in these terms. You must not commercially exploit our site (or any part of it or its content); however, you may download material from our site solely for internal, non-commercial, personal use by you.\n\nSave as required by applicable law, you shall not copy, reproduce, republish, upload, re-post, modify, transmit, distribute or otherwise use in any way for any non-personal, public or commercial purpose any part of our site including (without limitation) the text, designs, graphics, photographs, images and content generated by users without our prior written consent and (in the case of content generated by a user) the prior written consent of that user.\n\nOur status (and that of any identified contributors) as the authors of content on our site must always be acknowledged.\n\nIf you use our site or any part of it or content on it in breach of these terms of use, your right to use our site will cease immediately and you must, at our option, return or destroy any copies of the materials you have made.\n\n### No reliance on information\n\nThe content on our site is provided for general information only. It is not intended to amount to advice on which you should rely. You must obtain professional or specialist advice before taking, or refraining from, any action on the basis of the content on our site.\n\nAlthough we make reasonable efforts to update the information on our site, we make no representations, warranties or guarantees, whether express or implied, that the content on our site is accurate, complete or up-to-date.\n\n### Limitation of our liability\n\nNothing in these terms of use excludes or limits our liability for death or personal injury arising from our negligence, or our fraud or fraudulent misrepresentation, or any other liability that cannot be excluded or limited by English law.\n\nTo the extent permitted by law, we exclude all conditions, warranties, representations or other terms which may apply to our site or any content on it, whether express or implied.\n\nWe will not be liable to any user for any loss or damage, whether in contract, tort (including negligence), breach of statutory duty, or otherwise, even if foreseeable, arising under or in connection with:\n\n-   use of, or inability to use, our site; or\n\n-   use of or reliance on any content displayed on our site.\n\nIf you are a business user, please note that in particular, we will not be liable for:\n\n-   loss of profits, sales, business, or revenue;\n\n-   business interruption;\n\n-   loss of anticipated savings;\n\n-   loss of business opportunity, goodwill or reputation; or\n\n-   any indirect or consequential loss or damage.\n\nIf you are a consumer user, please note that we only provide our site for domestic and private use. You agree not to use our site for any commercial or business purposes, and we have no liability to you for any loss of profit, loss of business, business interruption, or loss of business opportunity.\n\nWe will not be liable for any loss or damage caused by a virus, distributed denial-of-service attack, or other technologically harmful material that may infect your computer equipment, computer programs, data or other proprietary material due to your use of our site or to your downloading of any content on it, or on any website linked to it.\n\nWe assume no responsibility for the content of websites linked on our site. Such links should not be interpreted as endorsement by us of those linked websites. We will not be liable for any loss or damage that may arise from your use of them.\n\n### Content uploaded to our site\n\nThe views expressed by other users on our site do not represent our views or values. We take no responsibility for, and we do not expressly or implicitly endorse, any content – whether it be pictures, text, sound recordings or whatever - supplied or uploaded by a User to our site (“User Generated Content”).\n\nWe do not oversee, monitor or moderate any User Generated Content which is uploaded to our site. If you become aware of any User Generated Content that is:\n\n-   is obscene, abusive, offensive or racist and promotes or proposes hatred or physical harm against anyone;\n\n-   harasses, bullies, insult or intimidates another person;\n\n-   Is false or dishonest so far as you know;\n\n-   constitutes pornography or is sexual or sexually suggestive involving minors;\n\n-   is defamatory of anyone;\n\n-   uses the material or content or infringes the rights or privacy of anyone else;\n\n-   contains someone else’s personal details or confidential information relating to other people;\n\n-   promotes discrimination, whether based on race, sex, religion, nationality, disability, sexual orientation or age;\n\n-   promotes or condones terrorism, violence or illegal behaviour;\n\n-   is harmful to minors in any way;\n\n-   promotes illegal activity or is otherwise unlawful;\n\n-   impersonates any person, or misrepresents your identity or affiliation with any person; and\n\n-   gives the impression that it emanates from or is endorsed by Parity Technologies, if this is not the case,\n\nthen please contact us on polkassembly@parity.io, providing details of: (i) the date on which it was posted and where it can be found on our site; (ii) the name and surname of the author or, if the author is a legal person, the author's business name; (iii) reasons why the content should be deleted; and (vi) copies of any communication with the author (if any).\n\n### Viruses\n\nWe do not guarantee that our site will be secure or free from bugs or viruses.\n\nYou are responsible for configuring your information technology, computer programmes and platform in order to access our site. You should use your own virus protection software.\n\nYou must not misuse our site by knowingly introducing viruses, trojans, worms, logic bombs or other material which is malicious or technologically harmful. You must not attempt to gain unauthorised access to our site, the server on which our site is stored or any server, computer or database connected to our site. You must not attack our site via a denial-of-service attack or a distributed denial-of service attack. By breaching this provision, you would commit a criminal offence under the Computer Misuse Act 1990. We will report any such breach to the relevant law enforcement authorities and we will co-operate with those authorities by disclosing your identity to them. In the event of such a breach, your right to use our site will cease immediately.\n\n### Linking to our site\n\nYou may link to our home page, provided you do so in a way that is fair and legal and does not damage our reputation or take advantage of it.\n\nYou must not establish a link in such a way as to suggest any form of association, approval or endorsement on our part where none exists.\n\nWe reserve the right to withdraw linking permission without notice.\n\nIf you wish to make any use of content on our site other than that set out above, please contact admin@parity.io.\n\n### Third party links and resources in our site\n\nWhere our site contains links to other sites and resources provided by third parties, these links are provided for your information only.\n\nWe have no control over the contents of those sites or resources.\n\n### Applicable law\n\nIf you are a consumer, please note that these terms of use, its subject matter and its formation, are governed by the law of England and Wales. You and we both agree that the courts of England and Wales will have non-exclusive jurisdiction. However, if you are a resident of Northern Ireland you may also bring proceedings in Northern Ireland, and if you are resident of Scotland, you may also bring proceedings in Scotland.\n\nIf you are a business, these terms of use, its subject matter and its formation (and any non-contractual disputes or claims) are governed by the law of England and Wales. We both agree to the exclusive jurisdiction of the courts of England and Wales.\n\nTerms and conditions of use of materials\n========================================\n\nWe, Parity Technologies Limited (the \"Company\"), may provide publications, briefings, newsletters and presentations (the \"Materials\") on our site or via email and other channels. Access to the Materials is provided on the basis of the terms and conditions set out below. Please read these terms carefully before accessing the Materials.\n\nThe Materials are for general information only and are not intended to provide advice.\n\nWe do not accept responsibility or liability to users or any third parties in relation to the use of the Materials or their contents.\n\nAll copyright, trade marks and other intellectual property in or arising out of the Materials vest solely in us.\n\nYou agree not to modify, reproduce, copy, distribute, disclose to third parties or derive commercial use or benefit from the Materials without our prior written consent.\n\nYou agree not to use or permit the use of the Materials for any illegal purpose nor use the materials in such a manner as would bring us or our business into disrepute.\n\nNothing in these terms shall operate to exclude or restrict liability based on fraud or reckless disregard of professional obligations or any other liability that cannot be excluded or restricted by applicable laws or regulations.\n\nThese terms shall be construed in accordance with the laws of England and Wales.\n\n### Contact us\n\nTo contact us, please email admin@parity.io.\n\nStatutory information\n---------------------\n\nStatutory information about Parity Technologies Limited:\n\n-   Registered in England and Wales\n\n-   Registered Number: 09760015\n\n-   Registered Office: Ignition Law, Moray House Floor 1, 23-31 Great Titchfield Street, London, United Kingdom, WC1W 7PA.\n\nThank you for visiting our site.\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { useContext } from 'react';\nimport { FieldError,useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { Divider, Responsive } from 'semantic-ui-react';\n\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport { useLoginMutation } from '../../generated/graphql';\nimport { useRouter } from '../../hooks';\nimport { handleLoginUser } from '../../services/auth.service';\nimport Button from '../../ui-components/Button';\nimport FilteredError from '../../ui-components/FilteredError';\nimport { Form } from '../../ui-components/Form';\nimport messages from '../../util/messages';\n\ninterface Props {\n\tclassName?: string\n\ttoggleWeb2Login: () => void\n}\n\nconst LoginForm = ({ className, toggleWeb2Login }:Props): JSX.Element => {\n\tconst currentUser = useContext(UserDetailsContext);\n\tconst { history } = useRouter();\n\tconst [loginMutation, { loading, error }] = useLoginMutation();\n\tconst { errors, handleSubmit, register } = useForm();\n\n\tconst handleSubmitForm = (data:Record<string, any>):void => {\n\t\tconst { username, password } = data;\n\n\t\tif (username && password){\n\t\t\tloginMutation({\n\t\t\t\tvariables: {\n\t\t\t\t\tpassword,\n\t\t\t\t\tusername\n\t\t\t\t}\n\t\t\t}).then(({ data }) => {\n\t\t\t\tif (data && data.login && data.login.token && data.login.user) {\n\t\t\t\t\thandleLoginUser({ token: data.login.token, user: data.login.user }, currentUser);\n\t\t\t\t\thistory.push('/');\n\t\t\t\t}\n\t\t\t}).catch((e) => {\n\t\t\t\tconsole.error('Login error', e);\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleToggle = () => toggleWeb2Login();\n\n\treturn (\n\t\t<Form className={className} onSubmit={handleSubmit(handleSubmitForm)}>\n\t\t\t<h3>Login</h3>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Field width={16}>\n\t\t\t\t\t<label>Username</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName={errors.username ? 'error' : ''}\n\t\t\t\t\t\tname='username'\n\t\t\t\t\t\tplaceholder='John'\n\t\t\t\t\t\tref={register({ maxLength:20, minLength:3, pattern: /^[A-Za-z0-9._-]*$/, required: true })}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t/>\n\t\t\t\t\t{(errors.username as FieldError)?.type === 'maxLength' && <span className={'errorText'}>{messages.VALIDATION_USERNAME_MAXLENGTH_ERROR}</span>}\n\t\t\t\t\t{(errors.username as FieldError)?.type === 'minLength' && <span className={'errorText'}>{messages.VALIDATION_USERNAME_MINLENGTH_ERROR}</span>}\n\t\t\t\t\t{(errors.username as FieldError)?.type === 'pattern' && <span className={'errorText'}>{messages.VALIDATION_USERNAME_PATTERN_ERROR}</span>}\n\t\t\t\t\t{(errors.username as FieldError)?.type === 'required' && <span className={'errorText'}>{messages.VALIDATION_USERNAME_REQUIRED_ERROR}</span>}\n\t\t\t\t</Form.Field>\n\t\t\t</Form.Group>\n\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Field width={16}>\n\t\t\t\t\t<label>Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName={errors.password ? 'error' : ''}\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t\tref={register({ minLength: 6 ,required: true })}\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.password && <span className={'errorText'}>{messages.VALIDATION_PASSWORD_ERROR}</span>}\n\n\t\t\t\t\t<div className='text-muted'>\n\t\t\t\t\t\t<Link to='/request-reset-password'>Forgot your password?</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</Form.Field>\n\t\t\t</Form.Group>\n\n\t\t\t<div className={'mainButtonContainer'}>\n\t\t\t\t<Button\n\t\t\t\t\tprimary\n\t\t\t\t\tdisabled={loading}\n\t\t\t\t\ttype='submit'\n\t\t\t\t>\n\t\t\t\t\tLogin\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t{error && <FilteredError text={error.message}/>}\n\t\t\t</div>\n\t\t\t<Responsive minWidth='992'>\n\t\t\t\t<Divider horizontal>Or</Divider>\n\t\t\t\t<div className={'mainButtonContainer'}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsecondary\n\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\tonClick={handleToggle}\n\t\t\t\t\t>\n\t\t\t\t\t\tLogin With Web3 Address\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</Responsive>\n\t\t</Form>\n\t);\n};\n\nexport default styled(LoginForm)`\n\t.mainButtonContainer {\n\t\talign-items: center;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tjustify-content: center;\n\t}\n\n\tinput.error {\n\t\tborder-style: solid;\n\t\tborder-width: 1px;\n\t\tborder-color: red_secondary;\n\t}\n\n\t.errorText {\n\t\tcolor: red_secondary;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { Keyring } from '@polkadot/api';\nimport { chainProperties } from 'src/global/networkConstants';\nimport getNetwork from 'src/util/getNetwork';\n\n/**\n * Return an address encoded for the current network\n *\n * @param address An address\n *\n */\n\nexport default function (address: string): string|null {\n\tconst network = getNetwork();\n\tconst ss58Format = chainProperties?.[network]?.ss58Format;\n\tif (!network || !ss58Format) {\n\t\treturn null;\n\t}\n\n\tconst keyring = new Keyring({ type: 'sr25519' });\n\n\treturn keyring.encodeAddress(\n\t\tkeyring.decodeAddress(address),\n\t\tchainProperties[network].ss58Format);\n}","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { web3Accounts, web3Enable,web3FromSource } from '@polkadot/extension-dapp';\nimport { InjectedAccountWithMeta } from '@polkadot/extension-inject/types';\nimport { stringToHex } from '@polkadot/util';\nimport styled from '@xstyled/styled-components';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Divider, DropdownProps } from 'semantic-ui-react';\n\nimport ExtensionNotDetected from '../../components/ExtensionNotDetected';\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport { useAddressLoginMutation, useAddressLoginStartMutation } from '../../generated/graphql';\nimport { useRouter } from '../../hooks';\nimport { handleLoginUser } from '../../services/auth.service';\nimport AccountSelectionForm from '../../ui-components/AccountSelectionForm';\nimport Button from '../../ui-components/Button';\nimport FilteredError from '../../ui-components/FilteredError';\nimport { Form } from '../../ui-components/Form';\nimport Loader from '../../ui-components/Loader';\nimport getEncodedAddress from '../../util/getEncodedAddress';\n\ninterface Props {\n\tclassName?: string\n\ttoggleWeb2Login: () => void\n}\n\nconst APPNAME = process.env.REACT_APP_APPNAME || 'polkassembly';\n\nconst LoginForm = ({ className, toggleWeb2Login }:Props): JSX.Element => {\n\tconst [error, setErr] = useState<Error | null>(null);\n\tconst [address, setAddress] = useState<string>('');\n\tconst [accounts, setAccounts] = useState<InjectedAccountWithMeta[]>([]);\n\tconst [isAccountLoading, setIsAccountLoading] = useState(true);\n\tconst [extensionNotFound, setExtensionNotFound] = useState(false);\n\tconst [accountsNotFound, setAccountsNotFound] = useState(false);\n\tconst { history } = useRouter();\n\tconst [addressLoginStartMutation] = useAddressLoginStartMutation();\n\tconst [addressLoginMutation, { loading }] = useAddressLoginMutation();\n\tconst currentUser = useContext(UserDetailsContext);\n\n\tuseEffect(() => {\n\t\tif (!accounts.length) {\n\t\t\tgetAccounts();\n\t\t}\n\t}, [accounts.length]);\n\n\tconst getAccounts = async (): Promise<undefined> => {\n\t\tconst extensions = await web3Enable(APPNAME);\n\n\t\tif (extensions.length === 0) {\n\t\t\tsetExtensionNotFound(true);\n\t\t\tsetIsAccountLoading(false);\n\t\t\treturn;\n\t\t} else {\n\t\t\tsetExtensionNotFound(false);\n\t\t}\n\n\t\tconst accounts = await web3Accounts();\n\n\t\tif (accounts.length === 0) {\n\t\t\tsetAccountsNotFound(true);\n\t\t\tsetIsAccountLoading(false);\n\t\t\treturn;\n\t\t} else {\n\t\t\tsetAccountsNotFound(false);\n\t\t}\n\n\t\taccounts.forEach((account) => {\n\t\t\taccount.address = getEncodedAddress(account.address) || account.address;\n\t\t});\n\n\t\tsetAccounts(accounts);\n\t\tif (accounts.length > 0) {\n\t\t\tsetAddress(accounts[0].address);\n\t\t}\n\n\t\tsetIsAccountLoading(false);\n\t\treturn;\n\t};\n\n\tconst onAccountChange = (event: React.SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => {\n\t\tconst addressValue = data.value as string;\n\t\tsetAddress(addressValue);\n\t};\n\n\tconst handleLogin = async () => {\n\t\tif (!accounts.length) {\n\t\t\treturn getAccounts();\n\t\t}\n\n\t\ttry {\n\t\t\tconst injected = await web3FromSource(accounts[0].meta.source);\n\t\t\tconst signRaw = injected && injected.signer && injected.signer.signRaw;\n\n\t\t\tif (!signRaw) {\n\t\t\t\treturn console.error('Signer not available');\n\t\t\t}\n\n\t\t\tconst { data: startResult } = await addressLoginStartMutation({\n\t\t\t\tvariables: {\n\t\t\t\t\taddress\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst signMessage = startResult?.addressLoginStart?.signMessage;\n\n\t\t\tif (!signMessage) {\n\t\t\t\tthrow new Error('Challenge message not found');\n\t\t\t}\n\n\t\t\tconst { signature } = await signRaw({\n\t\t\t\taddress,\n\t\t\t\tdata: stringToHex(signMessage),\n\t\t\t\ttype: 'bytes'\n\t\t\t});\n\n\t\t\tconst { data: loginResult } = await addressLoginMutation({\n\t\t\t\tvariables: {\n\t\t\t\t\taddress,\n\t\t\t\t\tsignature\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (loginResult?.addressLogin?.token && loginResult?.addressLogin?.user) {\n\t\t\t\thandleLoginUser({ token: loginResult.addressLogin.token, user: loginResult.addressLogin.user }, currentUser);\n\t\t\t\thistory.push('/');\n\t\t\t} else {\n\t\t\t\tthrow new Error('Web3 Login failed');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tsetErr(error);\n\t\t}\n\t};\n\n\tconst handleToggle = () => toggleWeb2Login();\n\n\treturn (\n\t\t<Form className={className} onSubmit={handleLogin}>\n\t\t\t<h3>Login</h3>\n\t\t\t{extensionNotFound?\n\t\t\t\t<div className='card'>\n\t\t\t\t\t<ExtensionNotDetected />\n\t\t\t\t</div>\n\t\t\t\t: null\n\t\t\t}\n\t\t\t{accountsNotFound?\n\t\t\t\t<div className='card'>\n\t\t\t\t\t<div className='text-muted'>You need at least one account in Polkadot-js extenstion to login.</div>\n\t\t\t\t\t<div className='text-muted'>Please reload this page after adding accounts.</div>\n\t\t\t\t</div>\n\t\t\t\t: null\n\t\t\t}\n\t\t\t{isAccountLoading\n\t\t\t\t?\n\t\t\t\t<Loader text={'Requesting Web3 accounts'}/>\n\t\t\t\t:\n\t\t\t\taccounts.length > 0 &&\n\t\t\t\t<>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<AccountSelectionForm\n\t\t\t\t\t\t\ttitle='Choose linked account'\n\t\t\t\t\t\t\taccounts={accounts}\n\t\t\t\t\t\t\taddress={address}\n\t\t\t\t\t\t\tonAccountChange={onAccountChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<div className={'mainButtonContainer'}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t}\n\t\t\t<div>\n\t\t\t\t{error && <FilteredError className='info' text={error.message}/>}\n\t\t\t</div>\n\t\t\t<Divider horizontal>Or</Divider>\n\t\t\t<div className={'mainButtonContainer'}>\n\t\t\t\t<Button\n\t\t\t\t\tsecondary\n\t\t\t\t\tdisabled={loading}\n\t\t\t\t\tonClick={handleToggle}\n\t\t\t\t>\n\t\t\t\t\tLogin With Username\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</Form>\n\t);\n};\n\nexport default styled(LoginForm)`\n\t.mainButtonContainer {\n\t\talign-items: center;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tjustify-content: center;\n\t}\n\n\tinput.error {\n\t\tborder-style: solid;\n\t\tborder-width: 1px;\n\t\tborder-color: red_secondary;\n\t}\n\n\t.info {\n\t\tmargin: 10px 0;\n\t}\n\n\t.errorText {\n\t\tcolor: red_secondary;\n\t}\n\n\t.ui.dimmer {\n\t\theight: calc(100% - 6.5rem);\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React, { useState } from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport Web2Login from '../../components/Login/Web2Login';\nimport Web3Login from '../../components/Login/Web3Login';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst Login = ({ className }: Props) => {\n\n\tconst [displayWeb2, setDisplayWeb2] = useState(true);\n\tconst toggleWeb2Login = () => setDisplayWeb2(!displayWeb2);\n\n\treturn (\n\t\t<Grid className={className}>\n\t\t\t<Grid.Column only='tablet computer' tablet={2} computer={4} largeScreen={5} widescreen={5}/>\n\t\t\t<Grid.Column mobile={16} tablet={12} computer={8} largeScreen={6} widescreen={6}>\n\t\t\t\t{ displayWeb2\n\t\t\t\t\t? <Web2Login toggleWeb2Login={toggleWeb2Login}/>\n\t\t\t\t\t: <Web3Login toggleWeb2Login={toggleWeb2Login}/>\n\t\t\t\t}\n\t\t\t</Grid.Column>\n\t\t\t<Grid.Column only='tablet computer' tablet={2} computer={4} largeScreen={5} widescreen={5}/>\n\t\t</Grid>\n\t);\n};\n\nexport default Login;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Post from '../../components/Post/Post';\nimport { useMotionPostAndCommentsQuery } from '../../generated/graphql';\nimport { useRedirectReferenda } from '../../hooks';\nimport FilteredError from '../../ui-components/FilteredError';\nimport Loader from '../../ui-components/Loader';\n\nexport default () => {\n\tconst { id } = useParams();\n\tconst idNumber = Number(id) || 0;\n\tconst { data, error, refetch } = useMotionPostAndCommentsQuery({ variables: { 'id': idNumber } });\n\n\tuseRedirectReferenda(data?.posts?.[0]?.onchain_link?.onchain_referendum_id);\n\n\tif (error) return <FilteredError text={error.message}/>;\n\n\tif (data) return <Post data={data} isMotion refetch={refetch} />;\n\n\treturn <Loader/>;\n};\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport { useRouter } from '../../hooks';\nimport Button from '../../ui-components/Button';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst NotFound = ({ className }:Props): JSX.Element => {\n\tconst { history } = useRouter();\n\tconst navigateHome = () => {\n\t\thistory.push('/');\n\t};\n\n\treturn (\n\t\t<Grid className={className} stackable reversed='mobile tablet'>\n\t\t\t<Grid.Column>\n\t\t\t\t<h1>You broke the chain</h1>\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\t\t<>\n\t\t\t\t\t<img alt={'broken chain'} width={100} src='broken-chain.png'/>\n\t\t\t\t</>\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\t\t<h2>404 Not found!</h2>\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\t\t<>\n\t\t\t\t\t<Button primary onClick={navigateHome}>Go Back to Home!</Button>\n\t\t\t\t</>\n\t\t\t</Grid.Column>\n\t\t</Grid>\n\t);\n};\n\nexport default styled(NotFound)`\n\ttext-align: center\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { useContext, useEffect,useState } from 'react';\nimport { Checkbox, CheckboxProps,Grid } from 'semantic-ui-react';\n\nimport { NotificationContext } from '../../context/NotificationContext';\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport { useChangeNotificationPreferenceMutation } from '../../generated/graphql';\nimport { handleTokenChange } from '../../services/auth.service';\nimport { NotificationStatus } from '../../types';\nimport Button from '../../ui-components/Button';\nimport FilteredError from '../../ui-components/FilteredError';\nimport { Form } from '../../ui-components/Form';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst Settings = ({ className }:Props): JSX.Element => {\n\tconst currentUser = useContext(UserDetailsContext);\n\tconst [changed, setChanged] = useState<boolean>(false);\n\tconst [postParticipated, setPostParticipated] = useState<boolean>(false);\n\tconst [postCreated, setPostCreated] = useState<boolean>(false);\n\tconst [newProposal, setNewProposal] = useState<boolean>(false);\n\tconst [ownProposal, setOwnProposal] = useState<boolean>(false);\n\tconst [changeNotificationPreferenceMutation, { error }] = useChangeNotificationPreferenceMutation();\n\tconst { queueNotification } = useContext(NotificationContext);\n\tconst { notification } = currentUser;\n\n\tuseEffect(() => {\n\t\tsetPostParticipated(notification?.postParticipated || false);\n\t\tsetPostCreated(notification?.postCreated || false);\n\t\tsetNewProposal(notification?.newProposal || false);\n\t\tsetOwnProposal(notification?.ownProposal || false);\n\t}, [notification]);\n\n\tconst updatePreference = () => {\n\t\tchangeNotificationPreferenceMutation({\n\t\t\tvariables: {\n\t\t\t\tnewProposal,\n\t\t\t\townProposal,\n\t\t\t\tpostCreated,\n\t\t\t\tpostParticipated\n\t\t\t}\n\t\t})\n\t\t\t.then(({ data }) => {\n\t\t\t\tif (data && data.changeNotificationPreference && data.changeNotificationPreference.message) {\n\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\theader: 'Success!',\n\t\t\t\t\t\tmessage: data.changeNotificationPreference.message,\n\t\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t\t});\n\t\t\t\t\tsetChanged(false);\n\t\t\t\t}\n\t\t\t\tif (data && data.changeNotificationPreference && data.changeNotificationPreference.token) {\n\t\t\t\t\thandleTokenChange(data.changeNotificationPreference.token);\n\t\t\t\t}\n\t\t\t\tcurrentUser.setUserDetailsContextState((prevState) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\tnotification: {\n\t\t\t\t\t\t\tnewProposal,\n\t\t\t\t\t\t\townProposal,\n\t\t\t\t\t\t\tpostCreated,\n\t\t\t\t\t\t\tpostParticipated\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}).catch((e) => {\n\t\t\t\tqueueNotification({\n\t\t\t\t\theader: 'Failed!',\n\t\t\t\t\tmessage: e.message,\n\t\t\t\t\tstatus: NotificationStatus.ERROR\n\t\t\t\t});\n\t\t\t\tconsole.error('change name error', e);\n\t\t\t});\n\t};\n\n\tconst handlePostParticipatedChange = (event: React.FormEvent<HTMLInputElement>, data: CheckboxProps) => {\n\t\tsetPostParticipated(data.checked || false);\n\t\tsetChanged(true);\n\t};\n\n\tconst handlePostCreatedChange = (event: React.FormEvent<HTMLInputElement>, data: CheckboxProps) => {\n\t\tsetPostCreated(data.checked || false);\n\t\tsetChanged(true);\n\t};\n\n\tconst handleNewProposalChange = (event: React.FormEvent<HTMLInputElement>, data: CheckboxProps) => {\n\t\tsetNewProposal(data.checked || false);\n\t\tsetChanged(true);\n\t};\n\n\tconst handleOwnProposalChange = (event: React.FormEvent<HTMLInputElement>, data: CheckboxProps) => {\n\t\tsetOwnProposal(data.checked || false);\n\t\tsetChanged(true);\n\t};\n\n\treturn (\n\t\t<Grid>\n\t\t\t<Grid.Column className={className} mobile={16} tablet={12} computer={12} largeScreen={10} widescreen={10}>\n\t\t\t\t<h2>Notification Preferences</h2>\n\t\t\t\t<Form standalone={false}>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t<Checkbox label='Subscribe to post you participate in' checked={postParticipated} toggle onChange={handlePostParticipatedChange} />\n\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t<Checkbox label='Subscribe to post you created' checked={postCreated} toggle onChange={handlePostCreatedChange} />\n\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t<Checkbox label='Notified for new proposal in council/motion/referendum' checked={newProposal} toggle onChange={handleNewProposalChange} />\n\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t<Checkbox label='Notified for your own proposals' checked={ownProposal} toggle onChange={handleOwnProposalChange} />\n\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t{changed ?\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Field width={6}>\n\t\t\t\t\t\t\t\t{error && <FilteredError text={error.message}/>}\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t\tonClick={updatePreference}\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t: null}\n\t\t\t\t</Form>\n\t\t\t</Grid.Column>\n\t\t\t<Grid.Column only='computer' computer={4} largeScreen={6} widescreen={6}/>\n\t\t</Grid>\n\t);\n};\n\nexport default styled(Settings)`\n\tbackground-color: white;\n\tpadding: 2rem 3rem 3rem 3rem!important;\n\tborder-style: solid;\n\tborder-width: 1px;\n\tborder-color: grey_light;\n\n\t.button {\n\t\tmargin-top: 0.2rem;\n\t}\n\n\t.ui.form:not(.unstackable)\n\t.fields:not(.unstackable)>.ten.wide.field {\n\n\t\t@media only screen and (max-width: 767px)  {\n\t\t\twidth: 70%!important;\n\t\t}\n\n\t\t@media only screen and (max-width: 576px) {\n\t\t\twidth: 60%!important;\n\t\t}\n\t}\n\n\t.ui.form:not(.unstackable)\n\t.fields:not(.unstackable)>.six.wide.field {\n\n\t\t@media only screen and (max-width: 767px)  {\n\t\t\twidth: 30%!important;\n\t\t}\n\n\t\t@media only screen and (max-width: 576px) {\n\t\t\twidth: 40%!important;\n\t\t}\n\t}\n\n\t@media only screen and (max-width: 576px) {\n\t\tpadding: 2rem!important;\n\n\t\t.ui.form {\n\t\t\tmargin-top: 0rem;\n\t\t\tpadding: 0rem;\n\t\t}\n\n\t\tbutton {\n\t\t\tpadding: 0.8rem 1rem;\n\t\t\tborder-radius: 0.5rem;\n\t\t}\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React from 'react';\n\nimport ProposalsListing from '../../../components/Listings/ProposalsListing';\nimport { useLatestDemocracyProposalPostsQuery } from '../../../generated/graphql';\nimport { post_topic } from '../../../global/post_topics';\nimport { post_type } from '../../../global/post_types';\nimport FilteredError from '../../../ui-components/FilteredError';\nimport Loader from '../../../ui-components/Loader';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst ProposalsContainer = ({ className }:Props) => {\n\n\tconst { data, error } = useLatestDemocracyProposalPostsQuery({ variables: {\n\t\tlimit: 5,\n\t\tpostTopic: post_topic.DEMOCRACY,\n\t\tpostType: post_type.ON_CHAIN\n\t} });\n\n\tif (error) return <FilteredError text={error.message}/>;\n\n\tif (data) return <ProposalsListing className={className} data={data}/>;\n\n\treturn <Loader/>;\n};\n\nexport default ProposalsContainer;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React from 'react';\nimport { post_type } from 'src/global/post_types';\n\nimport Referenda from '../../../components/Listings/ReferendaListing';\nimport { useLatestReferendaPostsQuery } from '../../../generated/graphql';\nimport FilteredError from '../../../ui-components/FilteredError';\nimport Loader from '../../../ui-components/Loader';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst ReferendaContainer = ({ className }:Props) => {\n\n\tconst { data, error } = useLatestReferendaPostsQuery({ variables: {\n\t\tlimit: 5,\n\t\tpostType: post_type.ON_CHAIN\n\t} });\n\n\tif (error) return <FilteredError text={error.message}/>;\n\n\tif (data) return <Referenda className={className} data={data}/>;\n\n\treturn <Loader/>;\n};\n\nexport default ReferendaContainer;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React from 'react';\n\nimport TreasuryListing from '../../../components/Listings/TreasuryListing';\nimport { useLatestDemocracyTreasuryProposalPostsQuery } from '../../../generated/graphql';\nimport { post_topic } from '../../../global/post_topics';\nimport { post_type } from '../../../global/post_types';\nimport FilteredError from '../../../ui-components/FilteredError';\nimport Loader from '../../../ui-components/Loader';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst TreasuryProposalsContainer = ({ className }:Props) => {\n\n\tconst { data, error } = useLatestDemocracyTreasuryProposalPostsQuery({ variables: {\n\t\tlimit: 5,\n\t\tpostTopic: post_topic.TREASURY,\n\t\tpostType: post_type.ON_CHAIN\n\t} });\n\n\tif (error) return <FilteredError text={error.message}/>;\n\n\tif (data) return <TreasuryListing className={className} data={data}/>;\n\n\treturn <Loader/>;\n};\n\nexport default TreasuryProposalsContainer;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport Grid from 'semantic-ui-react/dist/commonjs/collections/Grid';\n\nimport InfoBox from '../../ui-components/InfoBox';\nimport MotionContainer from './Motions';\nimport ProposalContainer from './Proposals';\nimport ReferendaContainer from './Referenda';\nimport TreasuryContainer from './Treasury';\n\nconst OnchainPostsContainer = ({ className } : {className?: string}) => {\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t<h1>Latest On Chain Activity</h1>\n\t\t\t<Grid stackable reversed='mobile tablet'>\n\t\t\t\t<Grid.Column mobile={16} tablet={16} computer={10}>\n\t\t\t\t\t<h3>Referenda</h3>\n\t\t\t\t\t<ReferendaContainer className='referendaContainer'/>\n\t\t\t\t\t<h3>Proposals</h3>\n\t\t\t\t\t<ProposalContainer className='proposalContainer'/>\n\t\t\t\t\t<h3>Motions</h3>\n\t\t\t\t\t<MotionContainer className='motionContainer'/>\n\t\t\t\t\t<h3>Treasury</h3>\n\t\t\t\t\t<TreasuryContainer className='treasuryContainer'/>\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column mobile={16} tablet={16} computer={6}>\n\t\t\t\t\t<InfoBox\n\t\t\t\t\t\tdismissable={true}\n\t\t\t\t\t\tcontent='This is the place to discuss on-chain proposals, motions and referenda.\n\t\t\t\t\t\tOn-chain posts are automatically generated as soon as they are created on the chain.\n\t\t\t\t\t\tOnly the proposer is able to edit them.'\n\t\t\t\t\t\tname='onchainInfo'\n\t\t\t\t\t\ttitle='About On-chain Posts'\n\t\t\t\t\t/>\n\t\t\t\t</Grid.Column>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n\n};\n\nexport default styled(OnchainPostsContainer)`\n\n\t.referendaContainer, .proposalContainer, .motionContainer {\n\t\tmargin-bottom: 3rem;\n\t}\n\n\th1 {\n\t\t@media only screen and (max-width: 576px) {\n\t\t\tmargin: 3rem 1rem 1rem 1rem;\n\t\t}\n\n\t\t@media only screen and (max-width: 768px) and (min-width: 576px) {\n\t\t\tmargin-left: 1rem;\n\t\t}\n\n\t\t@media only screen and (max-width: 991px) and (min-width: 768px) {\n\t\t\tmargin-left: 1rem;\n\t\t}\n\t}\n\n\t@media only screen and (max-width: 991px) and (min-width: 768px) {\n\t\t.ui[class*=\"tablet reversed\"].grid {\n\t\t\tflex-direction: column-reverse;\n\t\t}\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Post from '../../components/Post/Post';\nimport { useProposalPostAndCommentsQuery } from '../../generated/graphql';\nimport { useRedirectReferenda } from '../../hooks';\nimport FilteredError from '../../ui-components/FilteredError';\nimport Loader from '../../ui-components/Loader';\n\nexport default () => {\n\tconst { id } = useParams();\n\tconst idNumber = Number(id) || 0;\n\tconst { data, error, refetch } = useProposalPostAndCommentsQuery({ variables: { 'id': idNumber } });\n\n\tuseRedirectReferenda(data?.posts?.[0]?.onchain_link?.onchain_referendum_id);\n\n\tif (error) return <FilteredError text={error.message}/>;\n\n\tif (data) return <Post data={data} isProposal refetch={refetch} />;\n\n\treturn <Loader/>;\n};\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Post from '../../components/Post/Post';\nimport { useReferendumPostAndCommentsQuery } from '../../generated/graphql';\nimport FilteredError from '../../ui-components/FilteredError';\nimport Loader from '../../ui-components/Loader';\n\nexport default () => {\n\tconst { id } = useParams();\n\tconst idNumber = Number(id) || 0;\n\tconst { data, error, refetch } = useReferendumPostAndCommentsQuery({ variables: { 'id': idNumber } });\n\n\tif (error) return <FilteredError text={error.message}/>;\n\n\tif (data) return <Post data={data} isReferendum refetch={refetch} />;\n\n\treturn <Loader/>;\n};","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { useContext,useState } from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport { ModalContext } from '../../context/ModalContext';\nimport { useRequestResetPasswordMutation } from '../../generated/graphql';\nimport { useRouter } from '../../hooks';\nimport Button from '../../ui-components/Button';\nimport FilteredError from '../../ui-components/FilteredError';\nimport { Form } from '../../ui-components/Form';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst RequestResetPassword = ({ className }:Props): JSX.Element => {\n\tconst [email, setEmail] = useState<string | undefined>('');\n\tconst { history } = useRouter();\n\tconst { setModal } = useContext(ModalContext);\n\tconst [requestResetPasswordMutation, { loading, error }] = useRequestResetPasswordMutation();\n\n\tconst onEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => setEmail(event.currentTarget.value);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>):void => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif (email){\n\t\t\trequestResetPasswordMutation({\n\t\t\t\tvariables: {\n\t\t\t\t\temail\n\t\t\t\t}\n\t\t\t}).then(({ data }) => {\n\t\t\t\tif (data && data.requestResetPassword && data.requestResetPassword.message){\n\t\t\t\t\thistory.push('/');\n\t\t\t\t\tsetModal({ content: data.requestResetPassword.message ,title: 'Check your emails' });\n\t\t\t\t}\n\t\t\t}).catch((e) => {\n\t\t\t\tconsole.error('Request password reset error', e);\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<Grid className={className}>\n\t\t\t<Grid.Column only='tablet computer' tablet={2} computer={4} largeScreen={5} widescreen={5}/>\n\t\t\t<Grid.Column mobile={16} tablet={12} computer={8} largeScreen={6} widescreen={6}>\n\t\t\t\t<Form>\n\t\t\t\t\t<h3>Request Password Reset</h3>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Field width={16}>\n\t\t\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tonChange={onEmailChange}\n\t\t\t\t\t\t\t\tplaceholder='email@example.com'\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<div className={'mainButtonContainer'}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRequest reset\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{error && <FilteredError text={error.message}/>}\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</Grid.Column>\n\t\t\t<Grid.Column only='tablet computer' tablet={2} computer={4} largeScreen={5} widescreen={5}/>\n\t\t</Grid>\n\t);\n};\n\nexport default styled(RequestResetPassword)`\n\t.mainButtonContainer{\n\t\talign-items: center;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { useContext,useState } from 'react';\nimport { Grid,Header, Icon } from 'semantic-ui-react';\n\nimport { NotificationContext } from '../../../context/NotificationContext';\nimport { useResetPasswordMutation } from '../../../generated/graphql';\nimport { useRouter } from '../../../hooks';\nimport { NotificationStatus } from '../../../types';\nimport Button from '../../../ui-components/Button';\nimport FilteredError from '../../../ui-components/FilteredError';\nimport { Form } from '../../../ui-components/Form';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst ResetPassword = ({ className }:Props): JSX.Element => {\n\tconst router = useRouter();\n\tconst { token } = router.query;\n\tconst [newPassword, setNewPassword ] = useState('');\n\tconst { queueNotification } = useContext(NotificationContext);\n\tconst [resetPassword, { loading, error }] = useResetPasswordMutation({\n\t\tvariables: {\n\t\t\tnewPassword,\n\t\t\ttoken\n\t\t}\n\t});\n\n\tconst handleNewPasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => setNewPassword(event.currentTarget.value);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>):void => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif (newPassword){\n\t\t\tresetPassword({\n\t\t\t\tvariables: {\n\t\t\t\t\tnewPassword,\n\t\t\t\t\ttoken\n\t\t\t\t}\n\t\t\t}).then(({ data }) => {\n\t\t\t\tif (data && data.resetPassword && data.resetPassword.message) {\n\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\theader: 'Success!',\n\t\t\t\t\t\tmessage: data.resetPassword.message,\n\t\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t\t});\n\t\t\t\t\trouter.history.push('/login');\n\t\t\t\t}\n\t\t\t}).catch((e) => {\n\t\t\t\tconsole.error('Reset password error', e);\n\t\t\t});\n\t\t}\n\t};\n\n\tconst renderNoTokenError = () => {\n\t\tif (token) return null;\n\n\t\treturn (\n\t\t\t<Header as='h2' icon>\n\t\t\t\t<Icon name='ambulance' />\n\t\t\t\tNo token password reset token provided\n\t\t\t</Header>\n\t\t);\n\t};\n\n\treturn (\n\t\t<Grid className={className}>\n\t\t\t<Grid.Column only='tablet computer' tablet={2} computer={4} largeScreen={5} widescreen={6}/>\n\t\t\t<Grid.Column mobile={16} tablet={12} computer={8} largeScreen={6} widescreen={4}>\n\t\t\t\t{renderNoTokenError()}\n\t\t\t\t{ token && <Form>\n\t\t\t\t\t<h3>Set new password</h3>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Field width={16}>\n\t\t\t\t\t\t\t<label>New password</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tonChange={handleNewPasswordChange}\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<div className={'mainButtonContainer'}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSet new password\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{error && <FilteredError text={error.message}/>}\n\t\t\t\t\t</div>\n\t\t\t\t</Form>}\n\t\t\t</Grid.Column>\n\t\t\t<Grid.Column only='tablet computer' tablet={2} computer={4} largeScreen={5} widescreen={6}/>\n\t\t</Grid>\n\t);\n};\n\nexport default styled(ResetPassword)`\n\t.mainButtonContainer{\n\t\talign-items: center;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t}\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { web3Accounts, web3Enable,web3FromSource } from '@polkadot/extension-dapp';\nimport { InjectedAccountWithMeta } from '@polkadot/extension-inject/types';\nimport { stringToHex } from '@polkadot/util';\nimport styled from '@xstyled/styled-components';\nimport React, { useContext,useState } from 'react';\nimport { Grid,Icon } from 'semantic-ui-react';\n\nimport ExtensionNotDetected from '../../components/ExtensionNotDetected';\nimport { NotificationContext } from '../../context/NotificationContext';\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport { useAddressLinkConfirmMutation, useAddressLinkStartMutation, useAddressUnlinkMutation } from '../../generated/graphql';\nimport { handleTokenChange } from '../../services/auth.service';\nimport { NotificationStatus } from '../../types';\nimport AddressComponent from '../../ui-components/Address';\nimport Button from '../../ui-components/Button';\nimport { Form } from '../../ui-components/Form';\nimport cleanError from '../../util/cleanError';\nimport getEncodedAddress from '../../util/getEncodedAddress';\nimport getExtensionUrl from '../../util/getExtensionUrl';\n\ninterface Props{\n\tclassName?: string\n}\n\nconst APPNAME = process.env.REACT_APP_APPNAME || 'polkassembly';\nconst NETWORK = process.env.REACT_APP_NETWORK || 'kusama';\n\nconst Address = ({ className }: Props): JSX.Element => {\n\tconst currentUser = useContext(UserDetailsContext);\n\tconst [accounts, setAccounts] = useState<InjectedAccountWithMeta[]>([]);\n\tconst [extensionNotAvailable, setExtensionNotAvailable] = useState(false);\n\tconst [addressLinkStartMutation] = useAddressLinkStartMutation();\n\tconst [addressLinkConfirmMutation] = useAddressLinkConfirmMutation();\n\tconst [addressUnlinkMutation] = useAddressUnlinkMutation();\n\tconst { queueNotification } = useContext(NotificationContext);\n\n\tconst handleDetect = async () => {\n\t\tconst extensions = await web3Enable(APPNAME);\n\n\t\tif (extensions.length === 0) {\n\t\t\tsetExtensionNotAvailable(true);\n\t\t\treturn;\n\t\t} else {\n\t\t\tsetExtensionNotAvailable(false);\n\t\t}\n\n\t\tconst allAccounts = await web3Accounts();\n\n\t\tsetAccounts(allAccounts);\n\t};\n\n\tconst handleLink = async (address: InjectedAccountWithMeta['address'], account: InjectedAccountWithMeta) => {\n\n\t\ttry {\n\t\t\tconst injected = await web3FromSource(account.meta.source);\n\t\t\tconst signRaw = injected && injected.signer && injected.signer.signRaw;\n\n\t\t\tif (!signRaw) {\n\t\t\t\treturn console.error('Signer not available');\n\t\t\t}\n\n\t\t\tconst addressLinkStartResult = await addressLinkStartMutation({\n\t\t\t\tvariables: {\n\t\t\t\t\taddress,\n\t\t\t\t\tnetwork: NETWORK\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!addressLinkStartResult || !addressLinkStartResult.data || !addressLinkStartResult.data.addressLinkStart) {\n\t\t\t\treturn console.error('Address link start mutaion failed');\n\t\t\t}\n\n\t\t\tconst { signature } = await signRaw({\n\t\t\t\taddress,\n\t\t\t\tdata: stringToHex(addressLinkStartResult.data.addressLinkStart.sign_message || ''),\n\t\t\t\ttype: 'bytes'\n\t\t\t});\n\n\t\t\tconst addressLinkConfirmResult = await addressLinkConfirmMutation({\n\t\t\t\tvariables: {\n\t\t\t\t\taddress_id: addressLinkStartResult.data.addressLinkStart.address_id || 0,\n\t\t\t\t\tsignature\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (addressLinkConfirmResult.data?.addressLinkConfirm?.token) {\n\t\t\t\thandleTokenChange(addressLinkConfirmResult.data?.addressLinkConfirm?.token);\n\t\t\t}\n\n\t\t\t!currentUser.addresses?.includes(address) && currentUser.setUserDetailsContextState((prevState) => {\n\t\t\t\treturn {\n\t\t\t\t\t...prevState,\n\t\t\t\t\taddresses: [...prevState.addresses, address]\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tqueueNotification({\n\t\t\t\theader: 'Success!',\n\t\t\t\tmessage: addressLinkConfirmResult?.data?.addressLinkConfirm?.message || '',\n\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\tqueueNotification({\n\t\t\t\theader: 'Failed!',\n\t\t\t\tmessage: cleanError(error.message),\n\t\t\t\tstatus: NotificationStatus.ERROR\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleUnlink = async (address: InjectedAccountWithMeta['address']) => {\n\t\ttry {\n\t\t\tconst addressUnlinkConfirmResult = await addressUnlinkMutation({\n\t\t\t\tvariables: {\n\t\t\t\t\taddress\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (addressUnlinkConfirmResult.data?.addressUnlink?.token) {\n\t\t\t\thandleTokenChange(addressUnlinkConfirmResult.data?.addressUnlink?.token);\n\t\t\t}\n\n\t\t\tif (currentUser.addresses?.includes(address)) {\n\t\t\t\tcurrentUser.setUserDetailsContextState((prevState) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\taddresses: prevState?.addresses?.filter((prevAddress) => prevAddress !== address)\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tqueueNotification({\n\t\t\t\theader: 'Success!',\n\t\t\t\tmessage: addressUnlinkConfirmResult?.data?.addressUnlink?.message || '',\n\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\tqueueNotification({\n\t\t\t\theader: 'Failed!',\n\t\t\t\tmessage: cleanError(error.message),\n\t\t\t\tstatus: NotificationStatus.ERROR\n\t\t\t});\n\t\t}\n\t};\n\n\tconst linkIcon = <><Icon name='chain'/>Link</>;\n\tconst unlinkIcon = <><Icon name='broken chain'/>Unlink</>;\n\n\tif (extensionNotAvailable) {\n\t\treturn (\n\t\t\t<Form className={className} standalone={false}>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Field width={16}>\n\t\t\t\t\t\t<ExtensionNotDetected />\n\t\t\t\t\t</Form.Field>\n\t\t\t\t</Form.Group>\n\t\t\t</Form>\n\t\t);\n\t}\n\n\tif (accounts.length === 0) {\n\t\treturn (\n\t\t\t<Form className={className} standalone={false}>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Field width={16}>\n\t\t\t\t\t\t<label>Linked address</label>\n\t\t\t\t\t\t<div className='text-muted'>Associate your account with an on chain address using the <a href={getExtensionUrl()}>Polkadot-js extension</a>.</div>\n\t\t\t\t\t\t<div className='link-button-container'>\n\t\t\t\t\t\t\t<Button primary onClick={handleDetect}>\n\t\t\t\t\t\t\t\t{currentUser?.addresses?.length ? 'Show Linked Addresses' : 'Link Address'}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form.Field>\n\t\t\t\t</Form.Group>\n\t\t\t</Form>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Form className={className} standalone={false}>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Field width={16}>\n\t\t\t\t\t<label className=\"header\">Available Addresses</label>\n\t\t\t\t\t<div className=\"ui list\">\n\t\t\t\t\t\t{accounts.map(account => {\n\t\t\t\t\t\t\tconst address = getEncodedAddress(account.address);\n\n\t\t\t\t\t\t\treturn address &&\n\t\t\t\t\t\t\t\t<Grid key={address}>\n\t\t\t\t\t\t\t\t\t<Grid.Column width={10}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"item\">\n\t\t\t\t\t\t\t\t\t\t\t<AddressComponent className=\"item\" address={address} accountName={account.meta.name || ''} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t\t\t<Grid.Column width={6}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={'social'}\n\t\t\t\t\t\t\t\t\t\t\t\tnegative={currentUser.addresses?.includes(address) ? true : false}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => currentUser.addresses?.includes(address) ? handleUnlink(address) : handleLink(address, account)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{currentUser.addresses?.includes(address) ? unlinkIcon : linkIcon}\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t;}\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t</div>\n\t\t\t\t</Form.Field>\n\t\t\t</Form.Group>\n\t\t</Form>\n\t);\n};\n\nexport default styled(Address)`\n\n\t.button-container {\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tmargin-top: -1.8rem;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { useContext, useEffect,useState } from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nimport { NotificationContext } from '../../context/NotificationContext';\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport { useChangeEmailMutation, useResendVerifyEmailTokenMutation } from '../../generated/graphql';\nimport { handleTokenChange } from '../../services/auth.service';\nimport { NotificationStatus } from '../../types';\nimport Button from '../../ui-components/Button';\nimport FilteredError from '../../ui-components/FilteredError';\nimport { Form } from '../../ui-components/Form';\nimport cleanError from '../../util/cleanError';\n\ninterface Props{\n\tclassName?: string\n}\n\nconst Email = ({ className }: Props): JSX.Element => {\n\tconst [email, setEmail] = useState<string | null | undefined>('');\n\tconst currentUser = useContext(UserDetailsContext);\n\tconst [changeEmailMutation, { loading, error }] = useChangeEmailMutation();\n\tconst [resendVerifyEmailTokenMutation] = useResendVerifyEmailTokenMutation();\n\tconst { queueNotification } = useContext(NotificationContext);\n\n\tuseEffect(() => {\n\t\tsetEmail(currentUser.email);\n\t}, [currentUser.email]);\n\n\tconst onEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => setEmail(event.currentTarget.value);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>):void => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif (email || email === '') {\n\t\t\tchangeEmailMutation({\n\t\t\t\tvariables: {\n\t\t\t\t\temail\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tif (data && data.changeEmail) {\n\t\t\t\t\t\tif (data.changeEmail.message) {\n\t\t\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\t\t\theader: 'Success!',\n\t\t\t\t\t\t\t\tmessage: data.changeEmail.message,\n\t\t\t\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (data.changeEmail.token) {\n\t\t\t\t\t\t\thandleTokenChange(data.changeEmail.token);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentUser.setUserDetailsContextState((prevState) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\t\temail_verified: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}).catch((e) => {\n\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\theader: 'Failed!',\n\t\t\t\t\t\tmessage: cleanError(e.message),\n\t\t\t\t\t\tstatus: NotificationStatus.ERROR\n\t\t\t\t\t});\n\t\t\t\t\tconsole.error('Change email error:', e);\n\t\t\t\t});\n\t\t}\n\t};\n\n\tconst handleResendVerifyEmailTokenClick = (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n\t\tevent.preventDefault();\n\t\tresendVerifyEmailTokenMutation()\n\t\t\t.then(({ data }) => {\n\t\t\t\tif (data && data.resendVerifyEmailToken && data.resendVerifyEmailToken.message) {\n\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\theader: 'Success!',\n\t\t\t\t\t\tmessage: data.resendVerifyEmailToken.message,\n\t\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}).catch((e) => {\n\t\t\t\tqueueNotification({\n\t\t\t\t\theader: 'Failed!',\n\t\t\t\t\tmessage: cleanError(e.message),\n\t\t\t\t\tstatus: NotificationStatus.ERROR\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<Form standalone={false}>\n\t\t\t<Form.Group className={className}>\n\t\t\t\t<Form.Field width={10}>\n\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={email || ''}\n\t\t\t\t\t\tonChange={onEmailChange}\n\t\t\t\t\t\tplaceholder='mail@example.com'\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t/>\n\t\t\t\t\t{error && <FilteredError text={error.message}/>}\n\t\t\t\t\t{email && !currentUser.email_verified &&\n\t\t\t\t\t\t<div className={'warning-text'}>\n\t\t\t\t\t\t\t<Icon name='warning circle' />Your email is not verified. <a className='text-muted' href='#' onClick={handleResendVerifyEmailTokenClick}>Resend verification email.</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field width={6}>\n\t\t\t\t\t<label>&nbsp;</label>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsecondary\n\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t>\n\t\t\t\t\tChange\n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Field>\n\t\t\t</Form.Group>\n\t\t</Form>\n\t);\n};\n\nexport default styled(Email)`\n\n\t.warning-text {\n\t\tmargin-top: 0.5rem;\n\t\tcolor: red_secondary;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React, { useContext, useEffect,useState } from 'react';\n\nimport { NotificationContext } from '../../context/NotificationContext';\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport { useChangeNameMutation } from '../../generated/graphql';\nimport { handleTokenChange } from '../../services/auth.service';\nimport { NotificationStatus } from '../../types';\nimport Button from '../../ui-components/Button';\nimport FilteredError from '../../ui-components/FilteredError';\nimport { Form } from '../../ui-components/Form';\nimport cleanError from '../../util/cleanError';\n\nconst Fullname = (): JSX.Element => {\n\tconst [name, setName] = useState<string | null | undefined>('');\n\tconst currentUser = useContext(UserDetailsContext);\n\tconst [changeNameMutation, { loading, error }] = useChangeNameMutation();\n\tconst { queueNotification } = useContext(NotificationContext);\n\n\tuseEffect(() => {\n\t\tsetName(currentUser.name);\n\t}, [currentUser.name]);\n\n\tconst onNameChange = (event: React.ChangeEvent<HTMLInputElement>) => setName(event.currentTarget.value);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>):void => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif (name || name === '') {\n\t\t\tchangeNameMutation({\n\t\t\t\tvariables: {\n\t\t\t\t\tnewName: name\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tif (data && data.changeName && data.changeName.message) {\n\t\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\t\theader: 'Success!',\n\t\t\t\t\t\t\tmessage: data.changeName.message,\n\t\t\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (data && data.changeName && data.changeName.token) {\n\t\t\t\t\t\thandleTokenChange(data.changeName.token);\n\t\t\t\t\t}\n\t\t\t\t\tcurrentUser.setUserDetailsContextState((prevState) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}).catch((e) => {\n\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\theader: 'Failed!',\n\t\t\t\t\t\tmessage: cleanError(e.message),\n\t\t\t\t\t\tstatus: NotificationStatus.ERROR\n\t\t\t\t\t});\n\t\t\t\t\tconsole.error('change name error', e);\n\t\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<Form standalone={false}>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Field width={10}>\n\t\t\t\t\t<label>Display Name</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={name || ''}\n\t\t\t\t\t\tonChange={onNameChange}\n\t\t\t\t\t\tplaceholder='username'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t/>\n\t\t\t\t\t{error && <FilteredError text={error.message}/>}\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field width={6}>\n\t\t\t\t\t<label>&nbsp;</label>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsecondary\n\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t>\n\t\t\t\t\tChange\n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Field>\n\t\t\t</Form.Group>\n\t\t</Form>\n\t);\n};\n\nexport default Fullname;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React, { useContext,useState } from 'react';\n\nimport { NotificationContext } from '../../context/NotificationContext';\nimport { useChangePasswordMutation } from '../../generated/graphql';\nimport { NotificationStatus } from '../../types';\nimport Button from '../../ui-components/Button';\nimport FilteredError from '../../ui-components/FilteredError';\nimport { Form } from '../../ui-components/Form';\nimport cleanError from '../../util/cleanError';\n\nconst Password = (): JSX.Element => {\n\tconst [currentPassword, setCurrentPassword] = useState<string | null | undefined>('');\n\tconst [newPassword, setNewPassword] = useState<string | null | undefined>('');\n\tconst { queueNotification } = useContext(NotificationContext);\n\tconst [changePasswordMutation, { loading, error }] = useChangePasswordMutation();\n\n\tconst onCurrentPasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => setCurrentPassword(event.currentTarget.value);\n\tconst onNewPasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => setNewPassword(event.currentTarget.value);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>):void => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif (currentPassword && newPassword) {\n\t\t\tchangePasswordMutation({\n\t\t\t\tvariables: {\n\t\t\t\t\tnewPassword,\n\t\t\t\t\toldPassword: currentPassword\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tif (data && data.changePassword && data.changePassword.message) {\n\t\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\t\theader: 'Success!',\n\t\t\t\t\t\t\tmessage: data.changePassword.message,\n\t\t\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}).catch((e) => {\n\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\theader: 'Failed!',\n\t\t\t\t\t\tmessage: cleanError(e.message),\n\t\t\t\t\t\tstatus: NotificationStatus.ERROR\n\t\t\t\t\t});\n\t\t\t\t\tconsole.error('change password error', e);\n\t\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<Form standalone={false}>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Field width={10}>\n\t\t\t\t\t<label>Current Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={currentPassword || ''}\n\t\t\t\t\t\tonChange={onCurrentPasswordChange}\n\t\t\t\t\t\tplaceholder='Current Password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t</Form.Group>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Field width={10}>\n\t\t\t\t\t<label>New Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={newPassword || ''}\n\t\t\t\t\t\tonChange={onNewPasswordChange}\n\t\t\t\t\t\tplaceholder='New Password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t/>\n\t\t\t\t\t{error && <FilteredError text={error.message}/>\n\t\t\t\t\t}\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field width={6}>\n\t\t\t\t\t<label>&nbsp;</label>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsecondary\n\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t>\n\t\t\t\t\t\tChange\n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Field>\n\t\t\t</Form.Group>\n\t\t</Form>\n\t);\n};\n\nexport default Password;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { useContext, useEffect,useState } from 'react';\n\nimport { NotificationContext } from '../../context/NotificationContext';\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport { useChangeUsernameMutation } from '../../generated/graphql';\nimport { handleTokenChange } from '../../services/auth.service';\nimport { NotificationStatus } from '../../types';\nimport Button from '../../ui-components/Button';\nimport FilteredError from '../../ui-components/FilteredError';\nimport { Form } from '../../ui-components/Form';\nimport cleanError from '../../util/cleanError';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst Username = ({ className }:Props): JSX.Element => {\n\tconst [username, setUsername] = useState<string | null | undefined>('');\n\tconst currentUser = useContext(UserDetailsContext);\n\tconst [changeUsernameMutation, { loading, error }] = useChangeUsernameMutation();\n\tconst { queueNotification } = useContext(NotificationContext);\n\n\tuseEffect(() => {\n\t\tsetUsername(currentUser.username);\n\t}, [currentUser.username]);\n\n\tconst onUserNameChange = (event: React.ChangeEvent<HTMLInputElement>) => setUsername(event.currentTarget.value);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>):void => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif (username) {\n\t\t\tchangeUsernameMutation({\n\t\t\t\tvariables: {\n\t\t\t\t\tusername\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tif (data && data.changeUsername && data.changeUsername.message) {\n\t\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\t\theader: 'Success!',\n\t\t\t\t\t\t\tmessage: data.changeUsername.message,\n\t\t\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (data && data.changeUsername && data.changeUsername.token) {\n\t\t\t\t\t\thandleTokenChange(data.changeUsername.token);\n\t\t\t\t\t}\n\t\t\t\t\tcurrentUser.setUserDetailsContextState((prevState) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\t\tusername\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}).catch((e) => {\n\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\theader: 'Failed!',\n\t\t\t\t\t\tmessage: cleanError(e.message),\n\t\t\t\t\t\tstatus: NotificationStatus.ERROR\n\t\t\t\t\t});\n\t\t\t\t\tconsole.error('change username error', e);\n\t\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<Form standalone={false} className={className}>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Field width={10}>\n\t\t\t\t\t<label>Username</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={username || ''}\n\t\t\t\t\t\tonChange={onUserNameChange}\n\t\t\t\t\t\tplaceholder='username'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t/>\n\t\t\t\t\t{error && <FilteredError text={error.message}/>}\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field width={6}>\n\t\t\t\t\t<label>&nbsp;</label>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsecondary\n\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t>\n\t\t\t\t\tChange\n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Field>\n\t\t\t</Form.Group>\n\t\t</Form>\n\t);\n};\n\nexport default styled(Username)`\n\t.button {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: left;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React from 'react';\nimport { Divider,Grid } from 'semantic-ui-react';\n\nimport Address from './address';\nimport Email from './email';\nimport Fullname from './fullname';\nimport Password from  './password';\nimport Username from './username';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst Settings = ({ className }:Props): JSX.Element => {\n\treturn (\n\t\t<Grid>\n\t\t\t<Grid.Column className={className} mobile={16} tablet={12} computer={12} largeScreen={10} widescreen={10}>\n\t\t\t\t<h2>Settings</h2>\n\t\t\t\t<Divider/>\n\t\t\t\t<Username/>\n\t\t\t\t<Fullname/>\n\t\t\t\t<Divider/>\n\t\t\t\t<Email/>\n\t\t\t\t<Divider/>\n\t\t\t\t<Password/>\n\t\t\t\t<Divider/>\n\t\t\t\t<Address/>\n\t\t\t</Grid.Column>\n\t\t\t<Grid.Column only='computer' computer={4} largeScreen={6} widescreen={6}/>\n\t\t</Grid>\n\t);\n};\n\nexport default styled(Settings)`\n\tbackground-color: white;\n\tpadding: 2rem 3rem 3rem 3rem!important;\n\tborder-style: solid;\n\tborder-width: 1px;\n\tborder-color: grey_light;\n\n\t.ui.divider, .ui.divider:not(.vertical):not(.horizontal) {\n\t\tmargin: 3rem 0 2rem 0;\n\t\tborder-top-style: solid;\n\t\tborder-top-width: 1px;\n\t\tborder-top-color: grey_light;\n\t\tborder-bottom: none;\n\t}\n\n\t.button {\n\t\tmargin-top: 0.2rem;\n\t}\n\n\t.ui.form:not(.unstackable)\n\t.fields:not(.unstackable)>.ten.wide.field {\n\n\t\t@media only screen and (max-width: 767px)  {\n\t\t\twidth: 70%!important;\n\t\t}\n\n\t\t@media only screen and (max-width: 576px) {\n\t\t\twidth: 60%!important;\n\t\t}\n\t}\n\n\t.ui.form:not(.unstackable)\n\t.fields:not(.unstackable)>.six.wide.field {\n\n\t\t@media only screen and (max-width: 767px)  {\n\t\t\twidth: 30%!important;\n\t\t}\n\n\t\t@media only screen and (max-width: 576px) {\n\t\t\twidth: 40%!important;\n\t\t}\n\t}\n\n\t@media only screen and (max-width: 576px) {\n\t\tpadding: 2rem!important;\n\n\t\t.ui.form {\n\t\t\tmargin-top: 0rem;\n        \tpadding: 0rem;\n\t\t}\n\n\t\tbutton {\n\t\t\tpadding: 0.8rem 1rem;\n\t\t\tborder-radius: 0.5rem;\n\t\t}\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { useContext } from 'react';\nimport { FieldError,useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { Grid  } from 'semantic-ui-react';\n\nimport { ModalContext } from '../../context/ModalContext';\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport { useSignupMutation } from '../../generated/graphql';\nimport { useRouter } from '../../hooks';\nimport { handleLoginUser } from '../../services/auth.service';\nimport Button from '../../ui-components/Button';\nimport FilteredError from '../../ui-components/FilteredError';\nimport { Form } from '../../ui-components/Form';\nimport HelperTooltip from '../../ui-components/HelperTooltip';\nimport messages from '../../util/messages';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst SignupForm = ({ className }:Props): JSX.Element => {\n\tconst { history } = useRouter();\n\tconst currentUser = useContext(UserDetailsContext);\n\tconst [signupMutation, { loading, error }] = useSignupMutation();\n\tconst { errors, handleSubmit, register } = useForm();\n\n\tconst { setModal } = useContext(ModalContext);\n\n\tconst handleSubmitForm = (data:Record<string, any>):void => {\n\t\tconst { email, name, password, username } = data;\n\n\t\tif (username && password){\n\t\t\tsignupMutation({\n\t\t\t\tvariables: {\n\t\t\t\t\temail,\n\t\t\t\t\tname,\n\t\t\t\t\tpassword,\n\t\t\t\t\tusername\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tif (data && data.signup && data.signup.token && data.signup.user) {\n\t\t\t\t\t\thandleLoginUser({ token: data.signup.token, user: data.signup.user }, currentUser);\n\t\t\t\t\t\tif (email) {\n\t\t\t\t\t\t\tsetModal({ content: 'We sent you an email to verify your address. Click on the link in the email.' ,title: 'You\\'ve got some mail' });\n\t\t\t\t\t\t}\n\t\t\t\t\t\thistory.push('/');\n\t\t\t\t\t}}\n\n\t\t\t\t).catch((e) => {\n\t\t\t\t\tconsole.error('Login error', e);\n\t\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<Grid className={className}>\n\t\t\t<Grid.Column only='tablet computer' tablet={2} computer={4} largeScreen={4} widescreen={4}/>\n\t\t\t<Grid.Column mobile={16} tablet={12} computer={8} largeScreen={8} widescreen={8}>\n\t\t\t\t<Form onSubmit={handleSubmit(handleSubmitForm)}>\n\t\t\t\t\t<h3>Sign Up</h3>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Field width={16}>\n\t\t\t\t\t\t\t<label>Username<sup>*</sup></label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName={errors.username ? 'error' : ''}\n\t\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\t\tplaceholder='john'\n\t\t\t\t\t\t\t\tref={register({ maxLength:30, minLength:3, pattern: /^[A-Za-z0-9._-]*$/, required: true })}\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{(errors.username as FieldError)?.type === 'maxLength' && <span className={'errorText'}>{messages.VALIDATION_USERNAME_MAXLENGTH_ERROR}</span>}\n\t\t\t\t\t\t\t{(errors.username as FieldError)?.type === 'minLength' && <span className={'errorText'}>{messages.VALIDATION_USERNAME_MINLENGTH_ERROR}</span>}\n\t\t\t\t\t\t\t{(errors.username as FieldError)?.type === 'pattern' && <span className={'errorText'}>{messages.VALIDATION_USERNAME_PATTERN_ERROR}</span>}\n\t\t\t\t\t\t\t{(errors.username as FieldError)?.type === 'required' && <span className={'errorText'}>{messages.VALIDATION_USERNAME_REQUIRED_ERROR}</span>}\n\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Field width={16}>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tDisplay Name\n\t\t\t\t\t\t\t\t<HelperTooltip\n\t\t\t\t\t\t\t\t\tcontent='This name is used as a more readable alternative to your username.'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName={errors.name ? 'error' : ''}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tplaceholder='Firstname Lastname'\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tref={register({ maxLength: 30, minLength: 3, required: false })}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{(errors.name as FieldError)?.type === 'maxLength' && <span className={'errorText'}>{messages.VALIDATION_NAME_MAXLENGTH_ERROR}</span>}\n\t\t\t\t\t\t\t{(errors.name as FieldError)?.type === 'minLength' && <span className={'errorText'}>{messages.VALIDATION_NAME_MINLENGTH_ERROR}</span>}\n\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Field width={16}>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t\t\t<HelperTooltip\n\t\t\t\t\t\t\t\t\tcontent='Your email is used for password recovery or discussion notifications.'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName={errors.email ? 'error' : ''}\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\tplaceholder='john@doe.com'\n\t\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\t\tpattern: /^[A-Z0-9_'%=+!`#~$*?^{}&|-]+([.][A-Z0-9_'%=+!`#~$*?^{}&|-]+)*@[A-Z0-9-]+(\\.[A-Z0-9-]+)+$/i\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{errors.email && <span className={'errorText'}>{messages.VALIDATION_EMAIL_ERROR}</span>}\n\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Field width={16}>\n\t\t\t\t\t\t\t<label>Password<sup>*</sup></label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName={errors.password ? 'error' : ''}\n\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t\t\t\tref={register({ minLength: 6, required: true })}\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{errors.password && <span className={'errorText'}>{messages.VALIDATION_PASSWORD_ERROR}</span>}\n\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t</Form.Group >\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label className='checkbox-label'>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName={errors.termsandconditions ? 'error' : ''}\n\t\t\t\t\t\t\t\tname='termsandconditions'\n\t\t\t\t\t\t\t\tvalue='yes'\n\t\t\t\t\t\t\t\tref={register({ required: true })}\n\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\tI have read and agree to the terms of the <Link to='/terms-and-conditions'>Polkassembly end user agreement</Link>.\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t{errors.termsandconditions && <div className={'errorText'}>Please agree to the terms of the Polkassembly end user agreement.</div>}\n\t\t\t\t\t</Form.Field>\n\t\t\t\t\t<div>To see how we use your personal data please see our <Link to='/privacy'>privacy notice</Link>.</div>\n\t\t\t\t\t<div className={'mainButtonContainer'}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\tonClick={handleSubmitForm}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign-up\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{error && <FilteredError text={error.message}/>}\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</Grid.Column>\n\t\t</Grid>\n\t);\n};\n\nexport default styled(SignupForm)`\n\n\ta {\n\t\t\tcolor: grey_primary;\n\t\t\tborder-bottom-style: solid;\n\t\t\tborder-bottom-width: 1px;\n\t\t\tborder-bottom-color: grey_primary;\n\t\t}\n\tsup {\n\t\tcolor: grey_primary;\n\t}\n\t.mainButtonContainer{\n\t\talign-items: center;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\tmargin-top: 3rem;\n\t}\n\n\tinput.error {\n\t\tborder-color: red_secondary !important;\n\t}\n\n\t.errorText {\n\t\tcolor: red_secondary;\n\t}\n\n\t.checkbox-label {\n\t\tposition: relative;\n\t\tbottom: 0.1rem;\n\t\tdisplay: inline-block !important;\n\t\tfont-size: sm !important;\n\t\tfont-weight: 400 !important;\n\t\tcolor: grey_primary !important;\n\t}\n\n\t.ui.form input[type=checkbox]{\n\t\tposition: relative;\n\t\tbottom: 0.2rem;\n\t\tmargin-right: 1rem;\n\t\tvertical-align: middle;\n\t}\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Post from '../../components/Post/Post';\nimport { useTreasuryProposalPostAndCommentsQuery } from '../../generated/graphql';\nimport { useRedirectMotion } from '../../hooks';\nimport FilteredError from '../../ui-components/FilteredError';\nimport Loader from '../../ui-components/Loader';\n\nexport default () => {\n\tconst { id } = useParams();\n\tconst idNumber = Number(id) || 0;\n\tconst { data, error, refetch } = useTreasuryProposalPostAndCommentsQuery({ variables: { 'id': idNumber } });\n\tuseRedirectMotion(data?.posts?.[0]?.onchain_link?.onchain_motion_id);\n\n\tif (error) return <FilteredError text={error.message}/>;\n\n\tif (data) return <Post data={data} isTreasuryProposal refetch={refetch} />;\n\n\treturn <Loader/>;\n};\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { useEffect } from 'react';\n\nimport useRouter from './useRouter';\n\nexport default function (motionId?: number | null) {\n\n\tconst { history } = useRouter();\n\n\tuseEffect(( ) => {\n\t\tif (motionId || motionId === 0) {\n\t\t\thistory.push(`/motion/${motionId}`);\n\t\t}\n\t});\n}\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { useContext,useEffect } from 'react';\nimport { Grid,Header, Icon, Segment } from 'semantic-ui-react';\n\nimport { NotificationContext } from '../../context/NotificationContext';\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport { useUndoEmailChangeMutation } from '../../generated/graphql';\nimport { useRouter } from '../../hooks';\nimport { handleTokenChange } from '../../services/auth.service';\nimport { NotificationStatus } from '../../types';\nimport FilteredError from '../../ui-components/FilteredError';\nimport Loader from '../../ui-components/Loader';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst UndoEmailChange = ({ className }:Props): JSX.Element => {\n\tconst router = useRouter();\n\tconst currentUser = useContext(UserDetailsContext);\n\tconst { queueNotification } = useContext(NotificationContext);\n\tconst [undoEmailChangeMutation, { error }] = useUndoEmailChangeMutation({\n\t\tvariables: {\n\t\t\ttoken: router.query.token\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tundoEmailChangeMutation().then(({ data }) => {\n\t\t\tif (data && data.undoEmailChange) {\n\t\t\t\tif (data.undoEmailChange.token) {\n\t\t\t\t\thandleTokenChange(data.undoEmailChange.token);\n\t\t\t\t}\n\n\t\t\t\tif (data.undoEmailChange.email) {\n\t\t\t\t\tcurrentUser.setUserDetailsContextState((prevState) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\t\temail: data.undoEmailChange && data.undoEmailChange.email,\n\t\t\t\t\t\t\temail_verified: false\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (data.undoEmailChange.message) {\n\t\t\t\t\tqueueNotification({\n\t\t\t\t\t\theader: 'Success!',\n\t\t\t\t\t\tmessage: data.undoEmailChange.message,\n\t\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\trouter.history.push('/');\n\t\t\t}\n\t\t}).catch((e) => {\n\t\t\tconsole.error('Undo email Change error', e);\n\t\t});\n\t},[currentUser, queueNotification, router.history, undoEmailChangeMutation]);\n\n\treturn (\n\t\t<>\n\t\t\t{ error && error.message\n\t\t\t\t? <Grid className={className}>\n\t\t\t\t\t<Grid.Column only='tablet computer' tablet={2} computer={4} largeScreen={5} widescreen={5}/>\n\t\t\t\t\t<Grid.Column mobile={16} tablet={12} computer={8} largeScreen={6} widescreen={6}>\n\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t<Header as='h2' icon>\n\t\t\t\t\t\t\t\t<Icon name='ambulance' />\n\t\t\t\t\t\t\t\t<FilteredError text={error.message}/>\n\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid>\n\t\t\t\t: <Loader/>\n\t\t\t}\n\t\t</>\n\t);\n};\n\nexport default styled(UndoEmailChange)`\n\ttext-align: center\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport styled from '@xstyled/styled-components';\nimport React, { useContext,useEffect } from 'react';\nimport { Grid,Header, Icon, Segment } from 'semantic-ui-react';\n\nimport { NotificationContext } from '../../context/NotificationContext';\nimport { UserDetailsContext } from '../../context/UserDetailsContext';\nimport { useVerifyEmailMutation } from '../../generated/graphql';\nimport { useRouter } from '../../hooks';\nimport { handleTokenChange } from '../../services/auth.service';\nimport { NotificationStatus } from '../../types';\nimport FilteredError from '../../ui-components/FilteredError';\nimport Loader from '../../ui-components/Loader';\n\ninterface Props {\n\tclassName?: string\n}\n\nconst VerifyEmail = ({ className }:Props): JSX.Element => {\n\tconst router = useRouter();\n\tconst currentUser = useContext(UserDetailsContext);\n\tconst { queueNotification } = useContext(NotificationContext);\n\tconst [verifyEmailMutation, { error }] = useVerifyEmailMutation({\n\t\tvariables: {\n\t\t\ttoken: router.query.token\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tverifyEmailMutation().then(({ data }) => {\n\t\t\tif (data && data.verifyEmail && data.verifyEmail.message && data.verifyEmail.token) {\n\t\t\t\tif (data.verifyEmail.token) {\n\t\t\t\t\thandleTokenChange(data.verifyEmail.token);\n\t\t\t\t}\n\t\t\t\tcurrentUser.setUserDetailsContextState((prevState) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\temail_verified: true\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tqueueNotification({\n\t\t\t\t\theader: 'Success!',\n\t\t\t\t\tmessage: data.verifyEmail.message,\n\t\t\t\t\tstatus: NotificationStatus.SUCCESS\n\t\t\t\t});\n\t\t\t\trouter.history.push('/');\n\t\t\t}\n\t\t}).catch((e) => {\n\t\t\tconsole.error('Email verification error', e);\n\t\t});\n\t},[currentUser, queueNotification, router.history, verifyEmailMutation]);\n\n\treturn (\n\t\t<>\n\t\t\t{ error && error.message\n\t\t\t\t? <Grid className={className}>\n\t\t\t\t\t<Grid.Column only='tablet computer' tablet={2} computer={4} largeScreen={5} widescreen={5}/>\n\t\t\t\t\t<Grid.Column mobile={16} tablet={12} computer={8} largeScreen={6} widescreen={6}>\n\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t<Header as='h2' icon>\n\t\t\t\t\t\t\t\t<Icon name='ambulance' />\n\t\t\t\t\t\t\t\t<FilteredError text={error.message}/>\n\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid>\n\t\t\t\t: <Loader/>\n\t\t\t}\n\t\t</>);\n};\n\nexport default styled(VerifyEmail)`\n\ttext-align: center\n`;\n","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nexport const theme = {\n\tcolors: {\n\t\tblack_full: '#000',\n\t\tblack_primary: '#2E2F30',\n\t\tblack_text: '#53595C',\n\t\tblue_primary: '#4D9999',\n\t\tblue_primary_transparent: 'rgba(77, 153, 153, 0.05)',\n\t\tblue_secondary: '#EBF0F5',\n\t\tgreen_primary: '#4DD18F',\n\t\tgreen_primary_transparent: 'rgba(4, 221, 24, 0.05)',\n\t\tgreen_secondary: '#399969',\n\t\tgrey_app_background: '#F5F7F8',\n\t\tgrey_border: '#DDE4ED',\n\t\tgrey_light: '#EBF0F5',\n\t\tgrey_primary: '#777B80',\n\t\tgrey_secondary: '#A6ACB3',\n\t\tpink_primary: '#E5007A',\n\t\tpink_secondary: '#C40061',\n\t\tred_light: '#FFF1F0',\n\t\tred_primary: '#FF5A47',\n\t\tred_primary_transparent: 'rgba(255, 90, 71, 0.05)',\n\t\tred_secondary: '#D94C3D',\n\t\twhite: '#FFF',\n\t\twhite_transparent: 'rgba(255, 255, 255, 0.2)'\n\t},\n\tfontSizes: {\n\t\tinput_text_size: '1.3rem',\n\t\tlg: '1.8rem',\n\t\tmd: '1.5rem',\n\t\tsm: '1.2rem',\n\t\txl: '3rem',\n\t\txs: '1.1rem'\n\t},\n\tfonts: {\n\t\tfont_default: 'Roboto',\n\t\tfont_mono: 'Roboto Mono',\n\t\tfont_secondary: 'Work Sans'\n\t},\n\tradii: {\n\t\tbutton_radius: '0.3rem'\n\t},\n\tshadows: {\n\t\tbox_shadow_secondary_grey: '0 0 0 1px #706D6D inset',\n\t\tbox_shadow_secondary_red: '0 0 0 1px #D94C3D inset'\n\t}\n};","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport 'semantic-ui-css/semantic.min.css';\nimport '../fonts.css'; /* as createGlobalStyle is not importing fonts*/\n\nimport { createGlobalStyle } from '@xstyled/styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n    html {\n        font-size: 62.5%;\n    }\n\n    body {\n        margin: 0;\n        font-family: font_default, 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Oxygen',\n            'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n            sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        background-color: grey_app_background;\n        color: black_text;\n    }\n\n    pre {\n        display: inline-block;\n        max-width: 100%;\n        white-space: pre-wrap;\n    }\n\n    code {\n        display: inline-block;\n        max-width: 100%;\n        font-family: font_mono, source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n        monospace;\n        background-color: grey_light;\n        color: black_primary;\n        font-size: sm;\n    }\n\n    ul {\n        padding: 0;\n    }\n\n    a:hover {\n        text-decoration: none;\n    }\n\n    .container-fluid {\n        max-width: 1200px;\n        padding: 0 2.5rem 0 2.5rem;\n        margin: 3.75rem auto 0 auto;\n    }\n\n    #page-container {\n        position: relative;\n        min-height: 100vh;\n    }\n\n    .ui.container {\n        margin: 4rem auto 0 auto;\n        padding-bottom: 8rem;\n    }\n\n    h1, h2, h3, h4, h5, h6 {\n        color: black_primary;\n        font-family: font_default;\n        line-height: 100%;\n        margin-top: 0;\n    }\n\n    h1, h2, h3 {\n        font-weight: 400;\n        font-size: xl;\n    }\n\n    h3 {\n        font-weight: 400;\n    }\n\n    h4, h5, h6 {\n        font-weight: 500; \n    }\n\n    h1 {\n        margin-bottom: 3rem;\n    }\n\n    h2 {\n        margin-bottom: 1.2rem;\n    }\n\n    h3, h4 {\n        font-size: lg;\n        margin-bottom: 1.2rem;\n    }\n\n    h5, h6 {\n        font-size: md;\n        margin-bottom: 0.4rem;\n    }\n\n    strong {\n        font-weight: 500;\n    }\n\n    ::selection {\n        background-color: black_primary;\n        color: white;\n    }\n\n    .ui.dropdown .menu, .ui.dropdown .menu>.item {\n        font-size: sm;\n    }\n\n    @media (max-width: 1200px) {\n        .container-fluid {\n        padding: 0 2.5rem 0 2.5rem;\n        }\n\n        .ui.grid {\n            margin-left: 0;\n            margin-right: 0;\n        }\n    }\n\n    @media only screen and (max-width: 768px) {\n        .container-fluid {\n        margin: 2.5rem auto 0 auto;\n        padding: 0 1.25rem 0 1.25rem;\n        }\n\n        .ui.container, .ui.grid>.column:not(.row) {\n            padding-left: 0;\n            padding-right: 0;\n        }\n    }\n\n    @media only screen and (max-width: 576px) {\n        .container-fluid {\n        padding:0;\n        }\n\n        .ui.grid, .ui.container {\n            margin-top: 0rem!important;\n            margin-left: 0!important;\n            margin-right: 0!important;\n        }\n\n        h3 {\n            font-size: 2.1rem;\n        }\n    }\n`;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { ThemeProvider } from '@xstyled/styled-components';\nimport React from 'react';\nimport { BrowserRouter as Router, Route,Switch } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\n\nimport Apollo from './components/Apollo';\nimport Footer from './components/Footer';\nimport MenuBar from './components/MenuBar';\nimport Modal from './components/Modal';\nimport Notifications from './components/Notifications';\nimport { ApiContextProvider } from './context/ApiContext';\nimport { ModalProvider } from './context/ModalContext';\nimport { NotificationProvider } from './context/NotificationContext';\nimport { UserDetailsProvider } from './context/UserDetailsContext';\nimport CreatePost from './screens/CreatePost';\nimport PostDiscussion from './screens/DiscussionPost';\nimport Discussions from './screens/Discussions';\nimport Home from './screens/Home';\nimport { PrivacyPolicy, TermsAndConditions, TermsOfWebsite } from './screens/LegalDocuments';\nimport LoginForm from './screens/LoginForm';\nimport PostMotion from './screens/MotionPost';\nimport NotFound from './screens/NotFound';\nimport NotificationSettings from './screens/NotificationSettings';\nimport OnChain from './screens/OnChain';\nimport PostProposal from './screens/ProposalPost';\nimport PostReferendum from './screens/ReferendumPost';\nimport RequestResetPassword from './screens/RequestResetPassword';\nimport ResetPassword from './screens/RequestResetPassword/ResetPassword';\nimport Settings from './screens/Settings';\nimport SignupForm from './screens/SignupForm';\nimport PostTreasury from './screens/TreasuryPost';\nimport UndoEmailChange from './screens/UndoEmailChange';\nimport VerifyEmail from './screens/VerifyEmail';\nimport { theme } from './themes/theme';\nimport { GlobalStyle } from './ui-components/GlobalStyle';\n\nconst App = () => {\n\n\treturn (\n\t\t<>\n\t\t\t<Router>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<NotificationProvider>\n\t\t\t\t\t\t<ModalProvider>\n\t\t\t\t\t\t\t<UserDetailsProvider>\n\t\t\t\t\t\t\t\t<ApiContextProvider>\n\t\t\t\t\t\t\t\t\t<Apollo>\n\t\t\t\t\t\t\t\t\t\t<GlobalStyle />\n\t\t\t\t\t\t\t\t\t\t<Notifications/>\n\t\t\t\t\t\t\t\t\t\t<Modal/>\n\t\t\t\t\t\t\t\t\t\t<div id='page-container'>\n\t\t\t\t\t\t\t\t\t\t\t<MenuBar />\n\t\t\t\t\t\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Home/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route path=\"/discussions\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Discussions/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LoginForm/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route path=\"/post/create\" >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CreatePost/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/motion/:id\" >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PostMotion/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/proposal/:id\" >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PostProposal/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/referendum/:id\" >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PostReferendum/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/treasury/:id\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PostTreasury/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/post/:id\" >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PostDiscussion/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route path=\"/onchain\" >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<OnChain/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route path=\"/request-reset-password\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RequestResetPassword/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route path=\"/reset-password/:token\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ResetPassword/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route path=\"/signup\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SignupForm/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route path=\"/verify-email/:token\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<VerifyEmail/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route path=\"/undo-email-change/:token\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<UndoEmailChange/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route path=\"/settings\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Settings/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route path=\"/notification-settings\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<NotificationSettings/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route path=\"/terms-and-conditions\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TermsAndConditions/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route path=\"/terms-of-website\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TermsOfWebsite/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route path=\"/privacy\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PrivacyPolicy/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Route path=\"*\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<NotFound/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t\t\t\t<Footer />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Apollo>\n\t\t\t\t\t\t\t\t</ApiContextProvider>\n\t\t\t\t\t\t\t</UserDetailsProvider>\n\t\t\t\t\t\t</ModalProvider>\n\t\t\t\t\t</NotificationProvider>\n\t\t\t\t</ThemeProvider>\n\t\t\t</Router>\n\t\t</>\n\t);\n};\n\nexport default App;","// Copyright 2019-2020 @paritytech/polkassembly authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/polkassembly-logo.aa0e69ae.png\";"],"sourceRoot":""}